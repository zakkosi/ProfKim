{
  "doc_id": "pages_182_184",
  "text": "160\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\n(c)\n(d)\nFigure 3.41 Laplacian pyramid blending (Burt and Adelson 1983b) c⃝1983 ACM: (a) orig-\ninal image of apple, (b) original image of orange, (c) regular splice, (d) pyramid blend.\n3.5.5 Application: Image blending\nOne of the most engaging and fun applications of the Laplacian pyramid presented in Sec-\ntion 3.5.3 is the creation of blended composite images, as shown in Figure 3.41 (Burt and\nAdelson 1983b). While splicing the apple and orange images together along the midline\nproduces a noticeable cut, splining them together (as Burt and Adelson (1983b) called their\nprocedure) creates a beautiful illusion of a truly hybrid fruit. The key to their approach is\nthat the low-frequency color variations between the red apple and the orange are smoothly\nblended, while the higher-frequency textures on each fruit are blended more quickly to avoid\n“ghosting” effects when two textures are overlaid.\nTo create the blended image, each source image is ﬁrst decomposed into its own Lapla-\ncian pyramid (Figure 3.42, left and middle columns). Each band is then multiplied by a\nsmooth weighting function whose extent is proportional to the pyramid level. The simplest\nand most general way to create these weights is to take a binary mask image (Figure 3.43c)\nand to construct a Gaussian pyramid from this mask. Each Laplacian pyramid image is then\n3.5 Pyramids and wavelets\n161\n(a)\n(b)\n(c)\n(d)\n(e)\n(f)\n(g)\n(h)\n(i)\n(j)\n(k)\n(l)\nFigure 3.42 Laplacian pyramid blending details (Burt and Adelson 1983b) c⃝1983 ACM.\nThe ﬁrst three rows show the high, medium, and low frequency parts of the Laplacian pyramid\n(taken from levels 0, 2, and 4). The left and middle columns show the original apple and\norange images weighted by the smooth interpolation functions, while the right column shows\nthe averaged contributions.\n162\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\n(c)\n(d)\nFigure 3.43 Laplacian pyramid blend of two images of arbitrary shape (Burt and Adelson\n1983b) c⃝1983 ACM: (a) ﬁrst input image; (b) second input image; (c) region mask; (d)\nblended image.\nmultiplied by its corresponding Gaussian mask and the sum of these two weighted pyramids\nis then used to construct the ﬁnal image (Figure 3.42, right column).\nFigure 3.43 shows that this process can be applied to arbitrary mask images with sur-\nprising results. It is also straightforward to extend the pyramid blend to an arbitrary number\nof images whose pixel provenance is indicated by an integer-valued label image (see Exer-\ncise 3.20). This is particularly useful in image stitching and compositing applications, where\nthe exposures may vary between different images, as described in Section 9.3.4.\n3.6 Geometric transformations\nIn the previous sections, we saw how interpolation and decimation could be used to change\nthe resolution of an image. In this section, we look at how to perform more general transfor-\nmations, such as image rotations or general warps. In contrast to the point processes we saw\nin Section 3.1, where the function applied to an image transforms the range of the image,\ng(x) = h(f(x)),\n(3.87)",
  "image_path": "page_183.jpg",
  "pages": [
    182,
    183,
    184
  ]
}