{
  "doc_id": "pages_277_279",
  "text": "4.3 Lines\n255\n(a)\n(b)\n(c)\nFigure 4.45\nReal-world vanishing points: (a) architecture (Sinha, Steedly, Szeliski et al.\n2008), (b) furniture (Miˇcuˇs`ık, Wildenauer, and Koˇseck´a 2008) c⃝2008 IEEE, and (c) cali-\nbration patterns (Zhang 2000).\nline sets can help reﬁne their position in the image and, in certain cases, help determine the\nintrinsic and extrinsic orientation of the camera (Section 6.3.2).\nOver the years, a large number of techniques have been developed for ﬁnding vanishing\npoints, including (Quan and Mohr 1989; Collins and Weiss 1990; Brillaut-O’Mahoney 1991;\nMcLean and Kotturi 1995; Becker and Bove 1995; Shufelt 1999; Tuytelaars, Van Gool, and\nProesmans 1997; Schaffalitzky and Zisserman 2000; Antone and Teller 2002; Rother 2002;\nKoˇseck´a and Zhang 2005; Pﬂugfelder 2008; Tardif 2009)—see some of the more recent pa-\npers for additional references.\nIn this section, we present a simple Hough technique based\non having line pairs vote for potential vanishing point locations, followed by a robust least\nsquares ﬁtting stage. For alternative approaches, please see some of the more recent papers\nlisted above.\nThe ﬁrst stage in my vanishing point detection algorithm uses a Hough transform to accu-\nmulate votes for likely vanishing point candidates. As with line ﬁtting, one possible approach\nis to have each line vote for all possible vanishing point directions, either using a cube map\n(Tuytelaars, Van Gool, and Proesmans 1997; Antone and Teller 2002) or a Gaussian sphere\n(Collins and Weiss 1990), optionally using knowledge about the uncertainty in the vanish-\ning point location to perform a weighted vote (Collins and Weiss 1990; Brillaut-O’Mahoney\n1991; Shufelt 1999). My preferred approach is to use pairs of detected line segments to form\ncandidate vanishing point locations. Let ˆ\nmi and ˆ\nmj be the (unit norm) line equations for a\npair of line segments and li and lj be their corresponding segment lengths. The location of\nthe corresponding vanishing point hypothesis can be computed as\nvij = ˆ\nmi × ˆ\nmj\n(4.28)\nand the corresponding weight set to\nwij = ∥vij∥lilj.\n(4.29)\n256\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\npi1\npi0\nv\nmi\n^\nd1\nA\nFigure 4.46\nTriple product of the line segments endpoints pi0 and pi1 and the vanishing\npoint v. The area A is proportional to the perpendicular distance d1 and the distance between\nthe other endpoint pi0 and the vanishing point.\nThis has the desirable effect of downweighting (near-)collinear line segments and short line\nsegments. The Hough space itself can either be represented using spherical coordinates (4.27)\nor as a cube map (Figure 4.44a).\nOnce the Hough accumulator space has been populated, peaks can be detected in a manner\nsimilar to that previously discussed for line detection. Given a set of candidate line segments\nthat voted for a vanishing point, which can optionally be kept as a list at each Hough accu-\nmulator cell, I then use a robust least squares ﬁt to estimate a more accurate location for each\nvanishing point.\nConsider the relationship between the two line segment endpoints {pi0, pi1} and the van-\nishing point v, as shown in Figure 4.46. The area A of the triangle given by these three points,\nwhich is the magnitude of their triple product\nAi = |(pi0 × pi1) · v|,\n(4.30)\nis proportional to the perpendicular distance d1 between each endpoint and the line through\nv and the other endpoint, as well as the distance between pi0 and v. Assuming that the\naccuracy of a ﬁtted line segment is proportional to its endpoint accuracy (Exercise 4.13), this\ntherefore serves as an optimal metric for how well a vanishing point ﬁts a set of extracted\nlines (Leibowitz (2001, Section 3.6.1) and Pﬂugfelder (2008, Section 2.1.1.3)). A robustiﬁed\nleast squares estimate (Appendix B.3) for the vanishing point can therefore be written as\nE =\nX\ni\nρ(Ai) = vT\n X\ni\nwi(Ai)mimT\ni\n!\nv = vT Mv,\n(4.31)\nwhere mi = pi0 × pi1 is the segment line equation weighted by its length li, and wi =\nρ′(Ai)/Ai is the inﬂuence of each robustiﬁed (reweighted) measurement on the ﬁnal error\n(Appendix B.3). Notice how this metric is closely related to the original formula for the pair-\nwise weighted Hough transform accumulation step. The ﬁnal desired value for v is computed\nas the least eigenvector of M.\n4.4 Additional reading\n257\nWhile the technique described above proceeds in two discrete stages, better results may\nbe obtained by alternating between assigning lines to vanishing points and reﬁtting the van-\nishing point locations (Antone and Teller 2002; Koˇseck´a and Zhang 2005; Pﬂugfelder 2008).\nThe results of detecting individual vanishing points can also be made more robust by simulta-\nneously searching for pairs or triplets of mutually orthogonal vanishing points (Shufelt 1999;\nAntone and Teller 2002; Rother 2002; Sinha, Steedly, Szeliski et al. 2008). Some results of\nsuch vanishing point detection algorithms can be seen in Figure 4.45.\n4.3.4 Application: Rectangle detection\nOnce sets of mutually orthogonal vanishing points have been detected, it now becomes pos-\nsible to search for 3D rectangular structures in the image (Figure 4.47). Over the last decade,\na variety of techniques have been developed to ﬁnd such rectangles, primarily focused on\narchitectural scenes (Koˇseck´a and Zhang 2005; Han and Zhu 2005; Shaw and Barnes 2006;\nMiˇcuˇs`ık, Wildenauer, and Koˇseck´a 2008; Schindler, Krishnamurthy, Lublinerman et al. 2008).\nAfter detecting orthogonal vanishing directions, Koˇseck´a and Zhang (2005) reﬁne the\nﬁtted line equations, search for corners near line intersections, and then verify rectangle hy-\npotheses by rectifying the corresponding patches and looking for a preponderance of hori-\nzontal and vertical edges (Figures 4.47a–b). In follow-on work, Miˇcuˇs`ık, Wildenauer, and\nKoˇseck´a (2008) use a Markov random ﬁeld (MRF) to disambiguate between potentially over-\nlapping rectangle hypotheses. They also use a plane sweep algorithm to match rectangles\nbetween different views (Figures 4.47d–f).\nA different approach is proposed by Han and Zhu (2005), who use a grammar of potential\nrectangle shapes and nesting structures (between rectangles and vanishing points) to infer the\nmost likely assignment of line segments to rectangles (Figure 4.47c).\n4.4 Additional reading\nOne of the seminal papers on feature detection, description, and matching is by Lowe (2004).\nComprehensive surveys and evaluations of such techniques have been made by Schmid,\nMohr, and Bauckhage (2000); Mikolajczyk and Schmid (2005); Mikolajczyk, Tuytelaars,\nSchmid et al. (2005); Tuytelaars and Mikolajczyk (2007) while Shi and Tomasi (1994) and\nTriggs (2004) also provide nice reviews.\nIn the area of feature detectors (Mikolajczyk, Tuytelaars, Schmid et al. 2005), in addition\nto such classic approaches as F¨orstner–Harris (F¨orstner 1986; Harris and Stephens 1988) and\ndifference of Gaussians (Lindeberg 1993, 1998b; Lowe 2004), maximally stable extremal re-\ngions (MSERs) are widely used for applications that require afﬁne invariance (Matas, Chum,",
  "image_path": "page_278.jpg",
  "pages": [
    277,
    278,
    279
  ]
}