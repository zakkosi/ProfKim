{
  "doc_id": "pages_330_332",
  "text": "308\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n3. Replace the current value with this weighted mean and iterate until either the motion is\nbelow a threshold or a ﬁnite number of steps has been taken.\n4. Cluster all ﬁnal values (modes) that are within a threshold, i.e., ﬁnd the connected\ncomponents. Since each pixel is associated with a ﬁnal mean-shift (mode) value, this\nresults in an image segmentation, i.e., each pixel is labeled with its ﬁnal component.\n5. (Optional) Use a random subset of the pixels as starting points and ﬁnd which com-\nponent each unlabeled pixel belongs to, either by ﬁnding its nearest neighbor or by\niterating the mean shift until it ﬁnds a neighboring track of mean-shift values. Describe\nthe data structures you use to make this efﬁcient.\n6. (Optional) Mean shift divides the kernel density function estimate by the local weight-\ning to obtain a step size that is guaranteed to converge but may be slow. Use an alter-\nnative step size estimation algorithm from the optimization literature to see if you can\nmake the algorithm converge faster.\nChapter 6\nFeature-based alignment\n6.1\n2D and 3D feature-based alignment\n. . . . . . . . . . . . . . . . . . . . . . 311\n6.1.1\n2D alignment using least squares . . . . . . . . . . . . . . . . . . . . 312\n6.1.2\nApplication: Panography . . . . . . . . . . . . . . . . . . . . . . . . 314\n6.1.3\nIterative algorithms . . . . . . . . . . . . . . . . . . . . . . . . . . . 315\n6.1.4\nRobust least squares and RANSAC\n. . . . . . . . . . . . . . . . . . 318\n6.1.5\n3D alignment . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 320\n6.2\nPose estimation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 321\n6.2.1\nLinear algorithms . . . . . . . . . . . . . . . . . . . . . . . . . . . . 322\n6.2.2\nIterative algorithms . . . . . . . . . . . . . . . . . . . . . . . . . . . 324\n6.2.3\nApplication: Augmented reality . . . . . . . . . . . . . . . . . . . . 326\n6.3\nGeometric intrinsic calibration . . . . . . . . . . . . . . . . . . . . . . . . . 327\n6.3.1\nCalibration patterns . . . . . . . . . . . . . . . . . . . . . . . . . . . 327\n6.3.2\nVanishing points\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . 329\n6.3.3\nApplication: Single view metrology . . . . . . . . . . . . . . . . . . 331\n6.3.4\nRotational motion\n. . . . . . . . . . . . . . . . . . . . . . . . . . . 332\n6.3.5\nRadial distortion\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . 334\n6.4\nAdditional reading\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 335\n6.5\nExercises\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 336\n310\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\nx1\nx0\nx2\n(c)\n(d)\nFigure 6.1 Geometric alignment and calibration: (a) geometric alignment of 2D images for\nstitching (Szeliski and Shum 1997) c⃝1997 ACM; (b) a two-dimensional calibration target\n(Zhang 2000) c⃝2000 IEEE; (c) calibration from vanishing points; (d) scene with easy-to-\nﬁnd lines and vanishing directions (Criminisi, Reid, and Zisserman 2000) c⃝2000 Springer.",
  "image_path": "page_331.jpg",
  "pages": [
    330,
    331,
    332
  ]
}