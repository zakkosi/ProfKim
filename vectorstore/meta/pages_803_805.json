{
  "doc_id": "pages_803_805",
  "text": "C.2 Software\n781\n• image processing and transforms (ﬁltering, morphology, pyramids);\n• geometric image transformations (rotations, resizing);\n• miscellaneous image transformations (Fourier transforms, distance transforms);\n• histograms;\n• segmentation (watershed, mean shift);\n• feature detection (Canny, Harris, Hough, MSER, SURF);\n• motion analysis and object tracking (Lucas–Kanade, mean shift);\n• camera calibration and 3D reconstruction;\n• machine learning (k nearest neighbors, support vector machines, decision trees, boost-\ning, random trees, expectation-maximization, and neural networks).\nThe Intel Performance Primitives (IPP) library, http://software.intel.com/en-us/intel-ipp/,\ncontains highly optimized code for a variety of image processing tasks. Many of the routines\nin OpenCV take advantage of this library, if it is installed, to run even faster. In terms of\nfunctionality, it has many of the same operators as those found in OpenCV, plus additional\nlibraries for image and video compression, signal and speech processing, and matrix algebra.\nThe MATLAB Image Processing Toolbox, http://www.mathworks.com/products/image/,\ncontains routines for spatial transformations (rotations, resizing), normalized cross-correla-\ntion, image analysis and statistics (edges, Hough transform), image enhancement (adaptive\nhistogram equalization, median ﬁltering) and restoration (deblurring), linear ﬁltering (con-\nvolution), image transforms (Fourier and DCT), and morphological operations (connected\ncomponents and distance transforms).\nTwo older libraries, which no longer appear to be under active development but contain\nmany useful routines, are VXL (C++ Libraries for Computer Vision Research and Implemen-\ntation, http://vxl.sourceforge.net/) and LTI-Lib 2 (http://www.ie.itcr.ac.cr/palvarado/ltilib-2/\nhomepage/).\nPhoto editing and viewing packages, such as Windows Live Photo Gallery, iPhoto, Picasa,\nGIMP, and IrfanView, can be useful for performing common processing tasks, converting for-\nmats, and viewing your results. They can also serve as interesting reference implementations\nfor image processing algorithms (such as tone correction or denoising) that you are trying to\ndevelop from scratch.\nThere are also software packages and infrastructure that can be helpful for building real-\ntime video processing demos. Vision on Tap (http://www.visionontap.com/) provides a Web\n782\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nservice that will process your webcam video in real time (Chiu and Raskar 2009). Video-\nMan (VideoManager, http://videomanlib.sourceforge.net/) can be useful for getting real-time\nvideo-based demos and applications running. You can also use imread in MATLAB to read\ndirectly from any URL, such as a webcam.\nBelow, I list some additional software that can be found on the Web, grouped by the book\nchapters to which they most correspond:\nChapter 3: Image processing\nmatlabPyrTools—MATLAB source code for Laplacian pyramids, QMF/Wavelets, and\nsteerable pyramids, http://www.cns.nyu.edu/∼lcv/software.php (Simoncelli and Adel-\nson 1990a; Simoncelli, Freeman, Adelson et al. 1992).\nBLS-GSM image denoising, http://decsai.ugr.es/∼javier/denoise/ (Portilla, Strela, Wain-\nwright et al. 2003).\nFast bilateral ﬁltering code, http://people.csail.mit.edu/jiawen/#code (Chen, Paris, and\nDurand 2007).\nC++ implementation of the fast distance transform algorithm, http://people.cs.uchicago.\nedu/∼pff/dt/ (Felzenszwalb and Huttenlocher 2004a).\nGREYC’s Magic Image Converter, including image restoration software using regular-\nization and anisotropic diffusion, http://gmic.sourceforge.net/gimp.shtml (Tschumperl´e\nand Deriche 2005).\nChapter 4: Feature detection and matching\nVLFeat, an open and portable library of computer vision algorithms, http://vlfeat.org/\n(Vedaldi and Fulkerson 2008).\nSiftGPU: A GPU Implementation of Scale Invariant Feature Transform (SIFT), http:\n//www.cs.unc.edu/∼ccwu/siftgpu/ (Wu 2010).\nSURF: Speeded Up Robust Features, http://www.vision.ee.ethz.ch/∼surf/ (Bay, Tuyte-\nlaars, and Van Gool 2006).\nFAST corner detection, http://mi.eng.cam.ac.uk/∼er258/work/fast.html (Rosten and Drum-\nmond 2005, 2006).\nLinux binaries for afﬁne region detectors and descriptors, as well as MATLAB ﬁles to\ncompute repeatability and matching scores, http://www.robots.ox.ac.uk/∼vgg/research/\nafﬁne/.\nC.2 Software\n783\nKanade–Lucas–Tomasi feature trackers: KLT, http://www.ces.clemson.edu/∼stb/klt/\n(Shi and Tomasi 1994); GPU-KLT, http://cs.unc.edu/∼cmzach/opensource.html (Zach,\nGallup, and Frahm 2008); and Lucas–Kanade 20 Years On, http://www.ri.cmu.edu/\nprojects/project 515.html (Baker and Matthews 2004).\nChapter 5: Segmentation\nEfﬁcient graph-based image segmentation, http://people.cs.uchicago.edu/∼pff/segment/\n(Felzenszwalb and Huttenlocher 2004b).\nEDISON, edge detection and image segmentation, http://coewww.rutgers.edu/riul/research/\ncode/EDISON/ (Meer and Georgescu 2001; Comaniciu and Meer 2002).\nNormalized cuts segmentation including intervening contours, http://www.cis.upenn.\nedu/∼jshi/software/ (Shi and Malik 2000; Malik, Belongie, Leung et al. 2001).\nSegmentation by weighted aggregation (SWA), http://www.cs.weizmann.ac.il/∼vision/\nSWA/ (Alpert, Galun, Basri et al. 2007).\nChapter 6: Feature-based alignment and calibration\nNon-iterative PnP algorithm, http://cvlab.epﬂ.ch/software/EPnP/ (Moreno-Noguer, Lep-\netit, and Fua 2007).\nTsai Camera Calibration Software, http://www-2.cs.cmu.edu/∼rgw/TsaiCode.html (Tsai\n1987).\nEasy Camera Calibration Toolkit, http://research.microsoft.com/en-us/um/people/zhang/\nCalib/ (Zhang 2000).\nCamera Calibration Toolbox for MATLAB, http://www.vision.caltech.edu/bouguetj/\ncalib doc/; a C version is included in OpenCV.\nMATLAB functions for multiple view geometry, http://www.robots.ox.ac.uk/∼vgg/hzbook/\ncode/ (Hartley and Zisserman 2004).\nChapter 7: Structure from motion\nSBA: A generic sparse bundle adjustment C/C++ package based on the Levenberg–\nMarquardt algorithm, http://www.ics.forth.gr/∼lourakis/sba/ (Lourakis and Argyros 2009).\nSimple sparse bundle adjustment (SSBA), http://cs.unc.edu/∼cmzach/opensource.html.",
  "image_path": "page_804.jpg",
  "pages": [
    803,
    804,
    805
  ]
}