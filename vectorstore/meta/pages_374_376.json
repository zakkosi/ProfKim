{
  "doc_id": "pages_374_376",
  "text": "352\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\ne\nxi0\nxi1\nFigure 7.4\nPure translational camera motion results in visual motion where all the points\nmove towards (or away from) a common focus of expansion (FOE) e. They therefore satisfy\nthe triple product condition (x0, x1, e) = e · (x0 × x1) = 0.\nwhile enforcing the rank two constraint in E (7.19–7.20) and a ﬁve-point algorithm that\nrequires ﬁnding the roots of a 10th degree polynomial (Nist´er 2004). Since such algorithms\nuse fewer points to compute their estimates, they are less sensitive to outliers when used as\npart of a random sampling (RANSAC) strategy.\nPure translation (known rotation)\nIn the case where we know the rotation, we can pre-rotate the points in the second image to\nmatch the viewing direction of the ﬁrst. The resulting set of 3D points all move towards (or\naway from) the focus of expansion (FOE), as shown in Figure 7.4.6 The resulting essential\nmatrix E is (in the noise-free case) skew symmetric and so can be estimated more directly by\nsetting eij = −eji and eii = 0 in (7.13). Two points with non-zero parallax now sufﬁce to\nestimate the FOE.\nA more direct derivation of the FOE estimate can be obtained by minimizing the triple\nproduct\nX\ni\n(xi0, xi1, e)2 =\nX\ni\n((xi0 × xi1) · e)2,\n(7.26)\nwhich is equivalent to ﬁnding the null space for the set of equations\n(yi0 −yi1)e0 + (xi1 −xi0)e1 + (xi0yi1 −yi0xi1)e2 = 0.\n(7.27)\nNote that, as in the eight-point algorithm, it is advisable to normalize the 2D points to have\nunit variance before computing this estimate.\nIn situations where a large number of points at inﬁnity are available, e.g., when shooting\noutdoor scenes or when the camera motion is small compared to distant objects, this suggests\nan alternative RANSAC strategy for estimating the camera motion. First, pick a pair of\npoints to estimate a rotation, hoping that both of the points lie at inﬁnity (very far from the\n6 Fans of Star Trek and Star Wars will recognize this as the “jump to hyperdrive” visual effect.\n7.2 Two-frame structure from motion\n353\ncamera). Then, compute the FOE and check whether the residual error is small (indicating\nagreement with this rotation hypothesis) and whether the motions towards or away from the\nepipole (FOE) are all in the same direction (ignoring very small motions, which may be\nnoise-contaminated).\nPure rotation\nThe case of pure rotation results in a degenerate estimate of the essential matrix E and of\nthe translation direction ˆt.\nConsider ﬁrst the case of the rotation matrix being known. The\nestimates for the FOE will be degenerate, since xi0 ≈xi1, and hence (7.27), is degenerate.\nA similar argument shows that the equations for the essential matrix (7.13) are also rank-\ndeﬁcient.\nThis suggests that it might be prudent before computing a full essential matrix to ﬁrst\ncompute a rotation estimate R using (6.32), potentially with just a small number of points,\nand then compute the residuals after rotating the points before proceeding with a full E\ncomputation.\n7.2.1 Projective (uncalibrated) reconstruction\nIn many cases, such as when trying to build a 3D model from Internet or legacy photos taken\nby unknown cameras without any EXIF tags, we do not know ahead of time the intrinsic\ncalibration parameters associated with the input images. In such situations, we can still esti-\nmate a two-frame reconstruction, although the true metric structure may not be available, e.g.,\northogonal lines or planes in the world may not end up being reconstructed as orthogonal.\nConsider the derivations we used to estimate the essential matrix E (7.10–7.12). In the\nuncalibrated case, we do not know the calibration matrices Kj, so we cannot use the normal-\nized ray directions ˆxj = K−1\nj xj. Instead, we have access only to the image coordinates xj,\nand so the essential matrix (7.10) becomes\nˆxT\n1 Eˆx1 = xT\n1 K−T\n1\nEK−1\n0 x0 = xT\n1 F x0 = 0,\n(7.28)\nwhere\nF = K−T\n1\nEK−1\n0\n= [e]× ˜\nH\n(7.29)\nis called the fundamental matrix (Faugeras 1992; Hartley, Gupta, and Chang 1992; Hartley\nand Zisserman 2004).\nLike the essential matrix, the fundamental matrix is (in principle) rank two,\nF = [e]× ˜\nH = UΣV T =\nh\nu0\nu1\ne1\ni\n\n\nσ0\nσ1\n0\n\n\n\n\nvT\n0\nvT\n1\neT\n0\n\n.\n(7.30)\n354\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nIts smallest left singular vector indicates the epipole e1 in the image 1 and its smallest right\nsingular vector is e0 (Figure 7.3). The homography ˜\nH in (7.29), which in principle should\nequal\n˜\nH = K−T\n1\nRK−1\n0 ,\n(7.31)\ncannot be uniquely recovered from F , since any homography of the form ˜\nH\n′ = ˜\nH + evT\nresults in the same F matrix. (Note that [e]× annihilates any multiple of e.)\nAny one of these valid homographies ˜\nH maps some plane in the scene from one image\nto the other. It is not possible to tell in advance which one it is without either selecting four\nor more co-planar correspondences to compute ˜\nH as part of the F estimation process (in a\nmanner analogous to guessing a rotation for E) or mapping all points in one image through\n˜\nH and seeing which ones line up with their corresponding locations in the other.7\nIn order to create a projective reconstruction of the scene, we can pick any valid homog-\nraphy ˜\nH that satisﬁes Equation (7.29). For example, following a technique analogous to\nEquations (7.18–7.24), we get\nF = [e]× ˜\nH = SZR90◦ST ˜\nH = UΣV T\n(7.32)\nand hence\n˜\nH = URT\n90◦ˆΣV T ,\n(7.33)\nwhere ˆΣ is the singular value matrix with the smallest value replaced by a reasonable alter-\nnative (say, the middle value).8 We can then form a pair of camera matrices\nP 0 = [I|0]\nand\nP 0 = [ ˜\nH|e],\n(7.34)\nfrom which a projective reconstruction of the scene can be computed using triangulation\n(Section 7.1).\nWhile the projective reconstruction may not be useful in practice, it can often be upgraded\nto an afﬁne or metric reconstruction, as detailed below. Even without this step, however,\nthe fundamental matrix F can be very useful in ﬁnding additional correspondences, as they\nmust all lie on corresponding epipolar lines, i.e., any feature x0 in image 0 must have its\ncorrespondence lying on the associated epipolar line l1 = F x0 in image 1, assuming that the\npoint motions are due to a rigid transformation.\n7 This process is sometimes referred to as plane plus parallax (Section 2.1.5) (Kumar, Anandan, and Hanna 1994;\nSawhney 1994).\n8 Hartley and Zisserman (2004, p. 237) recommend using ˜\nH = [e]×F (Luong and Vi´eville 1996), which places\nthe camera on the plane at inﬁnity.",
  "image_path": "page_375.jpg",
  "pages": [
    374,
    375,
    376
  ]
}