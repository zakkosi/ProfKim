{
  "doc_id": "pages_168_170",
  "text": "146\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nf(k-1)\nf(k+1)\nf(k)\ng(i)\nr·(k-1)\nr·(k+1)\nrk\ni\nf(k)h(i-rk)\nf(k-1)\nf(k+1)\nf(k)\ng(i)\nr·(k-1)\nr·(k+1)\nrk\ni\nh(i-rk)\n(a)\n(b)\nFigure 3.27\nSignal interpolation, g(i) = P\nk f(k)h(i −rk): (a) weighted summation of\ninput values; (b) polyphase ﬁlter interpretation.\nimage does not pass through the input data points) that produces soft images with reduced\nhigh-frequency detail. The equation for the cubic B-spline is easiest to derive by convolving\nthe tent function (linear B-spline) with itself.\nWhile most graphics cards use the bilinear kernel (optionally combined with a MIP-\nmap—see Section 3.5.3), most photo editing packages use bicubic interpolation. The cu-\nbic interpolant is a C1 (derivative-continuous) piecewise-cubic spline (the term “spline” is\nsynonymous with “piecewise-polynomial”)14 whose equation is\nh(x) =\n\n\n\n\n\n1 −(a + 3)x2 + (a + 2)|x|3\nif |x| < 1\na(|x| −1)(|x| −2)2\nif 1 ≤|x| < 2\n0\notherwise,\n(3.79)\nwhere a speciﬁes the derivative at x = 1 (Parker, Kenyon, and Troxel 1983). The value of\na is often set to −1, since this best matches the frequency characteristics of a sinc function\n(Figure 3.29). It also introduces a small amount of sharpening, which can be visually appeal-\ning. Unfortunately, this choice does not linearly interpolate straight lines (intensity ramps),\nso some visible ringing may occur. A better choice for large amounts of interpolation is prob-\nably a = −0.5, which produces a quadratic reproducing spline; it interpolates linear and\nquadratic functions exactly (Wolberg 1990, Section 5.4.3).\nFigure 3.29 shows the a = −1\nand a = −0.5 cubic interpolating kernel along with their Fourier transforms; Figure 3.28b\nand c shows them being applied to two-dimensional interpolation.\nSplines have long been used for function and data value interpolation because of the abil-\nity to precisely specify derivatives at control points and efﬁcient incremental algorithms for\ntheir evaluation (Bartels, Beatty, and Barsky 1987; Farin 1992, 1996). Splines are widely used\nin geometric modeling and computer-aided design (CAD) applications, although they have\n14 The term “spline” comes from the draughtsman’s workshop, where it was the name of a ﬂexible piece of wood\nor metal used to draw smooth curves.\n3.5 Pyramids and wavelets\n147\n(a)\n(b)\n(c)\n(d)\nFigure 3.28\nTwo-dimensional image interpolation: (a) bilinear; (b) bicubic (a = −1); (c)\nbicubic (a = −0.5); (d) windowed sinc (nine taps).\n-0.5\n0.0\n0.5\n1.0\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\nwindowed-sinc\ntent\ncubic a=-0.5\ncubic a=-1\n-200\n-180\n-160\n-140\n-120\n-100\n-80\n-60\n-40\n-20\n0\n-0.5\n0.0\n0.5\nwindowed-sinc\ncubic a=-0.5\ntent\ncubic a=-1\n(a)\n(b)\nFigure 3.29 (a) Some windowed sinc functions and (b) their log Fourier transforms: raised-\ncosine windowed sinc in blue, cubic interpolators (a = −1 and a = −0.5) in green and\npurple, and tent function in brown. They are often used to perform high-accuracy low-pass\nﬁltering operations.\n148\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nstarted being displaced by subdivision surfaces (Zorin, Schr¨oder, and Sweldens 1996; Peters\nand Reif 2008). In computer vision, splines are often used for elastic image deformations\n(Section 3.6.2), motion estimation (Section 8.3), and surface interpolation (Section 12.3). In\nfact, it is possible to carry out most image processing operations by representing images as\nsplines and manipulating them in a multi-resolution framework (Unser 1999).\nThe highest quality interpolator is generally believed to be the windowed sinc function\nbecause it both preserves details in the lower resolution image and avoids aliasing. (It is also\npossible to construct a C1 piecewise-cubic approximation to the windowed sinc by matching\nits derivatives at zero crossing (Szeliski and Ito 1986).) However, some people object to the\nexcessive ringing that can be introduced by the windowed sinc and to the repetitive nature\nof the ringing frequencies (see Figure 3.28d). For this reason, some photographers prefer\nto repeatedly interpolate images by a small fractional amount (this tends to de-correlate the\noriginal pixel grid with the ﬁnal image).\nAdditional possibilities include using the bilat-\neral ﬁlter as an interpolator (Kopf, Cohen, Lischinski et al. 2007), using global optimization\n(Section 3.6) or hallucinating details (Section 10.3).\n3.5.2 Decimation\nWhile interpolation can be used to increase the resolution of an image, decimation (downsam-\npling) is required to reduce the resolution.15 To perform decimation, we ﬁrst (conceptually)\nconvolve the image with a low-pass ﬁlter (to avoid aliasing) and then keep every rth sample.\nIn practice, we usually only evaluate the convolution at every rth sample,\ng(i, j) =\nX\nk,l\nf(k, l)h(ri −k, rj −l),\n(3.80)\nas shown in Figure 3.30. Note that the smoothing kernel h(k, l), in this case, is often a\nstretched and re-scaled version of an interpolation kernel. Alternatively, we can write\ng(i, j) = 1\nr\nX\nk,l\nf(k, l)h(i −k/r, j −l/r)\n(3.81)\nand keep the same kernel h(k, l) for both interpolation and decimation.\nOne commonly used (r = 2) decimation ﬁlter is the binomial ﬁlter introduced by Burt\nand Adelson (1983a). As shown in Table 3.3, this kernel does a decent job of separating\nthe high and low frequencies, but still leaves a fair amount of high-frequency detail, which\ncan lead to aliasing after downsampling. However, for applications such as image blending\n(discussed later in this section), this aliasing is of little concern.\n15 The term “decimation” has a gruesome etymology relating to the practice of killing every tenth soldier in\na Roman unit guilty of cowardice. It is generally used in signal processing to mean any downsampling or rate\nreduction operation.",
  "image_path": "page_169.jpg",
  "pages": [
    168,
    169,
    170
  ]
}