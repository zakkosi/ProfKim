{
  "doc_id": "pages_317_319",
  "text": "5.3 Mean shift and mode ﬁnding\n295\nFigure 5.18\nMean-shift color image segmentation with parameters (hs, hr, M)\n=\n(16, 19, 40) (Comaniciu and Meer 2002) c⃝2002 IEEE.\nwhere separate parameters hs and hr are used to control the spatial and range bandwidths of\nthe ﬁlter kernels. Figure 5.18 shows an example of mean-shift clustering in the joint domain,\nwith parameters (hs, hr, M) = (16, 19, 40), where spatial regions containing less than M\npixels are eliminated.\nThe form of the joint domain ﬁlter kernel (5.42) is reminiscent of the bilateral ﬁlter kernel\n(3.34–3.37) discussed in Section 3.3.1. The difference between mean shift and bilateral ﬁl-\ntering, however, is that in mean shift the spatial coordinates of each pixel are adjusted along\nwith its color values, so that the pixel migrates more quickly towards other pixels with similar\ncolors, and can therefore later be used for clustering and segmentation.\nDetermining the best bandwidth parameters h to use with mean shift remains something\nof an art, although a number of approaches have been explored. These include optimizing\nthe bias–variance tradeoff, looking for parameter ranges where the number of clusters varies\nslowly, optimizing some external clustering criterion, or using top-down (application domain)\nknowledge (Comaniciu and Meer 2003). It is also possible to change the orientation of the\nkernel in joint parameter space for applications such as spatio-temporal (video) segmentations\n(Wang, Thiesson, Xu et al. 2004).\nMean shift has been applied to a number of different problems in computer vision, includ-\ning face tracking, 2D shape extraction, and texture segmentation (Comaniciu and Meer 2002),\nand more recently in stereo matching (Chapter 11) (Wei and Quan 2004), non-photorealistic\nrendering (Section 10.5.2) (DeCarlo and Santella 2002), and video editing (Section 10.4.5)\n(Wang, Bhat, Colburn et al. 2005). Paris and Durand (2007) provide a nice review of such\napplications, as well as techniques for more efﬁciently solving the mean-shift equations and\nproducing hierarchical segmentations.\n296\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nA\nA\nA\nA\nB\nB\nB\nA\nB\nsum\nA\nassoc(A, A)\ncut(A, B)\nassoc(A, V )\nB\ncut(B, A)\nassoc(B, B)\nassoc(B, V )\nsum\nassoc(A, V )\nassoc(B, v)\n(a)\n(b)\nFigure 5.19\nSample weighted graph and its normalized cut: (a) a small sample graph and\nits smallest normalized cut; (b) tabular form of the associations and cuts for this graph. The\nassoc and cut entries are computed as area sums of the associated weight matrix W (Fig-\nure 5.20). Normalizing the table entries by the row or column sums produces normalized\nassociations and cuts Nassoc and Ncut.\n5.4 Normalized cuts\nWhile bottom-up merging techniques aggregate regions into coherent wholes and mean-shift\ntechniques try to ﬁnd clusters of similar pixels using mode ﬁnding, the normalized cuts\ntechnique introduced by Shi and Malik (2000) examines the afﬁnities (similarities) between\nnearby pixels and tries to separate groups that are connected by weak afﬁnities.\nConsider the simple graph shown in Figure 5.19a. The pixels in group A are all strongly\nconnected with high afﬁnities, shown as thick red lines, as are the pixels in group B. The\nconnections between these two groups, shown as thinner blue lines, are much weaker. A\nnormalized cut between the two groups, shown as a dashed line, separates them into two\nclusters.\nThe cut between two groups A and B is deﬁned as the sum of all the weights being cut,\ncut(A, B) =\nX\ni∈A,j∈B\nwij,\n(5.43)\nwhere the weights between two pixels (or regions) i and j measure their similarity. Using\na minimum cut as a segmentation criterion, however, does not result in reasonable clusters,\nsince the smallest cuts usually involve isolating a single pixel.\nA better measure of segmentation is the normalized cut, which is deﬁned as\nNcut(A, B) =\ncut(A, B)\nassoc(A, V ) +\ncut(A, B)\nassoc(B, V ),\n(5.44)\nwhere assoc(A, A) = P\ni∈A,j∈A wij is the association (sum of all the weights) within a\ncluster and assoc(A, V ) = assoc(A, A) + cut(A, B) is the sum of all the weights associated\n5.4 Normalized cuts\n297\nwith nodes in A. Figure 5.19b shows how the cuts and associations can be thought of as area\nsums in the weight matrix W = [wij], where the entries of the matrix have been arranged so\nthat the nodes in A come ﬁrst and the nodes in B come second. Figure 5.20 shows an actual\nweight matrix for which these area sums can be computed. Dividing each of these areas by\nthe corresponding row sum (the rightmost column of Figure 5.19b) results in the normalized\ncut and association values. These normalized values better reﬂect the ﬁtness of a particular\nsegmentation, since they look for collections of edges that are weak relative to all of the edges\nboth inside and emanating from a particular region.\nUnfortunately, computing the optimal normalized cut is NP-complete. Instead, Shi and\nMalik (2000) suggest computing a real-valued assignment of nodes to groups. Let x be the\nindicator vector where xi = +1 iff i ∈A and xi = −1 iff i ∈B. Let d = W 1 be the row\nsums of the symmetric matrix W and D = diag(d) be the corresponding diagonal matrix.\nShi and Malik (2000) show that minimizing the normalized cut over all possible indicator\nvectors x is equivalent to minimizing\nmin\ny\nyT (D −W )y\nyT Dy\n,\n(5.45)\nwhere y = ((1+x)−b(1−x))/2 is a vector consisting of all 1s and −bs such that y·d = 0.\nMinimizing this Rayleigh quotient is equivalent to solving the generalized eigenvalue system\n(D −W )y = λDy,\n(5.46)\nwhich can be turned into a regular eigenvalue problem\n(I −N)z = λz,\n(5.47)\nwhere N = D−1/2W D−1/2 is the normalized afﬁnity matrix (Weiss 1999) and z =\nD1/2y. Because these eigenvectors can be interpreted as the large modes of vibration in\na spring-mass system, normalized cuts is an example of a spectral method for image segmen-\ntation.\nExtending an idea originally proposed by Scott and Longuet-Higgins (1990), Weiss (1999)\nsuggests normalizing the afﬁnity matrix and then using the top k eigenvectors to reconstitute a\nQ matrix. Other papers have extended the basic normalized cuts framework by modifying the\nafﬁnity matrix in different ways, ﬁnding better discrete solutions to the minimization prob-\nlem, or applying multi-scale techniques (Meil˘a and Shi 2000, 2001; Ng, Jordan, and Weiss\n2001; Yu and Shi 2003; Cour, B´en´ezit, and Shi 2005; Tolliver and Miller 2006).\nFigure 5.20b shows the second smallest (real-valued) eigenvector corresponding to the\nweight matrix shown in Figure 5.20a. (Here, the rows have been permuted to separate the\ntwo groups of variables that belong to the different components of this eigenvector.) Af-\nter this real-valued vector is computed, the variables corresponding to positive and negative",
  "image_path": "page_318.jpg",
  "pages": [
    317,
    318,
    319
  ]
}