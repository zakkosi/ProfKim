{
  "doc_id": "pages_657_659",
  "text": "13.4 Environment mattes\n635\n(a)\n(b)\n(c)\n(d)\nFigure 13.10 Environment mattes: (a–b) a refractive object can be placed in front of a series\nof backgrounds and their light patterns will be correctly refracted (Zongker, Werner, Cur-\nless et al. 1999) (c) multiple refractions can be handled using a mixture of Gaussians model\nand (d) real-time mattes can be pulled using a single graded colored background (Chuang,\nZongker, Hindorff et al. 2000) c⃝2000 ACM.\nInstead of modeling the 4D space of rays emanating from a scene, we now need to model\nhow each pixel in our view of this object refracts incident light coming from its environment.\nWhat is the intrinsic dimensionality of such a representation and how do we go about\ncapturing it? Let us assume that if we trace a light ray from the camera at pixel (x, y) toward\nthe object, it is reﬂected or refracted back out toward its environment at an angle (φ, θ). If\nwe assume that other objects and illuminants are sufﬁciently distant (the same assumption we\nmade for surface light ﬁelds in Section 13.3.2), this 4D mapping (x, y) →(φ, θ) captures all\nthe information between a refractive object and its environment. Zongker, Werner, Curless et\nal. (1999) call such a representation an environment matte, since it generalizes the process of\nobject matting (Section 10.4) to not only cut and paste an object from one image into another\nbut also take into account the subtle refractive or reﬂective interplay between the object and\nits environment.\nRecall from Equations (3.8) and (10.30) that a foreground object can be represented by\nits premultiplied colors and opacities (αF, α). Such a matte can then be composited onto a\nnew background B using\nCi = αiFi + (1 −αi)Bi,\n(13.1)\nwhere i is the pixel under consideration. In environment matting, we augment this equation\nwith a reﬂective or refractive term to model indirect light paths between the environment\nand the camera. In the original work of Zongker, Werner, Curless et al. (1999), this indirect\ncomponent Ii is modeled as\nIi = Ri\nZ\nAi(x)B(x)dx,\n(13.2)\nwhere Ai is the rectangular area of support for that pixel, Ri is the colored reﬂectance or\n636\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\ntransmittance (for colored glossy surfaces or glass), and B(x) is the background (environ-\nment) image, which is integrated over the area Ai(x). In follow-on work, Chuang, Zongker,\nHindorff et al. (2000) use a superposition of oriented Gaussians,\nIi =\nX\nj\nRij\nZ\nGij(x)B(x)dx,\n(13.3)\nwhere each 2D Gaussian\nGij(x) = G2D(x; cij, σij, θij)\n(13.4)\nis modeled by its center cij, unrotated widths σij = (σx\nij, σy\nij), and orientation θij.\nGiven a representation for an environment matte, how can we go about estimating it for a\nparticular object? The trick is to place the object in front of a monitor (or surrounded by a set\nof monitors), where we can change the illumination patterns B(x) and observe the value of\neach composite pixel Ci.7\nAs with traditional two-screen matting (Section 10.4.1), we can use a variety of solid\ncolored backgrounds to estimate each pixel’s foreground color αiFi and partial coverage\n(opacity) αi. To estimate the area of support Ai in (13.2), Zongker, Werner, Curless et al.\n(1999) use a series of periodic horizontal and vertical solid stripes at different frequencies and\nphases, which is reminiscent of the structured light patterns used in active rangeﬁnding (Sec-\ntion 12.2). For the more sophisticated mixture of Gaussian model (13.3), Chuang, Zongker,\nHindorff et al. (2000) sweep a series of narrow Gaussian stripes at four different orientations\n(horizontal, vertical, and two diagonals), which enables them to estimate multiple oriented\nGaussian responses at each pixel.\nOnce an environment matte has been “pulled”, it is then a simple matter to replace the\nbackground with a new image B(x) to obtain a novel composite of the object placed in a\ndifferent environment (Figure 13.10a–c). The use of multiple backgrounds during the matting\nprocess, however, precludes the use of this technique with dynamic scenes, e.g., water pouring\ninto a glass (Figure 13.10d). In this case, a single graded color background can be used to\nestimate a single 2D monochromatic displacement for each pixel (Chuang, Zongker, Hindorff\net al. 2000).\n13.4.1 Higher-dimensional light ﬁelds\nAs you can tell from the preceding discussion, an environment matte in principle maps every\npixel (x, y) into a 4D distribution over light rays and is, hence, a six-dimensional representa-\ntion. (In practice, each 2D pixel’s response is parameterized using a dozen or so parameters,\n7 If we relax the assumption that the environment is distant, the monitor can be placed at several depths to estimate\na depth-dependent mapping function (Zongker, Werner, Curless et al. 1999).\n13.4 Environment mattes\n637\nFigure 13.11\nThe geometry-image continuum in image-based rendering (Kang, Szeliski,\nand Anandan 2000) c⃝2000 IEEE. Representations at the left of the spectrum use more\ndetailed geometry and simpler image representations, while representations and algorithms\non the right use more images and less geometry.\ne.g., {F, α, B, R, A}, instead of a full mapping.) What if we want to model an object’s re-\nfractive properties from every potential point of view? In this case, we need a mapping from\nevery incoming 4D light ray to every potential exiting 4D light ray, which is an 8D represen-\ntation. If we use the same trick as with surface light ﬁelds, we can parameterize each surface\npoint by its 4D BRDF to reduce this mapping back down to 6D but this loses the ability to\nhandle multiple refractive paths.\nIf we want to handle dynamic light ﬁelds, we need to add another temporal dimension.\n(Wenger, Gardner, Tchou et al. (2005) gives a nice example of a dynamic appearance and\nillumination acquisition system.) Similarly, if we want a continuous distribution over wave-\nlengths, this becomes another dimension.\nThese examples illustrate how modeling the full complexity of a visual scene through\nsampling can be extremely expensive. Fortunately, constructing specialized models, which\nexploit knowledge about the physics of light transport along with the natural coherence of\nreal-world objects, can make these problems more tractable.\n13.4.2 The modeling to rendering continuum\nThe image-based rendering representations and algorithms we have studied in this chapter\nspan a continuum ranging from classic 3D texture-mapped models all the way to pure sampled\nray-based representations such as light ﬁelds (Figure 13.11). Representations such as view-\ndependent texture maps and Lumigraphs still use a single global geometric model, but select\nthe colors to map onto these surfaces from nearby images. View-dependent geometry, e.g.,",
  "image_path": "page_658.jpg",
  "pages": [
    657,
    658,
    659
  ]
}