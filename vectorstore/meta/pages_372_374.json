{
  "doc_id": "pages_372_374",
  "text": "350\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nIn his paper, Hartley (1997a) compares the improvement due to his re-normalization strategy\nto alternative distance measures proposed by others such as Zhang (1998a,b) and concludes\nthat his simple re-normalization in most cases is as effective as (or better than) alternative\ntechniques. Torr and Fitzgibbon (2004) recommend a variant on this algorithm where the\nnorm of the upper 2 × 2 sub-matrix of E is set to 1 and show that it has even better stability\nwith respect to 2D coordinate transformations.\nOnce an estimate for the essential matrix E has been recovered, the direction of the trans-\nlation vector t can be estimated. Note that the absolute distance between the two cameras can\nnever be recovered from pure image measurements alone, regardless of how many cameras\nor points are used. Knowledge about absolute camera and point positions or distances, of-\nten called ground control points in photogrammetry, is always required to establish the ﬁnal\nscale, position, and orientation.\nTo estimate this direction ˆt, observe that under ideal noise-free conditions, the essential\nmatrix E is singular, i.e., ˆt\nT E = 0. This singularity shows up as a singular value of 0 when\nan SVD of E is performed,\nE = [ˆt]×R = UΣV T =\nh\nu0\nu1\nˆt\ni\n\n\n1\n1\n0\n\n\n\n\nvT\n0\nvT\n1\nvT\n2\n\n\n(7.18)\nWhen E is computed from noisy measurements, the singular vector associated with the small-\nest singular value gives us ˆt. (The other two singular values should be similar but are not, in\ngeneral, equal to 1 because E is only computed up to an unknown scale.)\nBecause E is rank-deﬁcient, it turns out that we actually only need seven correspondences\nof the form of Equation (7.14) instead of eight to estimate this matrix (Hartley 1994a; Torr and\nMurray 1997; Hartley and Zisserman 2004). (The advantage of using fewer correspondences\ninside a RANSAC robust ﬁtting stage is that fewer random samples need to be generated.)\nFrom this set of seven homogeneous equations (which we can stack into a 7 × 9 matrix for\nSVD analysis), we can ﬁnd two independent vectors, say f 0 and f 1 such that zi · f j = 0.\nThese two vectors can be converted back into 3 × 3 matrices E0 and E1, which span the\nsolution space for\nE = αE0 + (1 −α)E1.\n(7.19)\nTo ﬁnd the correct value of α, we observe that E has a zero determinant, since it is rank\ndeﬁcient, and hence\ndet |αE0 + (1 −α)E1| = 0.\n(7.20)\nThis gives us a cubic equation in α, which has either one or three solutions (roots). Substitut-\ning these values into (7.19) to obtain E, we can test this essential matrix against other unused\nfeature correspondences to select the correct one.\n7.2 Two-frame structure from motion\n351\nOnce ˆt has been recovered, how can we estimate the corresponding rotation matrix R?\nRecall that the cross-product operator [ˆt]× (2.32) projects a vector onto a set of orthogonal\nbasis vectors that include ˆt, zeros out the ˆt component, and rotates the other two by 90◦,\n[ˆt]× = SZR90◦ST =\nh\ns0\ns1\nˆt\ni\n\n\n1\n1\n0\n\n\n\n\n0\n−1\n1\n0\n1\n\n\n\n\nsT\n0\nsT\n1\nˆt\nT\n\n,\n(7.21)\nwhere ˆt = s0 × s1. From Equations (7.18 and 7.21), we get\nE = [ˆt]×R = SZR90◦ST R = UΣV T ,\n(7.22)\nfrom which we can conclude that S = U. Recall that for a noise-free essential matrix,\n(Σ = Z), and hence\nR90◦U T R = V T\n(7.23)\nand\nR = URT\n90◦V T .\n(7.24)\nUnfortunately, we only know both E and ˆt up to a sign. Furthermore, the matrices U and V\nare not guaranteed to be rotations (you can ﬂip both their signs and still get a valid SVD). For\nthis reason, we have to generate all four possible rotation matrices\nR = ±URT\n±90◦V T\n(7.25)\nand keep the two whose determinant |R| = 1. To disambiguate between the remaining pair\nof potential rotations, which form a twisted pair (Hartley and Zisserman 2004, p. 240), we\nneed to pair them with both possible signs of the translation direction ±ˆt and select the\ncombination for which the largest number of points is seen in front of both cameras.4\nThe property that points must lie in front of the camera, i.e., at a positive distance along\nthe viewing rays emanating from the camera, is known as chirality (Hartley 1998). In addition\nto determining the signs of the rotation and translation, as described above, the chirality (sign\nof the distances) of the points in a reconstruction can be used inside a RANSAC procedure\n(along with the reprojection errors) to distinguish between likely and unlikely conﬁgurations.5\nChirality can also be used to transform projective reconstructions (Sections 7.2.1 and 7.2.2)\ninto quasi-afﬁne reconstructions (Hartley 1998).\nThe normalized “eight-point algorithm” (Hartley 1997a) described above is not the only\nway to estimate the camera motion from correspondences. Variants include using seven points\n4 In the noise-free case, a single point sufﬁces. It is safer, however, to test all or a sufﬁcient subset of points,\ndownweighting the ones that lie close to the plane at inﬁnity, for which it is easy to get depth reversals.\n5 Note that as points get further away from a camera, i.e., closer toward the plane at inﬁnity, errors in chirality\nbecome more likely.\n352\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\ne\nxi0\nxi1\nFigure 7.4\nPure translational camera motion results in visual motion where all the points\nmove towards (or away from) a common focus of expansion (FOE) e. They therefore satisfy\nthe triple product condition (x0, x1, e) = e · (x0 × x1) = 0.\nwhile enforcing the rank two constraint in E (7.19–7.20) and a ﬁve-point algorithm that\nrequires ﬁnding the roots of a 10th degree polynomial (Nist´er 2004). Since such algorithms\nuse fewer points to compute their estimates, they are less sensitive to outliers when used as\npart of a random sampling (RANSAC) strategy.\nPure translation (known rotation)\nIn the case where we know the rotation, we can pre-rotate the points in the second image to\nmatch the viewing direction of the ﬁrst. The resulting set of 3D points all move towards (or\naway from) the focus of expansion (FOE), as shown in Figure 7.4.6 The resulting essential\nmatrix E is (in the noise-free case) skew symmetric and so can be estimated more directly by\nsetting eij = −eji and eii = 0 in (7.13). Two points with non-zero parallax now sufﬁce to\nestimate the FOE.\nA more direct derivation of the FOE estimate can be obtained by minimizing the triple\nproduct\nX\ni\n(xi0, xi1, e)2 =\nX\ni\n((xi0 × xi1) · e)2,\n(7.26)\nwhich is equivalent to ﬁnding the null space for the set of equations\n(yi0 −yi1)e0 + (xi1 −xi0)e1 + (xi0yi1 −yi0xi1)e2 = 0.\n(7.27)\nNote that, as in the eight-point algorithm, it is advisable to normalize the 2D points to have\nunit variance before computing this estimate.\nIn situations where a large number of points at inﬁnity are available, e.g., when shooting\noutdoor scenes or when the camera motion is small compared to distant objects, this suggests\nan alternative RANSAC strategy for estimating the camera motion. First, pick a pair of\npoints to estimate a rotation, hoping that both of the points lie at inﬁnity (very far from the\n6 Fans of Star Trek and Star Wars will recognize this as the “jump to hyperdrive” visual effect.",
  "image_path": "page_373.jpg",
  "pages": [
    372,
    373,
    374
  ]
}