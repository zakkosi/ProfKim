{
  "doc_id": "pages_804_806",
  "text": "782\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nservice that will process your webcam video in real time (Chiu and Raskar 2009). Video-\nMan (VideoManager, http://videomanlib.sourceforge.net/) can be useful for getting real-time\nvideo-based demos and applications running. You can also use imread in MATLAB to read\ndirectly from any URL, such as a webcam.\nBelow, I list some additional software that can be found on the Web, grouped by the book\nchapters to which they most correspond:\nChapter 3: Image processing\nmatlabPyrTools—MATLAB source code for Laplacian pyramids, QMF/Wavelets, and\nsteerable pyramids, http://www.cns.nyu.edu/∼lcv/software.php (Simoncelli and Adel-\nson 1990a; Simoncelli, Freeman, Adelson et al. 1992).\nBLS-GSM image denoising, http://decsai.ugr.es/∼javier/denoise/ (Portilla, Strela, Wain-\nwright et al. 2003).\nFast bilateral ﬁltering code, http://people.csail.mit.edu/jiawen/#code (Chen, Paris, and\nDurand 2007).\nC++ implementation of the fast distance transform algorithm, http://people.cs.uchicago.\nedu/∼pff/dt/ (Felzenszwalb and Huttenlocher 2004a).\nGREYC’s Magic Image Converter, including image restoration software using regular-\nization and anisotropic diffusion, http://gmic.sourceforge.net/gimp.shtml (Tschumperl´e\nand Deriche 2005).\nChapter 4: Feature detection and matching\nVLFeat, an open and portable library of computer vision algorithms, http://vlfeat.org/\n(Vedaldi and Fulkerson 2008).\nSiftGPU: A GPU Implementation of Scale Invariant Feature Transform (SIFT), http:\n//www.cs.unc.edu/∼ccwu/siftgpu/ (Wu 2010).\nSURF: Speeded Up Robust Features, http://www.vision.ee.ethz.ch/∼surf/ (Bay, Tuyte-\nlaars, and Van Gool 2006).\nFAST corner detection, http://mi.eng.cam.ac.uk/∼er258/work/fast.html (Rosten and Drum-\nmond 2005, 2006).\nLinux binaries for afﬁne region detectors and descriptors, as well as MATLAB ﬁles to\ncompute repeatability and matching scores, http://www.robots.ox.ac.uk/∼vgg/research/\nafﬁne/.\nC.2 Software\n783\nKanade–Lucas–Tomasi feature trackers: KLT, http://www.ces.clemson.edu/∼stb/klt/\n(Shi and Tomasi 1994); GPU-KLT, http://cs.unc.edu/∼cmzach/opensource.html (Zach,\nGallup, and Frahm 2008); and Lucas–Kanade 20 Years On, http://www.ri.cmu.edu/\nprojects/project 515.html (Baker and Matthews 2004).\nChapter 5: Segmentation\nEfﬁcient graph-based image segmentation, http://people.cs.uchicago.edu/∼pff/segment/\n(Felzenszwalb and Huttenlocher 2004b).\nEDISON, edge detection and image segmentation, http://coewww.rutgers.edu/riul/research/\ncode/EDISON/ (Meer and Georgescu 2001; Comaniciu and Meer 2002).\nNormalized cuts segmentation including intervening contours, http://www.cis.upenn.\nedu/∼jshi/software/ (Shi and Malik 2000; Malik, Belongie, Leung et al. 2001).\nSegmentation by weighted aggregation (SWA), http://www.cs.weizmann.ac.il/∼vision/\nSWA/ (Alpert, Galun, Basri et al. 2007).\nChapter 6: Feature-based alignment and calibration\nNon-iterative PnP algorithm, http://cvlab.epﬂ.ch/software/EPnP/ (Moreno-Noguer, Lep-\netit, and Fua 2007).\nTsai Camera Calibration Software, http://www-2.cs.cmu.edu/∼rgw/TsaiCode.html (Tsai\n1987).\nEasy Camera Calibration Toolkit, http://research.microsoft.com/en-us/um/people/zhang/\nCalib/ (Zhang 2000).\nCamera Calibration Toolbox for MATLAB, http://www.vision.caltech.edu/bouguetj/\ncalib doc/; a C version is included in OpenCV.\nMATLAB functions for multiple view geometry, http://www.robots.ox.ac.uk/∼vgg/hzbook/\ncode/ (Hartley and Zisserman 2004).\nChapter 7: Structure from motion\nSBA: A generic sparse bundle adjustment C/C++ package based on the Levenberg–\nMarquardt algorithm, http://www.ics.forth.gr/∼lourakis/sba/ (Lourakis and Argyros 2009).\nSimple sparse bundle adjustment (SSBA), http://cs.unc.edu/∼cmzach/opensource.html.\n784\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nBundler, structure from motion for unordered image collections, http://phototour.cs.\nwashington.edu/bundler/ (Snavely, Seitz, and Szeliski 2006).\nChapter 8: Dense motion estimation\nOptical ﬂow software, http://www.cs.brown.edu/∼black/code.html (Black and Anan-\ndan 1996).\nOptical ﬂow using total variation and conjugate gradient descent, http://people.csail.\nmit.edu/celiu/OpticalFlow/ (Liu 2009).\nTV-L1 optical ﬂow on the GPU, http://cs.unc.edu/∼cmzach/opensource.html (Zach,\nPock, and Bischof 2007a).\nelastix: a toolbox for rigid and nonrigid registration of images, http://elastix.isi.uu.nl/\n(Klein, Staring, and Pluim 2007).\nDeformable image registration using discrete optimization, http://www.mrf-registration.\nnet/deformable/index.html (Glocker, Komodakis, Tziritas et al. 2008).\nChapter 9: Image stitching\nMicrosoft Research Image Compositing Editor for stitching images, http://research.\nmicrosoft.com/en-us/um/redmond/groups/ivm/ice/.\nChapter 10: Computational photography\nHDRShop software for combining bracketed exposures into high-dynamic range radi-\nance images, http://projects.ict.usc.edu/graphics/HDRShop/.\nSuper-resolution code, http://www.robots.ox.ac.uk/∼vgg/software/SR/ (Pickup 2007;\nPickup, Capel, Roberts et al. 2007, 2009).\nChapter 11: Stereo correspondence\nStereoMatcher, standalone C++ stereo matching code, http://vision.middlebury.edu/\nstereo/code/ (Scharstein and Szeliski 2002).\nPatch-based multi-view stereo software (PMVS Version 2), http://grail.cs.washington.\nedu/software/pmvs/ (Furukawa and Ponce 2011).\nChapter 12: 3D reconstruction\nScanalyze: a system for aligning and merging range data, http://graphics.stanford.edu/\nsoftware/scanalyze/ (Curless and Levoy 1996).",
  "image_path": "page_805.jpg",
  "pages": [
    804,
    805,
    806
  ]
}