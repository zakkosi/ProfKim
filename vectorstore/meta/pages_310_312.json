{
  "doc_id": "pages_310_312",
  "text": "288\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\n(c)\n(d)\nFigure 5.15\nCoarse to ﬁne node aggregation in segmentation by weighted aggregation\n(SWA) (Sharon, Galun, Sharon et al. 2006) c⃝2006 Macmillan Publishers Ltd [Nature]: (a)\noriginal gray-level pixel grid; (b) inter-pixel couplings, where thicker lines indicate stronger\ncouplings; (c) after one level of coarsening, where each original pixel is strongly coupled to\none of the coarse-level nodes; (d) after two levels of coarsening.\n5.2.5 Probabilistic aggregation\nAlpert, Galun, Basri et al. (2007) develop a probabilistic merging algorithm based on two\ncues, namely gray-level similarity and texture similarity. The gray-level similarity between\nregions Ri and Rj is based on the minimal external difference from other neighboring regions,\nσ+\nlocal = min(∆+\ni , ∆+\nj ),\n(5.23)\nwhere ∆+\ni = mink |∆ik| and ∆ik is the difference in average intensities between regions Ri\nand Rk. This is compared to the average intensity difference,\nσ−\nlocal =\n∆−\ni + ∆−\nj\n2\n,\n(5.24)\nwhere ∆−\ni = P\nk(τik∆ik)/ P\nk(τik) and τik is the boundary length between regions Ri and\nRk. The texture similarity is deﬁned using relative differences between histogram bins of\nsimple oriented Sobel ﬁlter responses. The pairwise statistics σ+\nlocal and σ−\nlocal are used to\ncompute the likelihoods pij that two regions should be merged. (See the paper by Alpert,\nGalun, Basri et al. (2007) for more details.)\nMerging proceeds in a hierarchical fashion inspired by algebraic multigrid techniques\n(Brandt 1986; Briggs, Henson, and McCormick 2000) and previously used by Alpert, Galun,\nBasri et al. (2007) in their segmentation by weighted aggregation (SWA) algorithm (Sharon,\nGalun, Sharon et al. 2006), which we discuss in Section 5.4. A subset of the nodes C ⊂V\nthat are (collectively) strongly coupled to all of the original nodes (regions) are used to deﬁne\nthe problem at a coarser scale (Figure 5.15), where strong coupling is deﬁned as\nP\nj∈C pij\nP\nj∈V pij\n> φ,\n(5.25)\n5.3 Mean shift and mode ﬁnding\n289\nwith φ usually set to 0.2. The intensity and texture similarity statistics for the coarser nodes\nare recursively computed using weighted averaging, where the relative strengths (couplings)\nbetween coarse- and ﬁne-level nodes are based on their merge probabilities pij. This allows\nthe algorithm to run in essentially O(N) time, using the same kind of hierarchical aggrega-\ntion operations that are used in pyramid-based ﬁltering or preconditioning algorithms. After\na segmentation has been identiﬁed at a coarser level, the exact memberships of each pixel are\ncomputed by propagating coarse-level assignments to their ﬁner-level “children” (Sharon,\nGalun, Sharon et al. 2006; Alpert, Galun, Basri et al. 2007). Figure 5.22 shows the segmen-\ntations produced by this algorithm compared to other popular segmentation algorithms.\n5.3 Mean shift and mode ﬁnding\nMean-shift and mode ﬁnding techniques, such as k-means and mixtures of Gaussians, model\nthe feature vectors associated with each pixel (e.g., color and position) as samples from an\nunknown probability density function and then try to ﬁnd clusters (modes) in this distribution.\nConsider the color image shown in Figure 5.16a. How would you segment this image\nbased on color alone? Figure 5.16b shows the distribution of pixels in L*u*v* space, which\nis equivalent to what a vision algorithm that ignores spatial location would see. To make the\nvisualization simpler, let us only consider the L*u* coordinates, as shown in Figure 5.16c.\nHow many obvious (elongated) clusters do you see? How would you go about ﬁnding these\nclusters?\nThe k-means and mixtures of Gaussians techniques use a parametric model of the den-\nsity function to answer this question, i.e., they assume the density is the superposition of a\nsmall number of simpler distributions (e.g., Gaussians) whose locations (centers) and shape\n(covariance) can be estimated. Mean shift, on the other hand, smoothes the distribution and\nﬁnds its peaks as well as the regions of feature space that correspond to each peak. Since\na complete density is being modeled, this approach is called non-parametric (Bishop 2006).\nLet us look at these techniques in more detail.\n5.3.1 K-means and mixtures of Gaussians\nWhile k-means implicitly models the probability density as a superposition of spherically\nsymmetric distributions, it does not require any probabilistic reasoning or modeling (Bishop\n2006). Instead, the algorithm is given the number of clusters k it is supposed to ﬁnd; it\nthen iteratively updates the cluster center location based on the samples that are closest to\neach center. The algorithm can be initialized by randomly sampling k centers from the input\nfeature vectors. Techniques have also been developed for splitting or merging cluster centers\n290\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\n(c)\n(d)\n(e)\nFigure 5.16\nMean-shift image segmentation (Comaniciu and Meer 2002) c⃝2002 IEEE:\n(a) input color image; (b) pixels plotted in L*u*v* space; (c) L*u* space distribution; (d)\nclustered results after 159 mean-shift procedures; (e) corresponding trajectories with peaks\nmarked as red dots.",
  "image_path": "page_311.jpg",
  "pages": [
    310,
    311,
    312
  ]
}