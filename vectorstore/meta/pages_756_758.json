{
  "doc_id": "pages_756_758",
  "text": "734\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nAppendix A\nLinear algebra and numerical\ntechniques\nA.1\nMatrix decompositions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 736\nA.1.1\nSingular value decomposition\n. . . . . . . . . . . . . . . . . . . . . 736\nA.1.2\nEigenvalue decomposition . . . . . . . . . . . . . . . . . . . . . . . 737\nA.1.3\nQR factorization\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . 740\nA.1.4\nCholesky factorization . . . . . . . . . . . . . . . . . . . . . . . . . 741\nA.2\nLinear least squares . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 742\nA.2.1\nTotal least squares\n. . . . . . . . . . . . . . . . . . . . . . . . . . . 744\nA.3\nNon-linear least squares . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 746\nA.4\nDirect sparse matrix techniques . . . . . . . . . . . . . . . . . . . . . . . . . 747\nA.4.1\nVariable reordering . . . . . . . . . . . . . . . . . . . . . . . . . . . 748\nA.5\nIterative techniques . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 748\nA.5.1\nConjugate gradient . . . . . . . . . . . . . . . . . . . . . . . . . . . 749\nA.5.2\nPreconditioning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 751\nA.5.3\nMultigrid . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 753\n736\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nIn this appendix, we introduce some elements of linear algebra and numerical techniques that\nare used elsewhere in the book. We start with some basic decompositions in matrix algebra,\nincluding the singular value decomposition (SVD), eigenvalue decompositions, and other\nmatrix decompositions (factorizations). Next, we look at the problem of linear least squares,\nwhich can be solved using either the QR decomposition or normal equations. This is followed\nby non-linear least squares, which arise when the measurement equations are not linear in the\nunknowns or when robust error functions are used. Such problems require iteration to ﬁnd\na solution. Next, we look at direct solution (factorization) techniques for sparse problems,\nwhere the ordering of the variables can have a large inﬂuence on the computation and memory\nrequirements. Finally, we discuss iterative techniques for solving large linear (or linearized)\nleast squares problems. Good general references for much of this material include the work\nby Bj¨orck (1996), Golub and Van Loan (1996), Trefethen and Bau (1997), Meyer (2000),\nNocedal and Wright (2006), and Bj¨orck and Dahlquist (2010).\nA note on vector and matrix indexing.\nTo be consistent with the rest of the book and\nwith the general usage in the computer science and computer vision communities, I adopt\na 0-based indexing scheme for vector and matrix element indexing. Please note that most\nmathematical textbooks and papers use 1-based indexing, so you need to be aware of the\ndifferences when you read this book.\nSoftware implementations.\nHighly optimized and tested libraries corresponding to the al-\ngorithms described in this appendix are readily available and are listed in Appendix C.2.\nA.1 Matrix decompositions\nIn order to better understand the structure of matrices and more stably perform operations\nsuch as inversion and system solving, a number of decompositions (or factorizations) can be\nused. In this section, we review singular value decomposition (SVD), eigenvalue decomposi-\ntion, QR factorization, and Cholesky factorization.\nA.1.1 Singular value decomposition\nOne of the most useful decompositions in matrix algebra is the singular value decomposition\n(SVD), which states that any real-valued M × N matrix A can be written as\nAM×N\n=\nU M×P ΣP ×P V T\nP ×N\n(A.1)",
  "image_path": "page_757.jpg",
  "pages": [
    756,
    757,
    758
  ]
}