{
  "doc_id": "pages_617_619",
  "text": "12.4 Point-based representations\n595\n(x, y, z)\n+\n(nx, ny, nz)\n=⇒\n(a)\n(b)\n(c)\nFigure 12.12 Geometry images (Gu, Gortler, and Hoppe 2002) c⃝2002 ACM: (a) the 257×\n257 geometry image deﬁnes a mesh over the surface; (b) the 512 × 512 normal map deﬁnes\nvertex normals; (c) ﬁnal lit 3D model.\n12.4 Point-based representations\nAs we mentioned previously, triangle-based surface models assume that the topology (and\noften the rough shape) of the 3D model is known ahead of time. While it is possible to\nre-mesh a model as it is being deformed or ﬁtted, a simpler solution is to dispense with an\nexplicit triangle mesh altogether and to have triangle vertices behave as oriented points, or\nparticles, or surface elements (surfels) (Szeliski and Tonnesen 1992).\nIn order to endow the resulting particle system with internal smoothness constraints, pair-\nwise interaction potentials can be deﬁned that approximate the equivalent elastic bending\nenergies that would be obtained using local ﬁnite-element analysis.8 Instead of deﬁning the\nﬁnite element neighborhood for each particle (vertex) ahead of time, a soft inﬂuence function\nis used to couple nearby particles. The resulting 3D model can change both topology and par-\nticle density as it evolves and can therefore be used to interpolate partial 3D data with holes\n(Szeliski, Tonnesen, and Terzopoulos 1993b). Discontinuities in both the surface orientation\nand crease curves can also be modeled (Szeliski, Tonnesen, and Terzopoulos 1993a).\nTo render the particle system as a continuous surface, local dynamic triangulation heuris-\ntics (Szeliski and Tonnesen 1992) or direct surface element splatting (Pﬁster, Zwicker, van\nBaar et al. 2000) can be used. Another alternative is to ﬁrst convert the point cloud into an\nimplicit signed distance or inside–outside function, using either minimum signed distances\nto the oriented points (Hoppe, DeRose, Duchamp et al. 1992) or by interpolating a charac-\nteristic (inside–outside) function using radial basis functions (Turk and O’Brien 2002; Dinh,\nTurk, and Slabaugh 2002). Even greater precision over the implicit function ﬁtting, including\nthe ability to handle irregular point densities, can be obtained by computing a moving least\n8 As mentioned before, an alternative is to use sub-linear interaction potentials, which encourage the preservation\nof surface creases (Diebel, Thrun, and Br¨unig 2006).\n596\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\n(c)\n(d)\n(e)\nFigure 12.13 Point-based surface modeling with moving least squares (MLS) (Pauly, Keiser,\nKobbelt et al. 2003) c⃝2003 ACM: (a) a set of points (black dots) is turned into an implicit\ninside–outside function (black curve); (b) the signed distance to the nearest oriented point\ncan serve as an approximation to the inside–outside distance; (c) a set of oriented points\nwith variable sampling density representing a 3D surface (head model); (d) local estimate of\nsampling density, which is used in the moving least squares; (e) reconstructed continuous 3D\nsurface.\nsquares (MLS) estimate of the signed distance function (Alexa, Behr, Cohen-Or et al. 2003;\nPauly, Keiser, Kobbelt et al. 2003), as shown in Figure 12.13. Further improvements can\nbe obtained using local sphere ﬁtting (Guennebaud and Gross 2007), faster and more accu-\nrate re-sampling (Guennebaud, Germann, and Gross 2008), and kernel regression to better\ntolerate outliers (Oztireli, Guennebaud, and Gross 2008).\n12.5 Volumetric representations\nA third alternative for modeling 3D surfaces is to construct 3D volumetric inside–outside\nfunctions. We already saw examples of this in Section 11.6.1, where we looked at voxel color-\ning (Seitz and Dyer 1999), space carving (Kutulakos and Seitz 2000), and level set (Faugeras\nand Keriven 1998; Pons, Keriven, and Faugeras 2007) techniques for stereo matching, and\nSection 11.6.2, where we discussed using binary silhouette images to reconstruct volumes.\nIn this section, we look at continuous implicit (inside–outside) functions to represent 3D\nshape.\n12.5.1 Implicit surfaces and level sets\nWhile polyhedral and voxel-based representations can represent three-dimensional shapes\nto an arbitrary precision, they lack some of the intrinsic smoothness properties available\nwith continuous implicit surfaces, which use an indicator function (characteristic function)\nF(x, y, z) to indicate which 3D points are inside F(x, y, z) < 0 or outside F(x, y, z) > 0\n12.5 Volumetric representations\n597\nthe object.\nAn early example of using implicit functions to model 3D objects in computer vision are\nsuperquadrics, which are a generalization of quadric (e.g., ellipsoidal) parametric volumetric\nmodels,\nF(x, y, z) =\n \u0012 x\na1\n\u00132/ϵ2\n+\n\u0012 y\na2\n\u00132/ϵ2!ϵ2/ϵ1\n+\n\u0012 x\na1\n\u00132/ϵ1\n−1 = 0\n(12.8)\n(Pentland 1986; Solina and Bajcsy 1990; Waithe and Ferrie 1991; Leonardis, Jakliˇc, and\nSolina 1997). The values of (a1, a2, a3) control the extent of model along each (x, y, z) axis,\nwhile the values of (ϵ1, ϵ2) control how “square” it is. To model a wider variety of shapes,\nsuperquadrics are usually combined with either rigid or non-rigid deformations (Terzopoulos\nand Metaxas 1991; Metaxas and Terzopoulos 2002). Superquadric models can either be ﬁt to\nrange data or used directly for stereo matching.\nA different kind of implicit shape model can be constructed by deﬁning a signed distance\nfunction over a regular three-dimensional grid, optionally using an octree spline to represent\nthis function more coarsely away from its surface (zero-set) (Lavall´ee and Szeliski 1995;\nSzeliski and Lavall´ee 1996; Frisken, Perry, Rockwood et al. 2000; Ohtake, Belyaev, Alexa\net al. 2003). We have already seen examples of signed distance functions being used to\nrepresent distance transforms (Section 3.3.3), level sets for 2D contour ﬁtting and tracking\n(Section 5.1.4), volumetric stereo (Section 11.6.1), range data merging (Section 12.2.1), and\npoint-based modeling (Section 12.4). The advantage of representing such functions directly\non a grid is that it is quick and easy to look up distance function values for any (x, y, z)\nlocation and also easy to extract the isosurface using the marching cubes algorithm (Lorensen\nand Cline 1987). The work of Ohtake, Belyaev, Alexa et al. (2003) is particularly notable\nsince it allows for several distance functions to be used simultaneously and then combined\nlocally to produce sharp features such as creases.\nPoisson surface reconstruction (Kazhdan, Bolitho, and Hoppe 2006) uses a closely related\nvolumetric function, namely a smoothed 0/1 inside–outside (characteristic) function, which\ncan be thought of as a clipped signed distance function. The gradients for this function are\nset to lie along oriented surface normals near known surface points and 0 elsewhere. The\nfunction itself is represented using a quadratic tensor-product B-spline over an octree, which\nprovides a compact representation with larger cells away from the surface or in regions of\nlower point density, and also admits the efﬁcient solution of the related Poisson equations\n(3.100–3.102), see Section 9.3.4 (P´erez, Gangnet, and Blake 2003).\nIt is also possible to replace the quadratic penalties used in the Poisson equations with\nL1 (total variation) constraints and still obtain a convex optimization problem, which can be\nsolved using either continuous (Zach, Pock, and Bischof 2007b; Zach 2008) or discrete graph\ncut (Lempitsky and Boykov 2007) techniques.",
  "image_path": "page_618.jpg",
  "pages": [
    617,
    618,
    619
  ]
}