{
  "doc_id": "pages_573_575",
  "text": "11.4 Local methods\n551\n(a)\n(b)\n(c)\nFigure 11.10 Uncertainty in stereo depth estimation (Szeliski 1991b): (a) input image; (b)\nestimated depth map (blue is closer); (c) estimated conﬁdence(red is higher). As you can see,\nmore textured areas have higher conﬁdence.\nright and right-to-left disparity maps (Fua 1993). A median ﬁlter can be applied to clean\nup spurious mismatches, and holes due to occlusion can be ﬁlled by surface ﬁtting or by\ndistributing neighboring disparity estimates (Birchﬁeld and Tomasi 1999; Scharstein 1999;\nHirschm¨uller and Scharstein 2009).\nAnother kind of post-processing, which can be useful in later processing stages, is to asso-\nciate conﬁdences with per-pixel depth estimates (Figure 11.10), which can be done by looking\nat the curvature of the correlation surface, i.e., how strong the minimum in the DSI image is\nat the winning disparity. Matthies, Kanade, and Szeliski (1989) show that under the assump-\ntion of small noise, photometrically calibrated images, and densely sampled disparities, the\nvariance of a local depth estimate can be estimated as\nV ar(d) = σ2\nI\na ,\n(11.7)\nwhere a is the curvature of the DSI as a function of d, which can be measured using a local\nparabolic ﬁt or by squaring all the horizontal gradients in the window, and σ2\nI is the vari-\nance of the image noise, which can be estimated from the minimum SSD score. (See also\nSection 6.1.4, (8.44), and Appendix B.6.)\n11.4.2 Application: Stereo-based head tracking\nA common application of real-time stereo algorithms is for tracking the position of a user\ninteracting with a computer or game system. The use of stereo can dramatically improve\nthe reliability of such a system compared to trying to use monocular color and intensity\ninformation (Darrell, Gordon, Harville et al. 2000). Once recovered, this information can\nbe used in a variety of applications, including controlling a virtual environment or game,\n552\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\ncorrecting the apparent gaze during video conferencing, and background replacement. We\ndiscuss the ﬁrst two applications below and defer the discussion of background replacement\nto Section 11.5.3.\nThe use of head tracking to control a user’s virtual viewpoint while viewing a 3D object\nor environment on a computer monitor is sometimes called ﬁsh tank virtual reality, since the\nuser is observing a 3D world as if it were contained inside a ﬁsh tank (Ware, Arthur, and\nBooth 1993). Early versions of these systems used mechanical head tracking devices and\nstereo glasses. Today, such systems can be controlled using stereo-based head tracking and\nstereo glasses can be replaced with autostereoscopic displays. Head tracking can also be used\nto construct a “virtual mirror”, where the user’s head can be modiﬁed in real-time using a\nvariety of visual effects (Darrell, Baker, Crow et al. 1997).\nAnother application of stereo head tracking and 3D reconstruction is in gaze correction\n(Ott, Lewis, and Cox 1993). When a user participates in a desktop video-conference or video\nchat, the camera is usually placed on top of the monitor. Since the person is gazing at a\nwindow somewhere on the screen, it appears as if they are looking down and away from the\nother participants, instead of straight at them. Replacing the single camera with two or more\ncameras enables a virtual view to be constructed right at the position where they are looking\nresulting in virtual eye contact. Real-time stereo matching is used to construct an accurate 3D\nhead model and view interpolation (Section 13.1) is used to synthesize the novel in-between\nview (Criminisi, Shotton, Blake et al. 2003).\n11.5 Global optimization\nGlobal stereo matching methods perform some optimization or iteration steps after the dis-\nparity computation phase and often skip the aggregation step altogether, because the global\nsmoothness constraints perform a similar function. Many global methods are formulated in\nan energy-minimization framework, where, as we saw in Sections 3.7 (3.100–3.102) and 8.4,\nthe objective is to ﬁnd a solution d that minimizes a global energy,\nE(d) = Ed(d) + λEs(d).\n(11.8)\nThe data term, Ed(d), measures how well the disparity function d agrees with the input image\npair. Using our previously deﬁned disparity space image, we deﬁne this energy as\nEd(d) =\nX\n(x,y)\nC(x, y, d(x, y)),\n(11.9)\nwhere C is the (initial or aggregated) matching cost DSI.\nThe smoothness term Es(d) encodes the smoothness assumptions made by the algorithm.\nTo make the optimization computationally tractable, the smoothness term is often restricted\n11.5 Global optimization\n553\nto measuring only the differences between neighboring pixels’ disparities,\nEs(d) =\nX\n(x,y)\nρ(d(x, y) −d(x + 1, y)) + ρ(d(x, y) −d(x, y + 1)),\n(11.10)\nwhere ρ is some monotonically increasing function of disparity difference. It is also possi-\nble to use larger neighborhoods, such as N8, which can lead to better boundaries (Boykov\nand Kolmogorov 2003), or to use second-order smoothness terms (Woodford, Reid, Torr et\nal. 2008), but such terms require more complex optimization techniques. An alternative to\nsmoothness functionals is to use a lower-dimensional representation such as splines (Szeliski\nand Coughlan 1997).\nIn standard regularization (Section 3.7.1), ρ is a quadratic function, which makes d smooth\neverywhere and may lead to poor results at object boundaries. Energy functions that do not\nhave this problem are called discontinuity-preserving and are based on robust ρ functions\n(Terzopoulos 1986b; Black and Rangarajan 1996). The seminal paper by Geman and Ge-\nman (1984) gave a Bayesian interpretation of these kinds of energy functions and proposed a\ndiscontinuity-preserving energy function based on Markov random ﬁelds (MRFs) and addi-\ntional line processes, which are additional binary variables that control whether smoothness\npenalties are enforced or not. Black and Rangarajan (1996) show how independent line pro-\ncess variables can be replaced by robust pairwise disparity terms.\nThe terms in Es can also be made to depend on the intensity differences, e.g.,\nρd(d(x, y) −d(x + 1, y)) · ρI(∥I(x, y) −I(x + 1, y)∥),\n(11.11)\nwhere ρI is some monotonically decreasing function of intensity differences that lowers\nsmoothness costs at high-intensity gradients. This idea (Gamble and Poggio 1987; Fua 1993;\nBobick and Intille 1999; Boykov, Veksler, and Zabih 2001) encourages disparity discontinu-\nities to coincide with intensity or color edges and appears to account for some of the good\nperformance of global optimization approaches. While most researchers set these functions\nheuristically, Scharstein and Pal (2007) show how the free parameters in such conditional\nrandom ﬁelds (Section 3.7.2, (3.118)) can be learned from ground truth disparity maps.\nOnce the global energy has been deﬁned, a variety of algorithms can be used to ﬁnd a\n(local) minimum. Traditional approaches associated with regularization and Markov random\nﬁelds include continuation (Blake and Zisserman 1987), simulated annealing (Geman and\nGeman 1984; Marroquin, Mitter, and Poggio 1987; Barnard 1989), highest conﬁdence ﬁrst\n(Chou and Brown 1990), and mean-ﬁeld annealing (Geiger and Girosi 1991).\nMore recently, max-ﬂow and graph cut methods have been proposed to solve a special\nclass of global optimization problems (Roy and Cox 1998; Boykov, Veksler, and Zabih 2001;\nIshikawa 2003). Such methods are more efﬁcient than simulated annealing and have produced\ngood results, as have techniques based on loopy belief propagation (Sun, Zheng, and Shum",
  "image_path": "page_574.jpg",
  "pages": [
    573,
    574,
    575
  ]
}