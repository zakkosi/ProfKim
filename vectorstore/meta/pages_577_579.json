{
  "doc_id": "pages_577_579",
  "text": "11.5 Global optimization\n555\nc\nd\ne\nf\ng\nk\na\nLeft scanline\ni\nRight scanline\na\nc\nf\ng\nj\nk\nh\nb\nM\nL\nR\nR\nR\nM\nL\nL\nM\nM\nM\nk\nd\n1\n2\n3\n2\n8\n10\nm\n1\n2\n3\n4\n0\nLeft\nn\n1\n2\n3\n4\nRight\nCyclopean\nDisparity\n6\n4\n(a)\n(b)\nFigure 11.11 Stereo matching using dynamic programming, as illustrated by (a) Scharstein\nand Szeliski (2002) c⃝2002 Springer and (b) Kolmogorov, Criminisi, Blake et al. (2006). c⃝\n2006 IEEE. For each pair of corresponding scanlines, a minimizing path through the matrix\nof all pairwise matching costs (DSI) is selected. Lowercase letters (a–k) symbolize the inten-\nsities along each scanline. Uppercase letters represent the selected path through the matrix.\nMatches are indicated by M, while partially occluded points (which have a ﬁxed cost) are\nindicated by L or R, corresponding to points only visible in the left or right images, respec-\ntively. Usually, only a limited disparity range is considered (0–4 in the ﬁgure, indicated by\nthe non-shaded squares). The representation in (a) allows for diagonal moves while the rep-\nresentation in (b) does not. Note that these diagrams, which use the Cyclopean representation\nof depth, i.e., depth relative to a camera between the two input cameras, show an “unskewed”\nx-d slice through the DSI.\nTo implement dynamic programming for a scanline y, each entry (state) in a 2D cost\nmatrix D(m, n) is computed by combining its DSI value\nC′(m, n) = C(m + n, m −n, y)\n(11.12)\nwith one of its predecessor cost values.\nUsing the representation shown in Figure 11.11a,\nwhich allows for “diagonal” moves, the aggregated match costs can be recursively computed\nas\nD(m, n, M)\n=\nmin(D(m−1, n−1, M), D(m−1, n, L), D(m−1, n−1, R)) + C′(m, n)\nD(m, n, L)\n=\nmin(D(m−1, n−1, M), D(m−1, n, L)) + O\n(11.13)\nD(m, n, R)\n=\nmin(D(m, n−1, M), D(m, n−1, R)) + O,\nwhere O is a per-pixel occlusion cost. The aggregation rules corresponding to Figure 11.11b\nare given by Kolmogorov, Criminisi, Blake et al. (2006), who also use a two-state foreground–\nbackground model for bi-layer segmentation.\n556\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nProblems with dynamic programming stereo include the selection of the right cost for\noccluded pixels and the difﬁculty of enforcing inter-scanline consistency, although several\nmethods propose ways of addressing the latter (Ohta and Kanade 1985; Belhumeur 1996;\nCox, Hingorani, Rao et al. 1996; Bobick and Intille 1999; Birchﬁeld and Tomasi 1999;\nKolmogorov, Criminisi, Blake et al. 2006). Another problem is that the dynamic program-\nming approach requires enforcing the monotonicity or ordering constraint (Yuille and Poggio\n1984). This constraint requires that the relative ordering of pixels on a scanline remain the\nsame between the two views, which may not be the case in scenes containing narrow fore-\nground objects.\nAn alternative to traditional dynamic programming, introduced by Scharstein and Szeliski\n(2002), is to neglect the vertical smoothness constraints in (11.10) and simply optimize in-\ndependent scanlines in the global energy function (11.8), which can easily be done using a\nrecursive algorithm,\nD(x, y, d) = C(x, y, d) + min\nd′ {D(x −1, y, d′) + ρd(d −d′)} .\n(11.14)\nThe advantage of this scanline optimization algorithm is that it computes the same represen-\ntation and minimizes a reduced version of the same energy function as the full 2D energy\nfunction (11.8). Unfortunately, it still suffers from the same streaking artifacts as dynamic\nprogramming.\nA much better approach is to evaluate the cumulative cost function (11.14) from multiple\ndirections, e.g, from the eight cardinal directions, N, E, W, S, NE, SE, SW, NW (Hirschm¨uller\n2008). The resulting semi-global optimization performs quite well and is extremely efﬁcient\nto implement.\nEven though dynamic programming and scanline optimization algorithms do not gen-\nerally produce the most accurate stereo reconstructions, when combined with sophisticated\naggregation strategies, they can produce very fast and high-quality results.\n11.5.2 Segmentation-based techniques\nWhile most stereo matching algorithms perform their computations on a per-pixel basis, some\nof the more recent techniques ﬁrst segment the images into regions and then try to label each\nregion with a disparity.\nFor example, Tao, Sawhney, and Kumar (2001) segment the reference image, estimate\nper-pixel disparities using a local technique, and then do local plane ﬁts inside each segment\nbefore applying smoothness constraints between neighboring segments. Zitnick, Kang, Uyt-\ntendaele et al. (2004) and Zitnick and Kang (2007) use over-segmentation to mitigate initial\nbad segmentations. After a set of initial cost values for each segment has been stored into\na disparity space distribution (DSD), iterative relaxation (or loopy belief propagation, in the\n11.5 Global optimization\n557\n(a)\n(b)\n(c)\n(d)\n(e)\nFigure 11.12 Segmentation-based stereo matching (Zitnick, Kang, Uyttendaele et al. 2004)\nc⃝2004 ACM: (a) input color image; (b) color-based segmentation; (c) initial disparity es-\ntimates; (d) ﬁnal piecewise-smoothed disparities; (e) MRF neighborhood deﬁned over the\nsegments in the disparity space distribution (Zitnick and Kang 2007) c⃝2007 Springer.\n(a)\n(b)\nFigure 11.13\nStereo matching with adaptive over-segmentation and matting (Taguchi,\nWilburn, and Zitnick 2008) c⃝2008 IEEE: (a) segment boundaries are reﬁned during the\noptimization, leading to more accurate results (e.g., the thin green leaf in the bottom row); (b)\nalpha mattes are extracted at segment boundaries, which leads to visually better compositing\nresults (middle column).\nmore recent work of Zitnick and Kang (2007)) is used to adjust the disparity estimates for\neach segment, as shown in Figure 11.12. Taguchi, Wilburn, and Zitnick (2008) reﬁne the\nsegment shapes as part of the optimization process, which leads to much improved results, as\nshown in Figure 11.13.\nEven more accurate results are obtained by Klaus, Sormann, and Karner (2006), who ﬁrst\nsegment the reference image using mean shift, run a small (3 × 3) SAD plus gradient SAD\n(weighted by cross-checking) to get initial disparity estimates, ﬁt local planes, re-ﬁt with\nglobal planes, and then run a ﬁnal MRF on plane assignments with loopy belief propagation.\nWhen the algorithm was ﬁrst introduced in 2006, it was the top ranked algorithm on the\nevaluation site at http://vision.middlebury.edu/stereo; in early 2010, it still had the top rank\non the new evaluation datasets.\nThe highest ranked algorithm, by Wang and Zheng (2008), follows a similar approach of\nsegmenting the image, doing local plane ﬁts, and then performing cooperative optimization",
  "image_path": "page_578.jpg",
  "pages": [
    577,
    578,
    579
  ]
}