{
  "doc_id": "pages_475_477",
  "text": "9.3 Compositing\n453\nif the ﬁnal panorama has a lower resolution than the input images, pre-ﬁltering the input\nimages is necessary to avoid aliasing. These issues have been extensively studied in both the\nimage processing and computer graphics communities. The basic problem is to compute the\nappropriate pre-ﬁlter, which depends on the distance (and arrangement) between neighboring\nsamples in a source image. As discussed in Sections 3.5.2 and 3.6.1, various approximate\nsolutions, such as MIP mapping (Williams 1983) or elliptically weighted Gaussian averaging\n(Greene and Heckbert 1986) have been developed in the graphics community. For highest\nvisual quality, a higher order (e.g., cubic) interpolator combined with a spatially adaptive pre-\nﬁlter may be necessary (Wang, Kang, Szeliski et al. 2001). Under certain conditions, it may\nalso be possible to produce images with a higher resolution than the input images using the\nprocess of super-resolution (Section 10.3).\n9.3.2 Pixel selection and weighting (de-ghosting)\nOnce the source pixels have been mapped onto the ﬁnal composite surface, we must still\ndecide how to blend them in order to create an attractive-looking panorama. If all of the\nimages are in perfect registration and identically exposed, this is an easy problem, i.e., any\npixel or combination will do. However, for real images, visible seams (due to exposure\ndifferences), blurring (due to mis-registration), or ghosting (due to moving objects) can occur.\nCreating clean, pleasing-looking panoramas involves both deciding which pixels to use\nand how to weight or blend them. The distinction between these two stages is a little ﬂuid,\nsince per-pixel weighting can be thought of as a combination of selection and blending. In\nthis section, we discuss spatially varying weighting, pixel selection (seam placement), and\nthen more sophisticated blending.\nFeathering and center-weighting.\nThe simplest way to create a ﬁnal composite is to sim-\nply take an average value at each pixel,\nC(x) =\nX\nk\nwk(x)˜Ik(x)\n,X\nk\nwk(x) ,\n(9.37)\nwhere ˜Ik(x) are the warped (re-sampled) images and wk(x) is 1 at valid pixels and 0 else-\nwhere. On computer graphics hardware, this kind of summation can be performed in an\naccumulation buffer (using the A channel as the weight).\nSimple averaging usually does not work very well, since exposure differences, mis-\nregistrations, and scene movement are all very visible (Figure 9.14a). If rapidly moving\nobjects are the only problem, taking a median ﬁlter (which is a kind of pixel selection opera-\ntor) can often be used to remove them (Figure 9.14b) (Irani and Anandan 1998). Conversely,\ncenter-weighting (discussed below) and minimum likelihood selection (Agarwala, Dontcheva,\n454\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\n(c)\n(d)\n(e)\n(f)\n(g)\n(h)\nFigure 9.14\nFinal composites computed by a variety of algorithms (Szeliski 2006a): (a)\naverage, (b) median, (c) feathered average, (d) p-norm p = 10, (e) Voronoi, (f) weighted\nROD vertex cover with feathering, (g) graph cut seams with Poisson blending and (h) with\npyramid blending.\n9.3 Compositing\n455\nAgrawala et al. 2004) can sometimes be used to retain multiple copies of a moving object\n(Figure 9.17).\nA better approach to averaging is to weight pixels near the center of the image more\nheavily and to down-weight pixels near the edges. When an image has some cutout regions,\ndown-weighting pixels near the edges of both cutouts and the image is preferable. This can\nbe done by computing a distance map or grassﬁre transform,\nwk(x) = arg min\ny {∥y∥| ˜Ik(x + y) is invalid },\n(9.38)\nwhere each valid pixel is tagged with its Euclidean distance to the nearest invalid pixel (Sec-\ntion 3.3.3). The Euclidean distance map can be efﬁciently computed using a two-pass raster\nalgorithm (Danielsson 1980; Borgefors 1986).\nWeighted averaging with a distance map is often called feathering (Szeliski and Shum\n1997; Chen and Klette 1999; Uyttendaele, Eden, and Szeliski 2001) and does a reasonable job\nof blending over exposure differences. However, blurring and ghosting can still be problems\n(Figure 9.14c). Note that weighted averaging is not the same as compositing the individual\nimages with the classic over operation (Porter and Duff 1984; Blinn 1994a), even when using\nthe weight values (normalized to sum up to one) as alpha (translucency) channels. This is\nbecause the over operation attenuates the values from more distant surfaces and, hence, is not\nequivalent to a direct sum.\nOne way to improve feathering is to raise the distance map values to some large power,\ni.e., to use wp\nk(x) in Equation (9.37). The weighted averages then become dominated by\nthe larger values, i.e., they act somewhat like a p-norm. The resulting composite can often\nprovide a reasonable tradeoff between visible exposure differences and blur (Figure 9.14d).\nIn the limit as p →∞, only the pixel with the maximum weight is selected,\nC(x) = ˜Il(x)(x),\n(9.39)\nwhere\nl = arg max\nk\nwk(x)\n(9.40)\nis the label assignment or pixel selection function that selects which image to use at each\npixel. This hard pixel selection process produces a visibility mask-sensitive variant of the fa-\nmiliar Voronoi diagram, which assigns each pixel to the nearest image center in the set (Wood,\nFinkelstein, Hughes et al. 1997; Peleg, Rousso, Rav-Acha et al. 2000). The resulting com-\nposite, while useful for artistic guidance and in high-overlap panoramas (manifold mosaics)\ntends to have very hard edges with noticeable seams when the exposures vary (Figure 9.14e).\nXiong and Turkowski (1998) use this Voronoi idea (local maximum of the grassﬁre trans-\nform) to select seams for Laplacian pyramid blending (which is discussed below). However,",
  "image_path": "page_476.jpg",
  "pages": [
    475,
    476,
    477
  ]
}