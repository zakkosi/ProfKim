{
  "doc_id": "pages_155_157",
  "text": "3.4 Fourier transforms\n133\ns(x)\no(x)\nh(x)\ns\no\nx\nx\nA\nφ\nFigure 3.24\nThe Fourier Transform as the response of a ﬁlter h(x) to an input sinusoid\ns(x) = ejωx yielding an output sinusoid o(x) = h(x) ∗s(x) = Aejωx+φ.\nbe the input sinusoid whose frequency is f, angular frequency is ω = 2πf, and phase is φi.\nNote that in this section, we use the variables x and y to denote the spatial coordinates of an\nimage, rather than i and j as in the previous sections. This is both because the letters i and j\nare used for the imaginary number (the usage depends on whether you are reading complex\nvariables or electrical engineering literature) and because it is clearer how to distinguish the\nhorizontal (x) and vertical (y) components in frequency space. In this section, we use the\nletter j for the imaginary number, since that is the form more commonly found in the signal\nprocessing literature (Bracewell 1986; Oppenheim and Schafer 1996; Oppenheim, Schafer,\nand Buck 1999).\nIf we convolve the sinusoidal signal s(x) with a ﬁlter whose impulse response is h(x),\nwe get another sinusoid of the same frequency but different magnitude A and phase φo,\no(x) = h(x) ∗s(x) = A sin(ωx + φo),\n(3.48)\nas shown in Figure 3.24. To see that this is the case, remember that a convolution can be\nexpressed as a weighted summation of shifted input signals (3.14) and that the summation of\na bunch of shifted sinusoids of the same frequency is just a single sinusoid at that frequency.8\nThe new magnitude A is called the gain or magnitude of the ﬁlter, while the phase difference\n∆φ = φo −φi is called the shift or phase.\nIn fact, a more compact notation is to use the complex-valued sinusoid\ns(x) = ejωx = cos ωx + j sin ωx.\n(3.49)\nIn that case, we can simply write,\no(x) = h(x) ∗s(x) = Aejωx+φ.\n(3.50)\n8 If h is a general (non-linear) transform, additional harmonic frequencies are introduced. This was traditionally\nthe bane of audiophiles, who insisted on equipment with no harmonic distortion. Now that digital audio has intro-\nduced pure distortion-free sound, some audiophiles are buying retro tube ampliﬁers or digital signal processors that\nsimulate such distortions because of their “warmer sound”.\n134\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nThe Fourier transform is simply a tabulation of the magnitude and phase response at each\nfrequency,\nH(ω) = F {h(x)} = Aejφ,\n(3.51)\ni.e., it is the response to a complex sinusoid of frequency ω passed through the ﬁlter h(x).\nThe Fourier transform pair is also often written as\nh(x) F\n↔H(ω).\n(3.52)\nUnfortunately, (3.51) does not give an actual formula for computing the Fourier transform.\nInstead, it gives a recipe, i.e., convolve the ﬁlter with a sinusoid, observe the magnitude and\nphase shift, repeat. Fortunately, closed form equations for the Fourier transform exist both in\nthe continuous domain,\nH(ω) =\nZ ∞\n−∞\nh(x)e−jωxdx,\n(3.53)\nand in the discrete domain,\nH(k) = 1\nN\nN−1\nX\nx=0\nh(x)e−j 2πkx\nN ,\n(3.54)\nwhere N is the length of the signal or region of analysis. These formulas apply both to ﬁlters,\nsuch as h(x), and to signals or images, such as s(x) or g(x).\nThe discrete form of the Fourier transform (3.54) is known as the Discrete Fourier Trans-\nform (DFT). Note that while (3.54) can be evaluated for any value of k, it only makes sense\nfor values in the range k ∈[−N\n2 , N\n2 ]. This is because larger values of k alias with lower\nfrequencies and hence provide no additional information, as explained in the discussion on\naliasing in Section 2.3.1.\nAt face value, the DFT takes O(N 2) operations (multiply-adds) to evaluate. Fortunately,\nthere exists a faster algorithm called the Fast Fourier Transform (FFT), which requires only\nO(N log2 N) operations (Bracewell 1986; Oppenheim, Schafer, and Buck 1999). We do not\nexplain the details of the algorithm here, except to say that it involves a series of log2 N\nstages, where each stage performs small 2×2 transforms (matrix multiplications with known\ncoefﬁcients) followed by some semi-global permutations. (You will often see the term but-\nterﬂy applied to these stages because of the pictorial shape of the signal processing graphs\ninvolved.) Implementations for the FFT can be found in most numerical and signal processing\nlibraries.\nNow that we have deﬁned the Fourier transform, what are some of its properties and how\ncan they be used? Table 3.1 lists a number of useful properties, which we describe in a little\nmore detail below:\n3.4 Fourier transforms\n135\nProperty\nSignal\nTransform\nsuperposition\nf1(x) + f2(x)\nF1(ω) + F2(ω)\nshift\nf(x −x0)\nF(ω)e−jωx0\nreversal\nf(−x)\nF ∗(ω)\nconvolution\nf(x) ∗h(x)\nF(ω)H(ω)\ncorrelation\nf(x) ⊗h(x)\nF(ω)H∗(ω)\nmultiplication\nf(x)h(x)\nF(ω) ∗H(ω)\ndifferentiation\nf ′(x)\njωF(ω)\ndomain scaling\nf(ax)\n1/aF(ω/a)\nreal images\nf(x) = f ∗(x)\n⇔\nF(ω) = F(−ω)\nParseval’s Theorem\nP\nx[f(x)]2\n=\nP\nω[F(ω)]2\nTable 3.1\nSome useful properties of Fourier transforms. The original transform pair is\nF(ω) = F{f(x)}.\n• Superposition: The Fourier transform of a sum of signals is the sum of their Fourier\ntransforms. Thus, the Fourier transform is a linear operator.\n• Shift: The Fourier transform of a shifted signal is the transform of the original signal\nmultiplied by a linear phase shift (complex sinusoid).\n• Reversal: The Fourier transform of a reversed signal is the complex conjugate of the\nsignal’s transform.\n• Convolution: The Fourier transform of a pair of convolved signals is the product of\ntheir transforms.\n• Correlation: The Fourier transform of a correlation is the product of the ﬁrst transform\ntimes the complex conjugate of the second one.\n• Multiplication: The Fourier transform of the product of two signals is the convolution\nof their transforms.\n• Differentiation: The Fourier transform of the derivative of a signal is that signal’s\ntransform multiplied by the frequency. In other words, differentiation linearly empha-\nsizes (magniﬁes) higher frequencies.\n• Domain scaling: The Fourier transform of a stretched signal is the equivalently com-\npressed (and scaled) version of the original transform and vice versa.",
  "image_path": "page_156.jpg",
  "pages": [
    155,
    156,
    157
  ]
}