{
  "doc_id": "pages_695_697",
  "text": "14.2 Face recognition\n673\ndistance from face space (DFFS), can be computed directly in pixel space and represents the\n“faceness” of a particular image.9 It is also possible to measure the distance between two\ndifferent faces in face space as\nDIFS(x, y) = ∥˜x −˜y∥=\nv\nu\nu\nt\nM−1\nX\ni=0\n(ai −bi)2,\n(14.13)\nwhere the bi = (y −m) · ui are the eigenface coefﬁcients corresponding to y.\nComputing such distances in Euclidean vector space, however, does not exploit the ad-\nditional information that the eigenvalue decomposition of our covariance matrix (14.10) pro-\nvides. If we interpret the covariance matrix C as the covariance of a multi-variate Gaussian\n(Appendix B.1.1),10 we can turn the DIFS into a log likelihood by computing the Maha-\nlanobis distance\nDIFS′ = ∥˜x −m∥C\n−1 =\nv\nu\nu\nt\nM−1\nX\ni=0\na2\ni /λ2\ni .\n(14.14)\nInstead of measuring the squared distance along each principal component in face space F,\nthe Mahalanobis distance measures the ratio between the squared distance and the corre-\nsponding variance σ2\ni = λi and then sums these squared ratios (per-component log-likelihoods).\nAn alternative way to implement this is to pre-scale each eigenvector by the inverse square\nroot of its corresponding eigenvalue,\nˆU = UΛ−1/2.\n(14.15)\nThis whitening transformation then means that Euclidean distances in feature (face) space\nnow correspond directly to log likelihoods (Moghaddam, Jebara, and Pentland 2000). (This\nsame whitening approach can also be used in feature-based matching algorithms, as discussed\nin Section 4.1.3.)\nIf the distribution in eigenface space is very elongated, the Mahalanobis distance properly\nscales the components to come up with a sensible (probabilistic) distance from the mean.\nA similar analysis can be performed for computing a sensible difference from face space\n(DFFS) (Moghaddam and Pentland 1997) and the two terms can be combined to produce an\nestimate of the likelihood of being a true face, which can be useful in doing face detection\n(Section 14.1.1). More detailed explanations of probabilistic and Bayesian PCA can be found\nin textbooks on statistical learning (Hastie, Tibshirani, and Friedman 2001; Bishop 2006),\nwhich also discuss techniques for selecting the optimum number of components M to use in\nmodeling a distribution.\n9 This can be used to form a simple face detector, as mentioned in Section 14.1.1.\n10 The ellipse shown in Figure 14.14 denotes an equi-probability contour of this multi-variate Gaussian.\n674\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nFigure 14.15 Images from the Harvard database used by Belhumeur, Hespanha, and Krieg-\nman (1997) c⃝1997 IEEE. Note the wide range of illumination variation, which can be more\ndramatic than inter-personal variations.\nOne of the biggest advantages of using eigenfaces is that they reduce the comparison\nof a new face image x to a prototype (training) face image xk (one of the colored xs in\nFigure 14.14) from a P-dimensional difference in pixel space to an M-dimensional difference\nin face space,\n∥x −xk∥= ∥a −ak∥,\n(14.16)\nwhere a = U T (x −m) (14.11) involves computing a dot product between the signed\ndifference-from-mean image (x −m) and each of the eigenfaces ui. Once again, however,\nthis Euclidean distance ignores the fact that we have more information about face likelihoods\navailable in the distribution of training images.\nConsider the set of images of one person taken under a wide range of illuminations shown\nin Figure 14.15. As you can see, the intrapersonal variability within these images is much\ngreater than the typical extrapersonal variability between any two people taken under the\nsame illumination. Regular PCA analysis fails to distinguish between these two sources of\nvariability and may, in fact, devote most of its principal components to modeling the intrap-\nersonal variability.\nIf we are going to approximate faces by a linear subspace, it is more useful to have a\nspace that discriminates between different classes (people) and is less sensitive to within-class\nvariations (Belhumeur, Hespanha, and Kriegman 1997). Consider the three classes shown as\ndifferent colors in Figure 14.16. As you can see, the distributions within a class (indicated\nby the tilted colored axes) are elongated and tilted with respect to the main face space PCA,\n14.2 Face recognition\n675\n-2\n-1\n0\n1\n2\n-3\n-2\n-1\n0\n1\n2\n3\nFigure 14.16\nSimple example of Fisher linear discriminant analysis. The samples come\nfrom three different classes, shown in different colors along with their principal axes, which\nare scaled to 2σi. (The intersections of the tilted axes are the class means mk.) The dashed\nline is the (dominant) Fisher linear discriminant direction and the dotted lines are the linear\ndiscriminants between the classes. Note how the discriminant direction is a blend between\nthe principal directions of the between-class and within-class scatter matrices.\nwhich is aligned with the black x and y axes. We can compute the total within-class scatter\nmatrix as\nSW =\nK−1\nX\nk=0\nSk =\nK−1\nX\nk=0\nX\ni∈Ck\n(xi −mk)(xi −mk)T ,\n(14.17)\nwhere mk is the mean of class k and Sk is its within-class scatter matrix.11 Similarly, we\ncan compute the between-class scatter as\nSB =\nK−1\nX\nk=0\nNk(mk −m)(mk −m)T ,\n(14.18)\nwhere Nk are the number of exemplars in each class and m is the overall mean. For the three\ndistributions shown in Figure 14.16, we have\nSW = 3N\n\"\n0.246\n0.183\n0.183\n0.457\n#\nand\nSB = N\n\"\n6.125\n0\n0\n0.375\n#\n,\n(14.19)\n11 To be consistent with Belhumeur, Hespanha, and Kriegman (1997), we use SW and SB to denote the scatter\nmatrices, even though we use C elsewhere (14.9).",
  "image_path": "page_696.jpg",
  "pages": [
    695,
    696,
    697
  ]
}