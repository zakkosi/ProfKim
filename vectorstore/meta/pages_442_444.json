{
  "doc_id": "pages_442_444",
  "text": "420\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nFigure 8.17 Light reﬂecting off the transparent glass of a picture frame: (a) ﬁrst image from\nthe input sequence; (b) dominant motion layer min-composite; (c) secondary motion residual\nlayer max-composite; (d–e) ﬁnal estimated picture and reﬂection layers The original images\nare from Black and Anandan (1996), while the separated layers are from Szeliski, Avidan,\nand Anandan (2000) c⃝2000 IEEE.\nIf the motions of the individual layers are known, the recovery of the individual layers is\na simple constrained least squares problem, with the individual layer images are constrained\nto be positive. However, this problem can suffer from extended low-frequency ambiguities,\nespecially if either of the layers lacks dark (black) pixels or the motion is uni-directional. In\ntheir paper, Szeliski, Avidan, and Anandan (2000) show that the simultaneous estimation of\nthe motions and layer values can be obtained by alternating between robustly computing the\nmotion layers and then making conservative (upper- or lower-bound) estimates of the layer\nintensities. The ﬁnal motion and layer estimates can then be polished using gradient descent\non a joint constrained least squares formulation similar to (Baker, Szeliski, and Anandan\n1998), where the over compositing operator is replaced with addition.\nFigures 8.17 and 8.18 show the results of applying these techniques to two different pic-\nture frames with reﬂections. Notice how, in the second sequence, the amount of reﬂected light\nis quite low compared to the transmitted light (the picture of the girl) and yet the algorithm is\nstill able to recover both layers.\nUnfortunately, the simple parametric motion models used in (Szeliski, Avidan, and Anan-\ndan 2000) are only valid for planar reﬂectors and scenes with shallow depth. The extension of\nthese techniques to curved reﬂectors and scenes with signiﬁcant depth has also been studied\n8.6 Additional reading\n421\nFigure 8.18 Transparent motion separation (Szeliski, Avidan, and Anandan 2000) c⃝2000\nIEEE: (a) ﬁrst image from input sequence; (b) dominant motion layer min-composite; (c) sec-\nondary motion residual layer max-composite; (d–e) ﬁnal estimated picture and reﬂection lay-\ners. Note that the reﬂected layers in (c) and (e) are doubled in intensity to better show their\nstructure.\n(Swaminathan, Kang, Szeliski et al. 2002; Criminisi, Kang, Swaminathan et al. 2005), as has\nthe extension to scenes with more complex 3D depth (Tsin, Kang, and Szeliski 2006).\n8.6 Additional reading\nSome of the earliest algorithms for motion estimation were developed for motion-compen-\nsated video coding (Netravali and Robbins 1979) and such techniques continue to be used\nin modern coding standards such as MPEG, H.263, and H.264 (Le Gall 1991; Richardson\n2003).14 In computer vision, this ﬁeld was originally called image sequence analysis (Huang\n1981). Some of the early seminal papers include the variational approaches developed by\nHorn and Schunck (1981) and Nagel and Enkelmann (1986), and the patch-based translational\nalignment technique developed by Lucas and Kanade (1981). Hierarchical (coarse-to-ﬁne)\nversions of such algorithms were developed by Quam (1984), Anandan (1989), and Bergen,\nAnandan, Hanna et al. (1992), although they have also long been used in motion estimation\nfor video coding.\nTranslational motion models were generalized to afﬁne motion by Rehg and Witkin (1991),\nFuh and Maragos (1991), and Bergen, Anandan, Hanna et al. (1992) and to quadric refer-\nence surfaces by Shashua and Toelg (1997) and Shashua and Wexler (2001)—see Baker and\nMatthews (2004) for a nice review. Such parametric motion estimation algorithms have found\nwidespread application in video summarization (Teodosio and Bender 1993; Irani and Anan-\ndan 1998), video stabilization (Hansen, Anandan, Dana et al. 1994; Srinivasan, Chellappa,\n14 http://www.itu.int/rec/T-REC-H.264.\n422\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nVeeraraghavan et al. 2005; Matsushita, Ofek, Ge et al. 2006), and video compression (Irani,\nHsu, and Anandan 1995; Lee, ge Chen, lung Bruce Lin et al. 1997). Surveys of parametric\nimage registration include those by Brown (1992), Zitov’aa and Flusser (2003), Goshtasby\n(2005), and Szeliski (2006a).\nGood general surveys and comparisons of optic ﬂow algorithms include those by Ag-\ngarwal and Nandhakumar (1988), Barron, Fleet, and Beauchemin (1994), Otte and Nagel\n(1994), Mitiche and Bouthemy (1996), Stiller and Konrad (1999), McCane, Novins, Cran-\nnitch et al. (2001), Szeliski (2006a), and Baker, Black, Lewis et al. (2007). The topic of\nmatching primitives, i.e., pre-transforming images using ﬁltering or other techniques before\nmatching, is treated in a number of papers (Anandan 1989; Bergen, Anandan, Hanna et al.\n1992; Scharstein 1994; Zabih and Woodﬁll 1994; Cox, Roy, and Hingorani 1995; Viola and\nWells III 1997; Negahdaripour 1998; Kim, Kolmogorov, and Zabih 2003; Jia and Tang 2003;\nPapenberg, Bruhn, Brox et al. 2006; Seitz and Baker 2009). Hirschm¨uller and Scharstein\n(2009) compare a number of these approaches and report on their relative performance in\nscenes with exposure differences.\nThe publication of a new benchmark for evaluating optical ﬂow algorithms (Baker, Black,\nLewis et al. 2007) has led to rapid advances in the quality of estimation algorithms, to the\npoint where new datasets may soon become necessary. According to their updated techni-\ncal report (Baker, Scharstein, Lewis et al. 2009), most of the best performing algorithms use\nrobust data and smoothness norms (often L1 TV) and continuous variational optimization\ntechniques, although some techniques use discrete optimization or segmentations (Papen-\nberg, Bruhn, Brox et al. 2006; Trobin, Pock, Cremers et al. 2008; Xu, Chen, and Jia 2008;\nLempitsky, Roth, and Rother. 2008; Werlberger, Trobin, Pock et al. 2009; Lei and Yang 2009;\nWedel, Cremers, Pock et al. 2009).\n8.7 Exercises\nEx 8.1: Correlation\nImplement and compare the performance of the following correlation\nalgorithms:\n• sum of squared differences (8.1)\n• sum of robust differences (8.2)\n• sum of absolute differences (8.3)\n• bias–gain compensated squared differences (8.9)\n• normalized cross-correlation (8.11)",
  "image_path": "page_443.jpg",
  "pages": [
    442,
    443,
    444
  ]
}