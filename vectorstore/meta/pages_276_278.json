{
  "doc_id": "pages_276_278",
  "text": "254\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n⇒\n(a)\n(b)\nFigure 4.44 Cube map representation for line equations and vanishing points: (a) a cube map\nsurrounding the unit sphere; (b) projecting the half-cube onto three subspaces (Tuytelaars,\nVan Gool, and Proesmans 1997) c⃝1997 IEEE.\non the cube faces, which is useful if the original (full voting) variant of the Hough transform\nis being used. In their work, they represent the line equation as ax + b + y = 0, which\ndoes not treat the x and y axes symmetrically. Note that if we restrict d ≥0 by ignoring the\npolarity of the edge orientation (gradient sign), we can use a half-cube instead, which can be\nrepresented using only three cube faces, as shown in Figure 4.44b (Tuytelaars, Van Gool, and\nProesmans 1997).\nRANSAC-based line detection.\nAnother alternative to the Hough transform is the RAN-\ndom SAmple Consensus (RANSAC) algorithm described in more detail in Section 6.1.4. In\nbrief, RANSAC randomly chooses pairs of edgels to form a line hypothesis and then tests\nhow many other edgels fall onto this line. (If the edge orientations are accurate enough, a\nsingle edgel can produce this hypothesis.) Lines with sufﬁciently large numbers of inliers\n(matching edgels) are then selected as the desired line segments.\nAn advantage of RANSAC is that no accumulator array is needed and so the algorithm can\nbe more space efﬁcient and potentially less prone to the choice of bin size. The disadvantage\nis that many more hypotheses may need to be generated and tested than those obtained by\nﬁnding peaks in the accumulator array.\nIn general, there is no clear consensus on which line estimation technique performs best.\nIt is therefore a good idea to think carefully about the problem at hand and to implement\nseveral approaches (successive approximation, Hough, and RANSAC) to determine the one\nthat works best for your application.\n4.3.3 Vanishing points\nIn many scenes, structurally important lines have the same vanishing point because they are\nparallel in 3D. Examples of such lines are horizontal and vertical building edges, zebra cross-\nings, railway tracks, the edges of furniture such as tables and dressers, and of course, the\nubiquitous calibration pattern (Figure 4.45). Finding the vanishing points common to such\n4.3 Lines\n255\n(a)\n(b)\n(c)\nFigure 4.45\nReal-world vanishing points: (a) architecture (Sinha, Steedly, Szeliski et al.\n2008), (b) furniture (Miˇcuˇs`ık, Wildenauer, and Koˇseck´a 2008) c⃝2008 IEEE, and (c) cali-\nbration patterns (Zhang 2000).\nline sets can help reﬁne their position in the image and, in certain cases, help determine the\nintrinsic and extrinsic orientation of the camera (Section 6.3.2).\nOver the years, a large number of techniques have been developed for ﬁnding vanishing\npoints, including (Quan and Mohr 1989; Collins and Weiss 1990; Brillaut-O’Mahoney 1991;\nMcLean and Kotturi 1995; Becker and Bove 1995; Shufelt 1999; Tuytelaars, Van Gool, and\nProesmans 1997; Schaffalitzky and Zisserman 2000; Antone and Teller 2002; Rother 2002;\nKoˇseck´a and Zhang 2005; Pﬂugfelder 2008; Tardif 2009)—see some of the more recent pa-\npers for additional references.\nIn this section, we present a simple Hough technique based\non having line pairs vote for potential vanishing point locations, followed by a robust least\nsquares ﬁtting stage. For alternative approaches, please see some of the more recent papers\nlisted above.\nThe ﬁrst stage in my vanishing point detection algorithm uses a Hough transform to accu-\nmulate votes for likely vanishing point candidates. As with line ﬁtting, one possible approach\nis to have each line vote for all possible vanishing point directions, either using a cube map\n(Tuytelaars, Van Gool, and Proesmans 1997; Antone and Teller 2002) or a Gaussian sphere\n(Collins and Weiss 1990), optionally using knowledge about the uncertainty in the vanish-\ning point location to perform a weighted vote (Collins and Weiss 1990; Brillaut-O’Mahoney\n1991; Shufelt 1999). My preferred approach is to use pairs of detected line segments to form\ncandidate vanishing point locations. Let ˆ\nmi and ˆ\nmj be the (unit norm) line equations for a\npair of line segments and li and lj be their corresponding segment lengths. The location of\nthe corresponding vanishing point hypothesis can be computed as\nvij = ˆ\nmi × ˆ\nmj\n(4.28)\nand the corresponding weight set to\nwij = ∥vij∥lilj.\n(4.29)\n256\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\npi1\npi0\nv\nmi\n^\nd1\nA\nFigure 4.46\nTriple product of the line segments endpoints pi0 and pi1 and the vanishing\npoint v. The area A is proportional to the perpendicular distance d1 and the distance between\nthe other endpoint pi0 and the vanishing point.\nThis has the desirable effect of downweighting (near-)collinear line segments and short line\nsegments. The Hough space itself can either be represented using spherical coordinates (4.27)\nor as a cube map (Figure 4.44a).\nOnce the Hough accumulator space has been populated, peaks can be detected in a manner\nsimilar to that previously discussed for line detection. Given a set of candidate line segments\nthat voted for a vanishing point, which can optionally be kept as a list at each Hough accu-\nmulator cell, I then use a robust least squares ﬁt to estimate a more accurate location for each\nvanishing point.\nConsider the relationship between the two line segment endpoints {pi0, pi1} and the van-\nishing point v, as shown in Figure 4.46. The area A of the triangle given by these three points,\nwhich is the magnitude of their triple product\nAi = |(pi0 × pi1) · v|,\n(4.30)\nis proportional to the perpendicular distance d1 between each endpoint and the line through\nv and the other endpoint, as well as the distance between pi0 and v. Assuming that the\naccuracy of a ﬁtted line segment is proportional to its endpoint accuracy (Exercise 4.13), this\ntherefore serves as an optimal metric for how well a vanishing point ﬁts a set of extracted\nlines (Leibowitz (2001, Section 3.6.1) and Pﬂugfelder (2008, Section 2.1.1.3)). A robustiﬁed\nleast squares estimate (Appendix B.3) for the vanishing point can therefore be written as\nE =\nX\ni\nρ(Ai) = vT\n X\ni\nwi(Ai)mimT\ni\n!\nv = vT Mv,\n(4.31)\nwhere mi = pi0 × pi1 is the segment line equation weighted by its length li, and wi =\nρ′(Ai)/Ai is the inﬂuence of each robustiﬁed (reweighted) measurement on the ﬁnal error\n(Appendix B.3). Notice how this metric is closely related to the original formula for the pair-\nwise weighted Hough transform accumulation step. The ﬁnal desired value for v is computed\nas the least eigenvector of M.",
  "image_path": "page_277.jpg",
  "pages": [
    276,
    277,
    278
  ]
}