{
  "doc_id": "pages_269_271",
  "text": "4.2 Edges\n247\n0\n1\n2\n3\n4\n0\n1\n2\n3\n4\nx\ny\n0\n1\n2\n3\n4\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9 10 11\ns\n.\nx\ny\n(a)\n(b)\nFigure 4.35 Arc-length parameterization of a contour: (a) discrete points along the contour\nare ﬁrst transcribed as (b) (x, y) pairs along the arc length s. This curve can then be regularly\nre-sampled or converted into alternative (e.g., Fourier) representations.\nt\nx(s)\nκ\ns=0=1\nx0\ns=0=1\nx0\nFigure 4.36 Matching two contours using their arc-length parameterization. If both curves\nare normalized to unit length, s ∈[0, 1] and centered around their centroid x0, they will\nhave the same descriptor up to an overall “temporal” shift (due to different starting points for\ns = 0) and a phase (x-y) shift (due to rotation).\n248\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\nFigure 4.37 Curve smoothing with a Gaussian kernel (Lowe 1988) c⃝1998 IEEE: (a) with-\nout a shrinkage correction term; (b) with a shrinkage correction term.\nFigure 4.38 Changing the character of a curve without affecting its sweep (Finkelstein and\nSalesin 1994) c⃝1994 ACM: higher frequency wavelets can be replaced with exemplars from\na style library to effect different local appearances.\nnormalized descriptor, treating each x = (x, y) value as a complex number. If the original\ncurves are the same (up to an unknown scale and rotation), the resulting Fourier transforms\nshould differ only by a scale change in magnitude plus a constant complex phase shift, due\nto rotation, and a linear phase shift in the domain, due to different starting points for s (see\nExercise 4.9).\nArc-length parameterization can also be used to smooth curves in order to remove digiti-\nzation noise. However, if we just apply a regular smoothing ﬁlter, the curve tends to shrink\non itself (Figure 4.37a). Lowe (1989) and Taubin (1995) describe techniques that compensate\nfor this shrinkage by adding an offset term based on second derivative estimates or a larger\nsmoothing kernel (Figure 4.37b). An alternative approach, based on selectively modifying\ndifferent frequencies in a wavelet decomposition, is presented by Finkelstein and Salesin\n(1994). In addition to controlling shrinkage without affecting its “sweep”, wavelets allow the\n“character” of a curve to be interactively modiﬁed, as shown in Figure 4.38.\nThe evolution of curves as they are smoothed and simpliﬁed is related to “grassﬁre” (dis-\n4.2 Edges\n249\n(a)\n(b)\n(c)\n(d)\n(e)\n(f)\nFigure 4.39 Image editing in the contour domain (Elder and Goldberg 2001) c⃝2001 IEEE:\n(a) and (d) original images; (b) and (e) extracted edges (edges to be deleted are marked in\nwhite); (c) and (f) reconstructed edited images.\ntance) transforms and region skeletons (Section 3.3.3) (Tek and Kimia 2003), and can be used\nto recognize objects based on their contour shape (Sebastian and Kimia 2005). More local de-\nscriptors of curve shape such as shape contexts (Belongie, Malik, and Puzicha 2002) can also\nbe used for recognition and are potentially more robust to missing parts due to occlusions.\nThe ﬁeld of contour detection and linking continues to evolve rapidly and now includes\ntechniques for global contour grouping, boundary completion, and junction detection (Maire,\nArbelaez, Fowlkes et al. 2008), as well as grouping contours into likely regions (Arbel´aez,\nMaire, Fowlkes et al. 2010) and wide-baseline correspondence (Meltzer and Soatto 2008).\n4.2.3 Application: Edge editing and enhancement\nWhile edges can serve as components for object recognition or features for matching, they\ncan also be used directly for image editing.\nIn fact, if the edge magnitude and blur estimate are kept along with each edge, a visually\nsimilar image can be reconstructed from this information (Elder 1999). Based on this princi-\nple, Elder and Goldberg (2001) propose a system for “image editing in the contour domain”.\nTheir system allows users to selectively remove edges corresponding to unwanted features\nsuch as specularities, shadows, or distracting visual elements. After reconstructing the image\nfrom the remaining edges, the undesirable visual features have been removed (Figure 4.39).",
  "image_path": "page_270.jpg",
  "pages": [
    269,
    270,
    271
  ]
}