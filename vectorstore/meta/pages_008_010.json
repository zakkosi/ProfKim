{
  "doc_id": "pages_008_010",
  "text": "viii\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\ntechnical details are too complex to cover in the book itself.\nIn teaching our courses, we have found it useful for the students to attempt a number of\nsmall implementation projects, which often build on one another, in order to get them used to\nworking with real-world images and the challenges that these present. The students are then\nasked to choose an individual topic for each of their small-group, ﬁnal projects. (Sometimes\nthese projects even turn into conference papers!) The exercises at the end of each chapter\ncontain numerous suggestions for smaller mid-term projects, as well as more open-ended\nproblems whose solutions are still active research topics. Wherever possible, I encourage\nstudents to try their algorithms on their own personal photographs, since this better motivates\nthem, often leads to creative variants on the problems, and better acquaints them with the\nvariety and complexity of real-world imagery.\nIn formulating and solving computer vision problems, I have often found it useful to draw\ninspiration from three high-level approaches:\n• Scientiﬁc: build detailed models of the image formation process and develop mathe-\nmatical techniques to invert these in order to recover the quantities of interest (where\nnecessary, making simplifying assumption to make the mathematics more tractable).\n• Statistical: use probabilistic models to quantify the prior likelihood of your unknowns\nand the noisy measurement processes that produce the input images, then infer the best\npossible estimates of your desired quantities and analyze their resulting uncertainties.\nThe inference algorithms used are often closely related to the optimization techniques\nused to invert the (scientiﬁc) image formation processes.\n• Engineering: develop techniques that are simple to describe and implement but that\nare also known to work well in practice. Test these techniques to understand their\nlimitation and failure modes, as well as their expected computational costs (run-time\nperformance).\nThese three approaches build on each other and are used throughout the book.\nMy personal research and development philosophy (and hence the exercises in the book)\nhave a strong emphasis on testing algorithms. It’s too easy in computer vision to develop an\nalgorithm that does something plausible on a few images rather than something correct. The\nbest way to validate your algorithms is to use a three-part strategy.\nFirst, test your algorithm on clean synthetic data, for which the exact results are known.\nSecond, add noise to the data and evaluate how the performance degrades as a function of\nnoise level. Finally, test the algorithm on real-world data, preferably drawn from a wide\nvariety of sources, such as photos found on the Web. Only then can you truly know if your\nalgorithm can deal with real-world complexity, i.e., images that do not ﬁt some simpliﬁed\nmodel or assumptions.\nPreface\nix\nIn order to help students in this process, this books comes with a large amount of supple-\nmentary material, which can be found on the book’s Web site http://szeliski.org/Book. This\nmaterial, which is described in Appendix C, includes:\n• pointers to commonly used data sets for the problems, which can be found on the Web\n• pointers to software libraries, which can help students get started with basic tasks such\nas reading/writing images or creating and manipulating images\n• slide sets corresponding to the material covered in this book\n• a BibTeX bibliography of the papers cited in this book.\nThe latter two resources may be of more interest to instructors and researchers publishing\nnew papers in this ﬁeld, but they will probably come in handy even with regular students.\nSome of the software libraries contain implementations of a wide variety of computer vision\nalgorithms, which can enable you to tackle more ambitious projects (with your instructor’s\nconsent).\nAcknowledgements\nI would like to gratefully acknowledge all of the people whose passion for research and\ninquiry as well as encouragement have helped me write this book.\nSteve Zucker at McGill University ﬁrst introduced me to computer vision, taught all of\nhis students to question and debate research results and techniques, and encouraged me to\npursue a graduate career in this area.\nTakeo Kanade and Geoff Hinton, my Ph. D. thesis advisors at Carnegie Mellon University,\ntaught me the fundamentals of good research, writing, and presentation. They ﬁred up my\ninterest in visual processing, 3D modeling, and statistical methods, while Larry Matthies\nintroduced me to Kalman ﬁltering and stereo matching.\nDemetri Terzopoulos was my mentor at my ﬁrst industrial research job and taught me the\nropes of successful publishing. Yvan Leclerc and Pascal Fua, colleagues from my brief in-\nterlude at SRI International, gave me new perspectives on alternative approaches to computer\nvision.\nDuring my six years of research at Digital Equipment Corporation’s Cambridge Research\nLab, I was fortunate to work with a great set of colleagues, including Ingrid Carlbom, Gudrun\nKlinker, Keith Waters, Richard Weiss, St´ephane Lavall´ee, and Sing Bing Kang, as well as to\nsupervise the ﬁrst of a long string of outstanding summer interns, including David Tonnesen,\nSing Bing Kang, James Coughlan, and Harry Shum. This is also where I began my long-term\ncollaboration with Daniel Scharstein, now at Middlebury College.\nx\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nAt Microsoft Research, I’ve had the outstanding fortune to work with some of the world’s\nbest researchers in computer vision and computer graphics, including Michael Cohen, Hugues\nHoppe, Stephen Gortler, Steve Shafer, Matthew Turk, Harry Shum, Anandan, Phil Torr, An-\ntonio Criminisi, Georg Petschnigg, Kentaro Toyama, Ramin Zabih, Shai Avidan, Sing Bing\nKang, Matt Uyttendaele, Patrice Simard, Larry Zitnick, Richard Hartley, Simon Winder,\nDrew Steedly, Chris Pal, Nebojsa Jojic, Patrick Baudisch, Dani Lischinski, Matthew Brown,\nSimon Baker, Michael Goesele, Eric Stollnitz, David Nist´er, Blaise Aguera y Arcas, Sudipta\nSinha, Johannes Kopf, Neel Joshi, and Krishnan Ramnath. I was also lucky to have as in-\nterns such great students as Polina Golland, Simon Baker, Mei Han, Arno Sch¨odl, Ron Dror,\nAshley Eden, Jinxiang Chai, Rahul Swaminathan, Yanghai Tsin, Sam Hasinoff, Anat Levin,\nMatthew Brown, Eric Bennett, Vaibhav Vaish, Jan-Michael Frahm, James Diebel, Ce Liu,\nJosef Sivic, Grant Schindler, Colin Zheng, Neel Joshi, Sudipta Sinha, Zeev Farbman, Rahul\nGarg, Tim Cho, Yekeun Jeong, Richard Roberts, Varsha Hedau, and Dilip Krishnan.\nWhile working at Microsoft, I’ve also had the opportunity to collaborate with wonderful\ncolleagues at the University of Washington, where I hold an Afﬁliate Professor appointment.\nI’m indebted to Tony DeRose and David Salesin, who ﬁrst encouraged me to get involved\nwith the research going on at UW, my long-time collaborators Brian Curless, Steve Seitz,\nManeesh Agrawala, Sameer Agarwal, and Yasu Furukawa, as well as the students I have\nhad the privilege to supervise and interact with, including Fr´ederic Pighin, Yung-Yu Chuang,\nDoug Zongker, Colin Zheng, Aseem Agarwala, Dan Goldman, Noah Snavely, Rahul Garg,\nand Ryan Kaminsky. As I mentioned at the beginning of this preface, this book owes its\ninception to the vision course that Steve Seitz invited me to co-teach, as well as to Steve’s\nencouragement, course notes, and editorial input.\nI’m also grateful to the many other computer vision researchers who have given me so\nmany constructive suggestions about the book, including Sing Bing Kang, who was my infor-\nmal book editor, Vladimir Kolmogorov, who contributed Appendix B.5.5 on linear program-\nming techniques for MRF inference, Daniel Scharstein, Richard Hartley, Simon Baker, Noah\nSnavely, Bill Freeman, Svetlana Lazebnik, Matthew Turk, Jitendra Malik, Alyosha Efros,\nMichael Black, Brian Curless, Sameer Agarwal, Li Zhang, Deva Ramanan, Olga Veksler,\nYuri Boykov, Carsten Rother, Phil Torr, Bill Triggs, Bruce Maxwell, Jana Koˇseck´a, Eero Si-\nmoncelli, Aaron Hertzmann, Antonio Torralba, Tomaso Poggio, Theo Pavlidis, Baba Vemuri,\nNando de Freitas, Chuck Dyer, Song Yi, Falk Schubert, Roman Pﬂugfelder, Marshall Tap-\npen, James Coughlan, Sammy Rogmans, Klaus Strobel, Shanmuganathan, Andreas Siebert,\nYongjun Wu, Fred Pighin, Juan Cockburn, Ronald Mallet, Tim Soper, Georgios Evangelidis,\nDwight Fowler, Itzik Bayaz, Daniel O’Connor, and Srikrishna Bhat. Shena Deuchers did a\nfantastic job copy-editing the book and suggesting many useful improvements and Wayne\nWheeler and Simon Rees at Springer were most helpful throughout the whole book pub-\nlishing process. Keith Price’s Annotated Computer Vision Bibliography was invaluable in",
  "image_path": "page_009.jpg",
  "pages": [
    8,
    9,
    10
  ]
}