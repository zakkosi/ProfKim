{
  "doc_id": "pages_716_718",
  "text": "694\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\n(c)\nFigure 14.32 Feature-based location recognition (Schindler, Brown, and Szeliski 2007) c⃝\n2007 IEEE: (a) three typical series of overlapping street photos; (b) handheld camera shots\nand (c) their corresponding database photos.\nInternet photo collections taken under a wide variety of viewing conditions.\nThe main difﬁculty in location recognition is in dealing with the extremely large commu-\nnity (user-generated) photo collections on Web sites such as Flickr (Philbin, Chum, Isard et\nal. 2007; Chum, Philbin, Sivic et al. 2007; Philbin, Chum, Sivic et al. 2008; Turcot and Lowe\n2009) or commercially captured databases (Schindler, Brown, and Szeliski 2007). The preva-\nlence of commonly appearing elements such as foliage, signs, and common architectural ele-\nments further complicates the task. Figure 14.31 shows some results on location recognition\nfrom community photo collections, while Figure 14.32 shows sample results from denser\ncommercially acquired datasets. In the latter case, the overlap between adjacent database\nimages can be used to verify and prune potential matches using “temporal” ﬁltering, i.e., re-\nquiring the query image to match nearby overlapping database images before accepting the\nmatch.\nAnother variant on location recognition is the automatic discovery of landmarks, i.e.,\nfrequently photographed objects and locations. Simon, Snavely, and Seitz (2007) show how\nthese kinds of objects can be discovered simply by analyzing the matching graph constructed\nas part of the 3D modeling process in Photo Tourism. More recent work has extended this\napproach to larger data sets using efﬁcient clustering techniques (Philbin and Zisserman 2008;\nLi, Wu, Zach et al. 2008; Chum, Philbin, and Zisserman 2008; Chum and Matas 2010) as well\nas combining meta-data such as GPS and textual tags with visual search (Quack, Leibe, and\nVan Gool 2008; Crandall, Backstrom, Huttenlocher et al. 2009), as shown in Figure 14.33.\nIt is now even possible to automatically associate object tags with images based on their co-\noccurrence in multiple loosely tagged images (Simon and Seitz 2008; Gammeter, Bossard,\n14.4 Category recognition\n695\nFigure 14.33\nAutomatic mining, annotation, and localization of community photo collec-\ntions (Quack, Leibe, and Van Gool 2008) c⃝2008 ACM. This ﬁgure does not show the textual\nannotations or corresponding Wikipedia entries, which are also discovered.\nA\nB\nC\nD\n(a)\n(b)\nFigure 14.34 Locating star ﬁelds using astrometry, http://astrometry.net/. (a) Input star ﬁeld\nand some selected star quads. (b) The 2D coordinates of stars C and D are encoded relative\nto the unit square deﬁned by A and B.\nQuack et al. 2009).\nThe concept of organizing the world’s photo collections by location has even been re-\ncently extended to organizing all of the universe’s (astronomical) photos in an application\ncalled astrometry, http://astrometry.net/. The technique used to match any two star ﬁelds is\nto take quadruplets of nearby stars (a pair of stars and another pair inside their diameter) to\nform a 30-bit geometric hash by encoding the relative positions of the second pair of points\nusing the inscribed square as the reference frame, as shown in Figure 14.34. Traditional in-\nformation retrieval techniques (k-d trees built for different parts of a sky atlas) are then used\nto ﬁnd matching quads as potential star ﬁeld location hypotheses, which can then be veriﬁed\nusing a similarity transform.\n696\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nFigure 14.35 Sample images from the Xerox 10 class dataset (Csurka, Dance, Perronnin et\nal. 2006) c⃝2007 Springer. Imagine trying to write a program to distinguish such images\nfrom other photographs.\n14.4 Category recognition\nWhile instance recognition techniques are relatively mature and are used in commercial ap-\nplications, such as Photosynth (Section 13.1.2), generic category (class) recognition is still\na largely unsolved problem. Consider for example the set of photographs in Figure 14.35,\nwhich shows objects taken from 10 different visual categories. (I’ll leave it up to you to name\neach of the categories.) How would you go about writing a program to categorize each of\nthese images into the appropriate class, especially if you were also given the choice “none of\nthe above”?\nAs you can tell from this example, visual category recognition is an extremely challenging\nproblem; no one has yet constructed a system that approaches the performance level of a two-\nyear-old child. However, the progress in the ﬁeld has been quite dramatic, if judged by how\nmuch better today’s algorithms are compared to those of a decade ago.\nFigure 14.54 shows a sample image from each of the 20 categories used in the 2008\nPASCAL Visual Object Classes Challenge. The yellow boxes represent the extent of each of\nthe objects found in a given image. On such closed world collections where the task is to\ndecide among 20 categories, today’s classiﬁcation algorithms can do remarkably well.",
  "image_path": "page_717.jpg",
  "pages": [
    716,
    717,
    718
  ]
}