{
  "doc_id": "pages_720_722",
  "text": "698\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nPonce (2006)).\nCsurka, Dance, Fan et al. (2004) were the ﬁrst to use the term bag of keypoints to describe\nsuch approaches and among the ﬁrst to demonstrate the utility of frequency-based techniques\nfor category recognition. Their original system used afﬁne covariant regions and SIFT de-\nscriptors, k-means visual vocabulary construction, and both a na¨ıve Bayesian classiﬁer and\nsupport vector machines for classiﬁcation. (The latter was found to perform better.) Their\nnewer system (Csurka, Dance, Perronnin et al. 2006) uses regular (non-afﬁne) SIFT patches,\nboosting instead of SVMs, and incorporates a small amount of geometric consistency infor-\nmation.\nZhang, Marszalek, Lazebnik et al. (2007) perform a more detailed study of such bag of\nfeatures systems. They compare a number of feature detectors (Harris–Laplace (Mikolajczyk\nand Schmid 2004) and Laplacian (Lindeberg 1998b)), descriptors (SIFT, RIFT, and SPIN\n(Lazebnik, Schmid, and Ponce 2005)), and SVM kernel functions. To estimate distances for\nthe kernel function, they form an image signature\nS = ((t1, m1), . . . , (tm, mm)),\n(14.36)\nanalogous to the tf-idf vector t in (14.34), where the cluster centers mi are made explicit.\nThey then investigate two different kernels for comparing such image signatures. The ﬁrst is\nthe earth mover’s distance (EMD) (Rubner, Tomasi, and Guibas 2000),\nEMD(S, S′) =\nP\ni\nP\nj fijd(mi, m′\nj)\nP\ni\nP\nj fij\n,\n(14.37)\nwhere fij is a ﬂow value that can be computed using a linear program and d(mi, m′\nj) is the\nground distance (Euclidean distance) between mi and m′\nj. Note that the EMD can be used\nto compare two signatures of different lengths, where the entries do not need to correspond.\nThe second is a χ2 distance\nχ2(S, S′) = 1\n2\nX\ni\n(ti −t′\ni)2\nti + t′\ni\n,\n(14.38)\nwhich measures the likelihood that the two signatures were generated from consistent random\nprocesses. These distance metrics are then converted into SVM kernels using a generalized\nGaussian kernel\nK(S, S′) = exp\n\u0012\n−1\nAD(S, S′)\n\u0013\n,\n(14.39)\nwhere A is a scaling parameter set to the mean distance between training images. In their\nexperiments, they ﬁnd that the EMD works best for visual category recognition and the χ2\nmeasure is best for texture recognition.\n14.4 Category recognition\n699\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\nlevel 2\nlevel 1\nlevel 0\n\u0001 1/4\n\u0001 1/4\n\u0001 1/2\n+\n+\n+\n(a)\n(b)\nFigure 14.37\nComparing collections of feature vectors using pyramid matching. (a) The\nfeature-space pyramid match kernel (Grauman and Darrell 2007b) constructs a pyramid in\nhigh-dimensional feature space and uses it to compute distances (and implicit correspon-\ndences) between sets of feature vectors. (b) Spatial pyramid matching (Lazebnik, Schmid,\nand Ponce 2006) c⃝2006 IEEE divides the image into a pyramid of pooling regions and\ncomputes separate visual word histograms (distributions) inside each spatial bin.\nInstead of quantizing feature vectors to visual words, Grauman and Darrell (2007b) de-\nvelop a technique for directly computing an approximate distance between two variably sized\ncollections of feature vectors. Their approach is to bin the feature vectors into a multi-\nresolution pyramid deﬁned in feature space (Figure 14.37a) and count the number of features\nthat land in corresponding bins Bil and B′\nil (Figure 14.38a–c). The distance between the two\nsets of feature vectors (which can be thought of as points in a high-dimensional space) is\ncomputed using histogram intersection between corresponding bins\nCl =\nX\ni\nmin(Bil, B′\nil)\n(14.40)\n(Figure 14.38d). These per-level counts are then summed up in a weighted fashion\nD∆=\nX\nl\nwlNl\nwith\nNl = Cl −Cl−1\nand\nwl =\n1\nd2l\n(14.41)\n(Figure 14.38e), which discounts matches already found at ﬁner levels while weighting ﬁner\nmatches more heavily. (d is the dimension of the embedding space, i.e., the length of the\nfeature vectors.) In follow-on work, Grauman and Darrell (2007a) show how an explicit\nconstruction of the pyramid can be avoided using hashing techniques.\nInspired by this work, Lazebnik, Schmid, and Ponce (2006) show how a similar idea\ncan be employed to augment bags of keypoints with loose notions of 2D spatial location\n700\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\n(c)\n(d)\n(e)\nFigure 14.38\nA one-dimensional illustration of comparing collections of feature vectors\nusing the pyramid match kernel (Grauman and Darrell 2007b): (a) distribution of feature\nvectors (point sets) into the pyramidal bins; (b–c) histogram of point counts in bins Bil and\nB′\nil for the two images; (d) histogram intersections (minimum values); (e) per-level similarity\nscores, which are weighted and summed to form the ﬁnal distance/similarity metric.\nanalogous to the pooling performed by SIFT (Lowe 2004) and “gist” (Torralba, Murphy,\nFreeman et al. 2003). In their work, they extract afﬁne region descriptors (Lazebnik, Schmid,\nand Ponce 2005) and quantize them into visual words. (Based on previous results by Fei-Fei\nand Perona (2005), the feature descriptors are extracted densely (on a regular grid) over the\nimage, which can be helpful in describing textureless regions such as the sky.) They then form\na spatial pyramid of bins containing word counts (histograms), as shown in Figure 14.37b, and\nuse a similar pyramid match kernel to combine histogram intersection counts in a hierarchical\nfashion.\nThe debate about whether to use quantized feature descriptors or continuous descriptors\nand also whether to use sparse or dense features continues to this day. Boiman, Shechtman,\nand Irani (2008) show that if query images are compared to all the features representing a\ngiven class, rather than just each class image individually, nearest-neighbor matching fol-\nlowed by a na¨ıve Bayes classiﬁer outperforms quantized visual words (Figure 14.39). In-\nstead of using generic feature detectors and descriptors, some authors have been investigat-\ning learning class-speciﬁc features (Ferencz, Learned-Miller, and Malik 2008), often using\nrandomized forests (Philbin, Chum, Isard et al. 2007; Moosmann, Nowak, and Jurie 2008;\nShotton, Johnson, and Cipolla 2008) or combining the feature generation and image classi-",
  "image_path": "page_721.jpg",
  "pages": [
    720,
    721,
    722
  ]
}