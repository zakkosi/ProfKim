{
  "doc_id": "pages_437_439",
  "text": "8.5 Layered motion\n415\ncurrent motion estimate is accurate enough to permit averaging with other frames. Gai and\nKang (2009) describe their recently developed restoration process, which involves a series of\nadditional steps to deal with the special characteristics of vintage ﬁlm.\n8.4.3 Application: De-interlacing\nAnother commonly used application of per-pixel motion estimation is video de-interlacing,\nwhich is the process of converting a video taken with alternating ﬁelds of even and odd\nlines to a non-interlaced signal that contains both ﬁelds in each frame (de Haan and Bellers\n1998). Two simple de-interlacing techniques are bob, which copies the line above or below\nthe missing line from the same ﬁeld, and weave, which copies the corresponding line from\nthe ﬁeld before or after. The names come from the visual artifacts generated by these two\nsimple techniques: bob introduces an up-and-down bobbing motion along strong horizontal\nlines; weave can lead to a “zippering” effect along horizontally translating edges. Replacing\nthese copy operators with averages can help but does not completely remove these artifacts.\nA wide variety of improved techniques have been developed for this process, which is\noften embedded in specialized DSP chips found inside video digitization boards in computers\n(since broadcast video is often interlaced, while computer monitors are not). A large class\nof these techniques estimates local per-pixel motions and interpolates the missing data from\nthe information available in spatially and temporally adjacent ﬁelds. Dai, Baker, and Kang\n(2009) review this literature and propose their own algorithm, which selects among seven\ndifferent interpolation functions at each pixel using an MRF framework.\n8.5 Layered motion\nIn many situation, visual motion is caused by the movement of a small number of objects\nat different depths in the scene. In such situations, the pixel motions can be described more\nsuccinctly (and estimated more reliably) if pixels are grouped into appropriate objects or\nlayers (Wang and Adelson 1994).\nFigure 8.14 shows this approach schematically. The motion in this sequence is caused by\nthe translational motion of the checkered background and the rotation of the foreground hand.\nThe complete motion sequence can be reconstructed from the appearance of the foreground\nand background elements, which can be represented as alpha-matted images (sprites or video\nobjects) and the parametric motion corresponding to each layer. Displacing and compositing\nthese layers in back to front order (Section 3.1.3) recreates the original video sequence.\nLayered motion representations not only lead to compact representations (Wang and\nAdelson 1994; Lee, ge Chen, lung Bruce Lin et al. 1997), but they also exploit the infor-\nmation available in multiple video frames, as well as accurately modeling the appearance of\n416\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nIntensity map\nAlpha map\nVelocity map\nIntensity map\nAlpha map\nVelocity map\nFrame 1\nFrame 2\nFrame 3\nFigure 8.14\nLayered motion estimation framework (Wang and Adelson 1994) c⃝1994\nIEEE: The top two rows describe the two layers, each of which consists of an intensity (color)\nimage, an alpha mask (black=transparent), and a parametric motion ﬁeld. The layers are com-\nposited with different amounts of motion to recreate the video sequence.\npixels near motion discontinuities. This makes them particularly suited as a representation\nfor image-based rendering (Section 13.2.1) (Shade, Gortler, He et al. 1998; Zitnick, Kang,\nUyttendaele et al. 2004) as well as object-level video editing.\nTo compute a layered representation of a video sequence, Wang and Adelson (1994) ﬁrst\nestimate afﬁne motion models over a collection of non-overlapping patches and then cluster\nthese estimates using k-means. They then alternate between assigning pixels to layers and\nrecomputing motion estimates for each layer using the assigned pixels, using a technique\nﬁrst proposed by Darrell and Pentland (1991). Once the parametric motions and pixel-wise\nlayer assignments have been computed for each frame independently, layers are constructed\nby warping and merging the various layer pieces from all of the frames together. Median\nﬁltering is used to produce sharp composite layers that are robust to small intensity variations,\nas well as to infer occlusion relationships between the layers. Figure 8.15 shows the results\nof this process on the ﬂower garden sequence. You can see both the initial and ﬁnal layer\nassignments for one of the frames, as well as the composite ﬂow and the alpha-matted layers\nwith their corresponding ﬂow vectors overlaid.\nIn follow-on work, Weiss and Adelson (1996) use a formal probabilistic mixture model\nto infer both the optimal number of layers and the per-pixel layer assignments. Weiss (1997)\n8.5 Layered motion\n417\ncolor image (input frame)\nﬂow\ninitial layers\nﬁnal layers\nlayers with pixel assignments and ﬂow\nFigure 8.15 Layered motion estimation results (Wang and Adelson 1994) c⃝1994 IEEE.\nfurther generalizes this approach by replacing the per-layer afﬁne motion models with smooth\nregularized per-pixel motion estimates, which allows the system to better handle curved and\nundulating layers, such as those seen in most real-world sequences.\nThe above approaches, however, still make a distinction between estimating the motions\nand layer assignments and then later estimating the layer colors. In the system described by\nBaker, Szeliski, and Anandan (1998), the generative model illustrated in Figure 8.14 is gen-\neralized to account for real-world rigid motion scenes. The motion of each frame is described\nusing a 3D camera model and the motion of each layer is described using a 3D plane equation\nplus per-pixel residual depth offsets (the plane plus parallax representation (Section 2.1.5)).\nThe initial layer estimation proceeds in a manner similar to that of Wang and Adelson (1994),\nexcept that rigid planar motions (homographies) are used instead of afﬁne motion models.\nThe ﬁnal model reﬁnement, however, jointly re-optimizes the layer pixel color and opacity\nvalues Ll and the 3D depth, plane, and motion parameters zl, nl, and P t by minimizing the\ndiscrepancy between the re-synthesized and observed motion sequences (Baker, Szeliski, and\nAnandan 1998).\nFigure 8.16 shows the ﬁnal results obtained with this algorithm. As you can see, the\nmotion boundaries and layer assignments are much crisper than those in Figure 8.15. Because\nof the per-pixel depth offsets, the individual layer color values are also sharper than those\nobtained with afﬁne or planar motion models. While the original system of Baker, Szeliski,\nand Anandan (1998) required a rough initial assignment of pixels to layers, Torr, Szeliski,\nand Anandan (2001) describe automated Bayesian techniques for initializing this system and\ndetermining the optimal number of layers.\nLayered motion estimation continues to be an active area of research. Representative pa-\npers in this area include (Sawhney and Ayer 1996; Jojic and Frey 2001; Xiao and Shah 2005;\nKumar, Torr, and Zisserman 2008; Thayananthan, Iwasaki, and Cipolla 2008; Schoenemann\nand Cremers 2008).",
  "image_path": "page_438.jpg",
  "pages": [
    437,
    438,
    439
  ]
}