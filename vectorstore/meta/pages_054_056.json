{
  "doc_id": "pages_054_056",
  "text": "32\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nMore detailed descriptions of these topics (along with a gentler and more intuitive introduc-\ntion) can be found in textbooks on multiple-view geometry (Hartley and Zisserman 2004;\nFaugeras and Luong 2001).\n2.1.1 Geometric primitives\nGeometric primitives form the basic building blocks used to describe three-dimensional shapes.\nIn this section, we introduce points, lines, and planes. Later sections of the book discuss\ncurves (Sections 5.1 and 11.2), surfaces (Section 12.3), and volumes (Section 12.5).\n2D points.\n2D points (pixel coordinates in an image) can be denoted using a pair of values,\nx = (x, y) ∈R2, or alternatively,\nx =\n\"\nx\ny\n#\n.\n(2.1)\n(As stated in the introduction, we use the (x1, x2, . . .) notation to denote column vectors.)\n2D points can also be represented using homogeneous coordinates, ˜x = (˜x, ˜y, ˜w) ∈P2,\nwhere vectors that differ only by scale are considered to be equivalent. P2 = R3 −(0, 0, 0)\nis called the 2D projective space.\nA homogeneous vector ˜x can be converted back into an inhomogeneous vector x by\ndividing through by the last element ˜w, i.e.,\n˜x = (˜x, ˜y, ˜w) = ˜w(x, y, 1) = ˜w¯x,\n(2.2)\nwhere ¯x = (x, y, 1) is the augmented vector. Homogeneous points whose last element is ˜w =\n0 are called ideal points or points at inﬁnity and do not have an equivalent inhomogeneous\nrepresentation.\n2D lines.\n2D lines can also be represented using homogeneous coordinates ˜l = (a, b, c).\nThe corresponding line equation is\n¯x · ˜l = ax + by + c = 0.\n(2.3)\nWe can normalize the line equation vector so that l = (ˆnx, ˆny, d) = (ˆn, d) with ∥ˆn∥= 1. In\nthis case, ˆn is the normal vector perpendicular to the line and d is its distance to the origin\n(Figure 2.2). (The one exception to this normalization is the line at inﬁnity ˜l = (0, 0, 1),\nwhich includes all (ideal) points at inﬁnity.)\nWe can also express ˆn as a function of rotation angle θ, ˆn = (ˆnx, ˆny) = (cos θ, sin θ)\n(Figure 2.2a). This representation is commonly used in the Hough transform line-ﬁnding\n2.1 Geometric primitives and transformations\n33\ny\nx\nd\nθ\nn\nl\n^\nz\nx\nd\nn\nm\ny\n^\n(a)\n(b)\nFigure 2.2 (a) 2D line equation and (b) 3D plane equation, expressed in terms of the normal\nˆn and distance to the origin d.\nalgorithm, which is discussed in Section 4.3.2. The combination (θ, d) is also known as\npolar coordinates.\nWhen using homogeneous coordinates, we can compute the intersection of two lines as\n˜x = ˜l1 × ˜l2,\n(2.4)\nwhere × is the cross product operator. Similarly, the line joining two points can be written as\n˜l = ˜x1 × ˜x2.\n(2.5)\nWhen trying to ﬁt an intersection point to multiple lines or, conversely, a line to multiple\npoints, least squares techniques (Section 6.1.1 and Appendix A.2) can be used, as discussed\nin Exercise 2.1.\n2D conics.\nThere are other algebraic curves that can be expressed with simple polynomial\nhomogeneous equations. For example, the conic sections (so called because they arise as the\nintersection of a plane and a 3D cone) can be written using a quadric equation\n˜xT Q˜x = 0.\n(2.6)\nQuadric equations play useful roles in the study of multi-view geometry and camera calibra-\ntion (Hartley and Zisserman 2004; Faugeras and Luong 2001) but are not used extensively in\nthis book.\n3D points.\nPoint coordinates in three dimensions can be written using inhomogeneous co-\nordinates x = (x, y, z) ∈R3 or homogeneous coordinates ˜x = (˜x, ˜y, ˜z, ˜w) ∈P3. As before,\nit is sometimes useful to denote a 3D point using the augmented vector ¯x = (x, y, z, 1) with\n˜x = ˜w¯x.\n34\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nz\nx\nλ\np\nq\ny\nr=(1-λ)p+λq\nFigure 2.3 3D line equation, r = (1 −λ)p + λq.\n3D planes.\n3D planes can also be represented as homogeneous coordinates ˜\nm = (a, b, c, d)\nwith a corresponding plane equation\n¯x · ˜\nm = ax + by + cz + d = 0.\n(2.7)\nWe can also normalize the plane equation as m = (ˆnx, ˆny, ˆnz, d) = (ˆn, d) with ∥ˆn∥= 1.\nIn this case, ˆn is the normal vector perpendicular to the plane and d is its distance to the\norigin (Figure 2.2b). As with the case of 2D lines, the plane at inﬁnity ˜\nm = (0, 0, 0, 1),\nwhich contains all the points at inﬁnity, cannot be normalized (i.e., it does not have a unique\nnormal or a ﬁnite distance).\nWe can express ˆn as a function of two angles (θ, φ),\nˆn = (cos θ cos φ, sin θ cos φ, sin φ),\n(2.8)\ni.e., using spherical coordinates, but these are less commonly used than polar coordinates\nsince they do not uniformly sample the space of possible normal vectors.\n3D lines.\nLines in 3D are less elegant than either lines in 2D or planes in 3D. One possible\nrepresentation is to use two points on the line, (p, q). Any other point on the line can be\nexpressed as a linear combination of these two points\nr = (1 −λ)p + λq,\n(2.9)\nas shown in Figure 2.3. If we restrict 0 ≤λ ≤1, we get the line segment joining p and q.\nIf we use homogeneous coordinates, we can write the line as\n˜r = µ˜p + λ˜q.\n(2.10)\nA special case of this is when the second point is at inﬁnity, i.e., ˜q = ( ˆdx, ˆdy, ˆdz, 0) = ( ˆd, 0).\nHere, we see that ˆd is the direction of the line. We can then re-write the inhomogeneous 3D\nline equation as\nr = p + λ ˆd.\n(2.11)",
  "image_path": "page_055.jpg",
  "pages": [
    54,
    55,
    56
  ]
}