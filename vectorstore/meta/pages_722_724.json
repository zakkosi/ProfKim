{
  "doc_id": "pages_722_724",
  "text": "700\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\n(c)\n(d)\n(e)\nFigure 14.38\nA one-dimensional illustration of comparing collections of feature vectors\nusing the pyramid match kernel (Grauman and Darrell 2007b): (a) distribution of feature\nvectors (point sets) into the pyramidal bins; (b–c) histogram of point counts in bins Bil and\nB′\nil for the two images; (d) histogram intersections (minimum values); (e) per-level similarity\nscores, which are weighted and summed to form the ﬁnal distance/similarity metric.\nanalogous to the pooling performed by SIFT (Lowe 2004) and “gist” (Torralba, Murphy,\nFreeman et al. 2003). In their work, they extract afﬁne region descriptors (Lazebnik, Schmid,\nand Ponce 2005) and quantize them into visual words. (Based on previous results by Fei-Fei\nand Perona (2005), the feature descriptors are extracted densely (on a regular grid) over the\nimage, which can be helpful in describing textureless regions such as the sky.) They then form\na spatial pyramid of bins containing word counts (histograms), as shown in Figure 14.37b, and\nuse a similar pyramid match kernel to combine histogram intersection counts in a hierarchical\nfashion.\nThe debate about whether to use quantized feature descriptors or continuous descriptors\nand also whether to use sparse or dense features continues to this day. Boiman, Shechtman,\nand Irani (2008) show that if query images are compared to all the features representing a\ngiven class, rather than just each class image individually, nearest-neighbor matching fol-\nlowed by a na¨ıve Bayes classiﬁer outperforms quantized visual words (Figure 14.39). In-\nstead of using generic feature detectors and descriptors, some authors have been investigat-\ning learning class-speciﬁc features (Ferencz, Learned-Miller, and Malik 2008), often using\nrandomized forests (Philbin, Chum, Isard et al. 2007; Moosmann, Nowak, and Jurie 2008;\nShotton, Johnson, and Cipolla 2008) or combining the feature generation and image classi-\n14.4 Category recognition\n701\nFigure 14.39\n“Image-to-Image” vs. “Image-to-Class” distance comparison (Boiman,\nShechtman, and Irani 2008) c⃝2008 IEEE. The query image on the upper left may not match\nthe feature distribution of any of the database images in the bottom row. However, if each\nfeature in the query is matched to its closest analog in all the class images, a good match can\nbe found.\nﬁcation stages (Yang, Jin, Sukthankar et al. 2008). Others, such as Serre, Wolf, and Poggio\n(2005) and Mutch and Lowe (2008) use hierarchies of dense feature transforms inspired by\nbiological (visual cortical) processing combined with SVMs for ﬁnal classiﬁcation.\n14.4.2 Part-based models\nRecognizing an object by ﬁnding its constituent parts and measuring their geometric rela-\ntionships is one of the oldest approaches to object recognition (Fischler and Elschlager 1973;\nKanade 1977; Yuille 1991). We have already seen examples of part-based approaches being\nused for face recognition (Figure 14.18) (Moghaddam and Pentland 1997; Heisele, Ho, Wu\net al. 2003; Heisele, Serre, and Poggio 2007) and pedestrian detection (Figure 14.9) (Felzen-\nszwalb, McAllester, and Ramanan 2008).\nIn this section, we look more closely at some of the central issues in part-based recog-\nnition, namely, the representation of geometric relationships, the representation of individ-\nual parts, and algorithms for learning such descriptions and recognizing them at run time.\nMore details on part-based models for recognition can be found in the course notes of Fergus\n(2007b, 2009).\nThe earliest approaches to representing geometric relationships were dubbed pictorial\nstructures by Fischler and Elschlager (1973) and consisted of spring-like connections between\ndifferent feature locations (Figure 14.1a). To ﬁt a pictorial structure to an image, an energy\n702\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nFigure 14.40 Using pictorial structures to locate and track a person (Felzenszwalb and Hut-\ntenlocher 2005) c⃝2005 Springer. The structure consists of articulated rectangular body parts\n(torso, head, and limbs) connected in a tree topology that encodes relative part positions and\norientations. To ﬁt a pictorial structure model, a binary silhouette image is ﬁrst computed\nusing background subtraction.\nfunction of the form\nE =\nX\ni\nVi(li) +\nX\nij∈E\nVij(li, lj)\n(14.42)\nis minimized over all potential part locations or poses {li} and pairs of parts (i, j) for which\nan edge (geometric relationship) exists in E. Note how this energy is closely related to\nthat used with Markov random ﬁelds (3.108–3.109), which can be used to embed pictorial\nstructures in a probabilistic framework that makes parameter learning easier (Felzenszwalb\nand Huttenlocher 2005).\nPart-based models can have different topologies for the geometric connections between\nthe parts (Figure 14.41). For example, Felzenszwalb and Huttenlocher (2005) restrict the\nconnections to a tree (Figure 14.41d), which makes learning and inference more tractable. A\ntree topology enables the use of a recursive Viterbi (dynamic programming) algorithm (Pearl\n1988; Bishop 2006), in which leaf nodes are ﬁrst optimized as a function of their parents, and\nthe resulting values are then plugged in and eliminated from the energy function—see Ap-\npendix B.5.2. The Viterbi algorithm computes an optimal match in O(N 2|E| + NP) time,\nwhere N is the number of potential locations or poses for each part, |E| is the number of\nedges (pairwise constraints), and P = |V | is the number of parts (vertices in the graphical\nmodel, which is equal to |E| + 1 in a tree). To further increase the efﬁciency of the infer-\nence algorithm, Felzenszwalb and Huttenlocher (2005) restrict the pairwise energy functions\nVij(li, lj) to be Mahalanobis distances on functions of location variables and then use fast\ndistance transform algorithms to minimize each pairwise interaction in time that is closer to\nlinear in N.\nFigure 14.40 shows the results of using their pictorial structures algorithm to ﬁt an articu-",
  "image_path": "page_723.jpg",
  "pages": [
    722,
    723,
    724
  ]
}