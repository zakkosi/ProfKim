{
  "doc_id": "pages_402_404",
  "text": "380\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n8. (Optional) Implement your own iterative sparse solver, e.g., conjugate gradient, and\ncompare its performance to a direct method.\n9. (Optional) Make your bundle adjuster robust to outliers, or try adding some of the other\nimprovements discussed in (Engels, Stew´enius, and Nist´er 2006). Can you think of any\nother ways to make your algorithm even faster or more robust?\nEx 7.6: Match move and augmented reality\nUse the results of the previous exercise to\nsuperimpose a rendered 3D model on top of video. See Section 7.4.2 for more details and\nideas. Check for how “locked down” the objects are.\nEx 7.7: Line-based reconstruction\nAugment the previously developed bundle adjuster to\ninclude lines, possibly with known 3D orientations.\nOptionally, use co-planar sets of points and lines to hypothesize planes and to enforce\nco-planarity (Schaffalitzky and Zisserman 2002; Robertson and Cipolla 2002)\nEx 7.8: Flexible bundle adjuster\nDesign a bundle adjuster that allows for arbitrary chains\nof transformations and prior knowledge about the unknowns, as suggested in Figures 7.7–7.8.\nEx 7.9: Unordered image matching\nCompute the camera pose and 3D structure of a scene\nfrom an arbitrary collection of photographs (Brown and Lowe 2003; Snavely, Seitz, and\nSzeliski 2006).\nChapter 8\nDense motion estimation\n8.1\nTranslational alignment . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 384\n8.1.1\nHierarchical motion estimation . . . . . . . . . . . . . . . . . . . . . 387\n8.1.2\nFourier-based alignment . . . . . . . . . . . . . . . . . . . . . . . . 388\n8.1.3\nIncremental reﬁnement . . . . . . . . . . . . . . . . . . . . . . . . . 392\n8.2\nParametric motion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 398\n8.2.1\nApplication: Video stabilization . . . . . . . . . . . . . . . . . . . . 401\n8.2.2\nLearned motion models . . . . . . . . . . . . . . . . . . . . . . . . . 403\n8.3\nSpline-based motion\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 404\n8.3.1\nApplication: Medical image registration . . . . . . . . . . . . . . . . 408\n8.4\nOptical ﬂow . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 409\n8.4.1\nMulti-frame motion estimation . . . . . . . . . . . . . . . . . . . . . 413\n8.4.2\nApplication: Video denoising\n. . . . . . . . . . . . . . . . . . . . . 414\n8.4.3\nApplication: De-interlacing\n. . . . . . . . . . . . . . . . . . . . . . 415\n8.5\nLayered motion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 415\n8.5.1\nApplication: Frame interpolation . . . . . . . . . . . . . . . . . . . . 418\n8.5.2\nTransparent layers and reﬂections . . . . . . . . . . . . . . . . . . . 419\n8.6\nAdditional reading\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 421\n8.7\nExercises\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 422\n382\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\nﬂow\ninitial layers ﬁnal layers\nlayers with pixel assignments and ﬂow\n(c)\n(d)\n(e)\n(f)\nFigure 8.1\nMotion estimation: (a–b) regularization-based optical ﬂow (Nagel and Enkel-\nmann 1986) c⃝1986 IEEE; (c–d) layered motion estimation (Wang and Adelson 1994) c⃝\n1994 IEEE; (e–f) sample image and ground truth ﬂow from evaluation database (Baker,\nBlack, Lewis et al. 2007) c⃝2007 IEEE.",
  "image_path": "page_403.jpg",
  "pages": [
    402,
    403,
    404
  ]
}