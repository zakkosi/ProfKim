{
  "doc_id": "pages_638_640",
  "text": "616\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n2008) is a good source of references and Robertson and Cipolla (2009) give a nice description\nof a complete system. Lots of additional references can be found in Section 12.6.1.\nFace and whole body modeling and tracking is a very active sub-ﬁeld of computer vision,\nwith its own conferences and workshops, e.g., the International Conference on Automatic\nFace and Gesture Recognition (FG), the IEEE Workshop on Analysis and Modeling of Faces\nand Gestures, and the International Workshop on Tracking Humans for the Evaluation of their\nMotion in Image Sequences (THEMIS). Recent survey articles on the topic of whole body\nmodeling and tracking include those by Forsyth, Arikan, Ikemoto et al. (2006), Moeslund,\nHilton, and Kr¨uger (2006), and Sigal, Balan, and Black (2010).\n12.9 Exercises\nEx 12.1: Shape from focus\nGrab a series of focused images with a digital SLR set to man-\nual focus (or get one that allows for programmatic focus control) and recover the depth of an\nobject.\n1. Take some calibration images, e.g., of a checkerboard, so you can compute a mapping\nbetween the amount of defocus and the focus setting.\n2. Try both a fronto-parallel planar target and one which is slanted so that it covers the\nworking range of the sensor. Which one works better?\n3. Now put a real object in the scene and perform a similar focus sweep.\n4. For each pixel, compute the local sharpness and ﬁt a parabolic curve over focus settings\nto ﬁnd the most in-focus setting.\n5. Map these focus settings to depth and compare your result to ground truth. If you are\nusing a known simple object, such as sphere or cylinder (a ball or a soda can), it’s easy\nto measure its true shape.\n6. (Optional) See if you can recover the depth map from just two or three focus settings.\n7. (Optional) Use an LCD projector to project artiﬁcial texture onto the scene. Use a pair\nof cameras to compare the accuracy of your shape from focus and shape from stereo\ntechniques.\n8. (Optional) Create an all-in-focus image using the technique of Agarwala, Dontcheva,\nAgrawala et al. (2004).\nEx 12.2: Shadow striping\nImplement the handheld shadow striping system of Bouguet\nand Perona (1999). The basic steps include the following.\n12.9 Exercises\n617\n1. Set up two background planes behind the object of interest and calculate their orienta-\ntion relative to the viewer, e.g., with ﬁducial marks.\n2. Cast a moving shadow with a stick across the scene; record the video or capture the\ndata with a webcam.\n3. Estimate each light plane equation from the projections of the cast shadow against the\ntwo backgrounds.\n4. Triangulate to the remaining points on each curve to get a 3D stripe and display the\nstripes using a 3D graphics engine.\n5. (Optional) remove the requirement for a known second (vertical) plane and infer its\nlocation (or that of the light source) using the techniques described by Bouguet and\nPerona (1999). The techniques from Exercise 10.9 may also be helpful here.\nEx 12.3: Range data registration\nRegister two or more 3D datasets using either iterated\nclosest points (ICP) (Besl and McKay 1992; Zhang 1994; Gold, Rangarajan, Lu et al. 1998)\nor octree signed distance ﬁelds (Szeliski and Lavall´ee 1996) (Section 12.2.1).\nApply your technique to narrow-baseline stereo pairs, e.g., obtained by moving a cam-\nera around an object, using structure from motion to recover the camera poses, and using a\nstandard stereo matching algorithm.\nEx 12.4: Range data merging\nMerge the datasets that you registered in the previous exer-\ncise using signed distance ﬁelds (Curless and Levoy 1996; Hilton, Stoddart, Illingworth et al.\n1996). You can optionally use an octree to represent and compress this ﬁeld if you already\nimplemented it in the previous registration step.\nExtract a meshed surface model from the signed distance ﬁeld using marching cubes and\ndisplay the resulting model.\nEx 12.5: Surface simpliﬁcation\nUse progressive meshes (Hoppe 1996) or some other tech-\nnique from Section 12.3.2 to create a hierarchical simpliﬁcation of your surface model.\nEx 12.6: Architectural modeler\nBuild a 3D interior or exterior model of some architec-\ntural structure, such as your house, from a series of handheld wide-angle photographs.\n1. Extract lines and vanishing points (Exercises 4.11–4.15) to estimate the dominant di-\nrections in each image.\n2. Use structure from motion to recover all of the camera poses and match up the vanish-\ning points.\n618\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n3. Let the user sketch the locations of the walls by drawing lines corresponding to wall\nbottoms, tops, and horizontal extents onto the images (Sinha, Steedly, Szeliski et al.\n2008)—see also Exercise 6.9. Do something similar for openings (doors and windows)\nand simple furniture (tables and countertops).\n4. Convert the resulting polygonal meshes into a 3D model (e.g., VRML) and optionally\ntexture-map these surfaces from the images.\nEx 12.7: Body tracker\nDownload the video sequences from the HumanEva Web site.16\nEither implement a human motion tracker from scratch or extend the code on that Web site\n(Sigal, Balan, and Black 2010) in some interesting way.\nEx 12.8: 3D photography\nCombine all of your previously developed techniques to pro-\nduce a system that takes a series of photographs or a video and constructs a photorealistic\ntexture-mapped 3D model.\n16 http://vision.cs.brown.edu/humaneva/.",
  "image_path": "page_639.jpg",
  "pages": [
    638,
    639,
    640
  ]
}