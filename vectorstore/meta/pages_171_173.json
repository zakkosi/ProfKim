{
  "doc_id": "pages_171_173",
  "text": "3.5 Pyramids and wavelets\n149\n(a)\n(b)\nFigure 3.30 Signal decimation: (a) the original samples are (b) convolved with a low-pass\nﬁlter before being downsampled.\nIf, however, the downsampled images will be displayed directly to the user or, perhaps,\nblended with other resolutions (as in MIP-mapping, Section 3.5.3), a higher-quality ﬁlter is\ndesired. For high downsampling rates, the windowed sinc pre-ﬁlter is a good choice (Fig-\nure 3.29). However, for small downsampling rates, e.g., r = 2, more careful ﬁlter design is\nrequired.\nTable 3.4 shows a number of commonly used r = 2 downsampling ﬁlters, while Fig-\nure 3.31 shows their corresponding frequency responses. These ﬁlters include:\n• the linear [1, 2, 1] ﬁlter gives a relatively poor response;\n• the binomial [1, 4, 6, 4, 1] ﬁlter cuts off a lot of frequencies but is useful for computer\nvision analysis pyramids;\n• the cubic ﬁlters from (3.79); the a = −1 ﬁlter has a sharper fall-off than the a = −0.5\nﬁlter (Figure 3.31);\n|n|\nLinear\nBinomial\nCubic\na = −1\nCubic\na = −0.5\nWindowed\nsinc\nQMF-9\nJPEG\n2000\n0\n0.50\n0.3750\n0.5000\n0.50000\n0.4939\n0.5638\n0.6029\n1\n0.25\n0.2500\n0.3125\n0.28125\n0.2684\n0.2932\n0.2669\n2\n0.0625\n0.0000\n0.00000\n0.0000\n-0.0519\n-0.0782\n3\n-0.0625\n-0.03125\n-0.0153\n-0.0431\n-0.0169\n4\n0.0000\n0.0198\n0.0267\nTable 3.4\nFilter coefﬁcients for 2× decimation. These ﬁlters are of odd length, are sym-\nmetric, and are normalized to have unit DC gain (sum up to 1). See Figure 3.31 for their\nassociated frequency responses.\n150\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n-0.2\n0\n0.2\n0.4\n0.6\n0.8\n1\n0\n0.1\n0.2\n0.3\n0.4\n0.5\nLinear\nBinomial\nCubic a=-1\nCubic a=-0.5\nWind. sinc\nQMF-9\nJPEG 2000\nFigure 3.31\nFrequency response for some 2× decimation ﬁlters. The cubic a = −1 ﬁlter\nhas the sharpest fall-off but also a bit of ringing; the wavelet analysis ﬁlters (QMF-9 and\nJPEG 2000), while useful for compression, have more aliasing.\n• a cosine-windowed sinc function (Table 3.2);\n• the QMF-9 ﬁlter of Simoncelli and Adelson (1990b) is used for wavelet denoising and\naliases a fair amount (note that the original ﬁlter coefﬁcients are normalized to\n√\n2 gain\nso they can be “self-inverting”);\n• the 9/7 analysis ﬁlter from JPEG 2000 (Taubman and Marcellin 2002).\nPlease see the original papers for the full-precision values of some of these coefﬁcients.\n3.5.3 Multi-resolution representations\nNow that we have described interpolation and decimation algorithms, we can build a complete\nimage pyramid (Figure 3.32). As we mentioned before, pyramids can be used to accelerate\ncoarse-to-ﬁne search algorithms, to look for objects or patterns at different scales, and to per-\nform multi-resolution blending operations. They are also widely used in computer graphics\nhardware and software to perform fractional-level decimation using the MIP-map, which we\ncover in Section 3.6.\nThe best known (and probably most widely used) pyramid in computer vision is Burt\nand Adelson’s (1983a) Laplacian pyramid. To construct the pyramid, we ﬁrst blur and sub-\nsample the original image by a factor of two and store this in the next level of the pyramid\n(Figure 3.33). Because adjacent levels in the pyramid are related by a sampling rate r = 2,\nthis kind of pyramid is known as an octave pyramid. Burt and Adelson originally proposed a\n3.5 Pyramids and wavelets\n151\nfine\nmedium\ncoarse\nl = 0\nl = 1\nl = 2\nFigure 3.32\nA traditional image pyramid: each level has half the resolution (width and\nheight), and hence a quarter of the pixels, of its parent level.\nﬁve-tap kernel of the form\nc\nb\na\nb\nc ,\n(3.82)\nwith b = 1/4 and c = 1/4−a/2. In practice, a = 3/8, which results in the familiar binomial\nkernel,\n1\n16 1\n4\n6\n4\n1 ,\n(3.83)\nwhich is particularly easy to implement using shifts and adds. (This was important in the days\nwhen multipliers were expensive.) The reason they call their resulting pyramid a Gaussian\npyramid is that repeated convolutions of the binomial kernel converge to a Gaussian.16\nTo compute the Laplacian pyramid, Burt and Adelson ﬁrst interpolate a lower resolu-\ntion image to obtain a reconstructed low-pass version of the original image (Figure 3.34b).\nThey then subtract this low-pass version from the original to yield the band-pass “Laplacian”\nimage, which can be stored away for further processing. The resulting pyramid has perfect\nreconstruction, i.e., the Laplacian images plus the base-level Gaussian (L2 in Figure 3.34b)\nare sufﬁcient to exactly reconstruct the original image. Figure 3.33 shows the same com-\nputation in one dimension as a signal processing diagram, which completely captures the\ncomputations being performed during the analysis and re-synthesis stages.\nBurt and Adelson also describe a variant on the Laplacian pyramid, where the low-pass\nimage is taken from the original blurred image rather than the reconstructed pyramid (piping\nthe output of the L box directly to the subtraction in Figure 3.34b). This variant has less\n16 Then again, this is true for any smoothing kernel (Wells 1986).",
  "image_path": "page_172.jpg",
  "pages": [
    171,
    172,
    173
  ]
}