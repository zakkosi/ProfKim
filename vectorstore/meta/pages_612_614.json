{
  "doc_id": "pages_612_614",
  "text": "590\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\nFigure 12.8 Range data merging (Curless and Levoy 1996) c⃝1996 ACM: (a) two signed\ndistance functions (top left) are merged with their (weights) bottom left to produce a com-\nbined set of functions (right column) from which an isosurface can be extracted (green dashed\nline); (b) the signed distance functions are combined with empty and unseen space labels to\nﬁll holes in the isosurface.\ncomplete range data merging and isosurface extraction pipeline.\nVolumetric range data merging techniques based on signed distance or characteristic\n(inside–outside) functions are also widely used to extract smooth well-behaved surfaces from\noriented or unoriented sets of points (Hoppe, DeRose, Duchamp et al. 1992; Ohtake, Belyaev,\nAlexa et al. 2003; Kazhdan, Bolitho, and Hoppe 2006; Lempitsky and Boykov 2007; Zach,\nPock, and Bischof 2007b; Zach 2008), as discussed in more detail in Section 12.5.1.\n12.2.2 Application: Digital heritage\nActive rangeﬁnding technologies, combined with surface modeling and appearance model-\ning techniques (Section 12.7), are widely used in the ﬁelds of archeological and historical\npreservation, which often also goes under the name digital heritage (MacDonald 2006). In\nsuch applications, detailed 3D models of cultural objects are acquired and later used for ap-\nplications such as analysis, preservation, restoration, and the production of duplicate artwork\n(Rioux and Bird 1993).\nA more recent example of such an endeavor is the Digital Michelangelo project of Levoy,\nPulli, Curless et al. (2000), which used Cyberware laser stripe scanners and high-quality\ndigital SLR cameras mounted on a large gantry to obtain detailed scans of Michelangelo’s\nDavid and other sculptures in Florence. The project also took scans of the Forma Urbis\nRomae, an ancient stone map of Rome that had shattered into pieces, for which new matches\nwere obtained using digital techniques. The whole process, from initial planning, to software\n12.3 Surface representations\n591\n(a)\n(b)\n(c)\n(d)\n(e)\nFigure 12.9\nReconstruction and hardcopy of the “Happy Buddha” statuette (Curless and\nLevoy 1996) c⃝1996 ACM: (a) photograph of the original statue after spray painting with\nmatte gray; (b) partial range scan; (c) merged range scans; (d) colored rendering of the recon-\nstructed model; (e) hardcopy of the model constructed using stereolithography.\ndevelopment, acquisition, and post-processing, took several years (and many volunteers), and\nproduced a wealth of 3D shape and appearance modeling techniques as a result.\nEven larger-scale projects are now being attempted, for example, the scanning of com-\nplete temple sites such as Angkor-Thom (Ikeuchi and Sato 2001; Ikeuchi and Miyazaki 2007;\nBanno, Masuda, Oishi et al. 2008). Figure 12.10 shows details from this project, including a\nsample photograph, a detailed 3D (sculptural) head model scanned from ground level, and an\naerial overview of the ﬁnal merged 3D site model, which was acquired using a balloon.\n12.3 Surface representations\nIn previous sections, we have seen different representations being used to integrate 3D range\nscans. We now look at several of these representations in more detail. Explicit surface\nrepresentations, such as triangle meshes, splines (Farin 1992, 1996), and subdivision sur-\nfaces (Stollnitz, DeRose, and Salesin 1996; Zorin, Schr¨oder, and Sweldens 1996; Warren and\nWeimer 2001; Peters and Reif 2008), enable not only the creation of highly detailed models\nbut also processing operations, such as interpolation (Section 12.3.1), fairing or smoothing,\nand decimation and simpliﬁcation (Section 12.3.2). We also examine discrete point-based\nrepresentations (Section 12.4) and volumetric representations (Section 12.5).\n592\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\n(c)\nFigure 12.10 Laser range modeling of the Bayon temple at Angkor-Thom (Banno, Masuda,\nOishi et al. 2008) c⃝2008 Springer: (a) sample photograph from the site; (b) a detailed head\nmodel scanned from the ground; (c) ﬁnal merged 3D model of the temple scanned using a\nlaser range sensor mounted on a balloon.\n12.3.1 Surface interpolation\nOne of the most common operations on surfaces is their reconstruction from a set of sparse\ndata constraints, i.e. scattered data interpolation. When formulating such problems, surfaces\nmay be parameterized as height ﬁelds f(x), as 3D parametric surfaces f(x), or as non-\nparametric models such as collections of triangles.\nIn the section on image processing, we saw how two-dimensional function interpolation\nand approximation problems {di} →f(x) could be cast as energy minimization problems\nusing regularization (Section 3.7.1 (3.94–3.98).5 Such problems can also specify the locations\nof discontinuities in the surface as well as local orientation constraints (Terzopoulos 1986b;\nZhang, Dugas-Phocion, Samson et al. 2002).\nOne approach to solving such problems is to discretize both the surface and the energy\non a discrete grid or mesh using ﬁnite element analysis (3.100–3.102) (Terzopoulos 1986b).\nSuch problems can then be solved using sparse system solving techniques, such as multigrid\n(Briggs, Henson, and McCormick 2000) or hierarchically preconditioned conjugate gradient\n(Szeliski 2006b). The surface can also be represented using a hierarchical combination of\nmultilevel B-splines (Lee, Wolberg, and Shin 1996).\nAn alternative approach is to use radial basis (or kernel) functions (Boult and Kender\n1986; Nielson 1993). To interpolate a ﬁeld f(x) through (or near) a number of data values\ndi located at xi, the radial basis function approach uses\nf(x) =\nP\ni wi(x)di\nP\ni wi(x) ,\n(12.6)\n5 The difference between interpolation and approximation is that the former requires the surface or function to\npass through the data while the latter allows the function to pass near the data, and can therefore be used for surface\nsmoothing as well.",
  "image_path": "page_613.jpg",
  "pages": [
    612,
    613,
    614
  ]
}