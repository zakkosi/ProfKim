{
  "doc_id": "pages_324_326",
  "text": "302\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n  Object\nterminal\n  terminal\nBackground \np\nq\nr\nw\nv\nS\nT\nBackground \n  Object\n  terminal\nterminal\np\nq\nr\nw\nv\nS\nT\ncut\n(a)\n(b)\nFigure 5.23 Graph cuts for region segmentation (Boykov and Jolly 2001) c⃝2001 IEEE: (a)\nthe energy function is encoded as a maximum ﬂow problem; (b) the minimum cut determines\nthe region boundary.\n(a)\n(b)\n(c)\nFigure 5.24\nGrabCut image segmentation (Rother, Kolmogorov, and Blake 2004) c⃝2004\nACM: (a) the user draws a bounding box in red; (b) the algorithm guesses color distributions\nfor the object and background and performs a binary segmentation; (c) the process is repeated\nwith better region statistics.\nThe basic binary segmentation algorithm of Boykov and Jolly (2001) has been extended\nin a number of directions. The GrabCut system of Rother, Kolmogorov, and Blake (2004)\niteratively re-estimates the region statistics, which are modeled as a mixtures of Gaussians in\ncolor space. This allows their system to operate given minimal user input, such as a single\nbounding box (Figure 5.24a)—the background color model is initialized from a strip of pixels\naround the box outline. (The foreground color model is initialized from the interior pixels,\nbut quickly converges to a better estimate of the object.) The user can also place additional\nstrokes to reﬁne the segmentation as the solution progresses. In more recent work, Cui, Yang,\nWen et al. (2008) use color and edge models derived from previous segmentations of similar\nobjects to improve the local models used in GrabCut.\nAnother major extension to the original binary segmentation formulation is the addition of\n5.5 Graph cuts and energy-based methods\n303\nFigure 5.25\nSegmentation with a directed graph cut (Boykov and Funka-Lea 2006) c⃝2006\nSpringer: (a) directed graph; (b) image with seed points; (c) the undirected graph incorrectly\ncontinues the boundary along the bright object; (d) the directed graph correctly segments the\nlight gray region from its darker surround.\ndirected edges, which allows boundary regions to be oriented, e.g., to prefer light to dark tran-\nsitions or vice versa (Kolmogorov and Boykov 2005). Figure 5.25 shows an example where\nthe directed graph cut correctly segments the light gray liver from its dark gray surround. The\nsame approach can be used to measure the ﬂux exiting a region, i.e., the signed gradient pro-\njected normal to the region boundary. Combining oriented graphs with larger neighborhoods\nenables approximating continuous problems such as those traditionally solved using level sets\nin the globally optimal graph cut framework (Boykov and Kolmogorov 2003; Kolmogorov\nand Boykov 2005).\nEven more recent developments in graph cut-based segmentation techniques include the\naddition of connectivity priors to force the foreground to be in a single piece (Vicente, Kol-\nmogorov, and Rother 2008) and shape priors to use knowledge about an object’s shape during\nthe segmentation process (Lempitsky and Boykov 2007; Lempitsky, Blake, and Rother 2008).\nWhile optimizing the binary MRF energy (5.50) requires the use of combinatorial op-\ntimization techniques, such as maximum ﬂow, an approximate solution can be obtained by\nconverting the binary energy terms into quadratic energy terms deﬁned over a continuous\n[0, 1] random ﬁeld, which then becomes a classical membrane-based regularization problem\n(3.100–3.102). The resulting quadratic energy function can then be solved using standard\nlinear system solvers (3.102–3.103), although if speed is an issue, you should use multigrid\nor one of its variants (Appendix A.5).\nOnce the continuous solution has been computed, it\ncan be thresholded at 0.5 to yield a binary segmentation.\nThe [0, 1] continuous optimization problem can also be interpreted as computing the prob-\n304\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nability at each pixel that a random walker starting at that pixel ends up at one of the labeled\nseed pixels, which is also equivalent to computing the potential in a resistive grid where the\nresistors are equal to the edge weights (Grady 2006; Sinop and Grady 2007). K-way seg-\nmentations can also be computed by iterating through the seed labels, using a binary problem\nwith one label set to 1 and all the others set to 0 to compute the relative membership proba-\nbilities for each pixel. In follow-on work, Grady and Ali (2008) use a precomputation of the\neigenvectors of the linear system to make the solution with a novel set of seeds faster, which\nis related to the Laplacian matting problem presented in Section 10.4.3 (Levin, Acha, and\nLischinski 2008). Couprie, Grady, Najman et al. (2009) relate the random walker to water-\nsheds and other segmentation techniques. Singaraju, Grady, and Vidal (2008) add directed-\nedge constraints in order to support ﬂux, which makes the energy piecewise quadratic and\nhence not solvable as a single linear system. The random walker algorithm can also be used\nto solve the Mumford–Shah segmentation problem (Grady and Alvino 2008) and to com-\npute fast multigrid solutions (Grady 2008). A nice review of these techniques is given by\nSingaraju, Grady, Sinop et al. (2010).\nAn even faster way to compute a continuous [0, 1] approximate segmentation is to com-\npute weighted geodesic distances between the 0 and 1 seed regions (Bai and Sapiro 2009),\nwhich can also be used to estimate soft alpha mattes (Section 10.4.3). A related approach by\nCriminisi, Sharp, and Blake (2008) can be used to ﬁnd fast approximate solutions to general\nbinary Markov random ﬁeld optimization problems.\n5.5.1 Application: Medical image segmentation\nOne of the most promising applications of image segmentation is in the medical imaging\ndomain, where it can be used to segment anatomical tissues for later quantitative analysis.\nFigure 5.25 shows a binary graph cut with directed edges being used to segment the liver tis-\nsue (light gray) from its surrounding bone (white) and muscle (dark gray) tissue. Figure 5.26\nshows the segmentation of bones in a 256 × 256 × 119 computed X-ray tomography (CT)\nvolume. Without the powerful optimization techniques available in today’s image segmen-\ntation algorithms, such processing used to require much more laborious manual tracing of\nindividual X-ray slices.\nThe ﬁelds of medical image segmentation (McInerney and Terzopoulos 1996) and med-\nical image registration (Kybic and Unser 2003) (Section 8.3.1) are rich research ﬁelds with\ntheir own specialized conferences, such as Medical Imaging Computing and Computer As-\nsisted Intervention (MICCAI),11 and journals, such as Medical Image Analysis and IEEE\nTransactions on Medical Imaging. These can be great sources of references and ideas for\nresearch in this area.\n11http://www.miccai.org/.",
  "image_path": "page_325.jpg",
  "pages": [
    324,
    325,
    326
  ]
}