{
  "doc_id": "pages_616_618",
  "text": "594\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\n(c)\n(d)\nFigure 12.11 Progressive mesh representation of an airplane model (Hoppe 1996) c⃝1996\nACM: (a) base mesh M 0 (150 faces); (b) mesh M 175 (500 faces); (c) mesh M 425 (1000\nfaces); (d) original mesh M = M n (13,546 faces).\n12.3.2 Surface simpliﬁcation\nOnce a triangle mesh has been created from 3D data, it is often desirable to create a hierarchy\nof mesh models, for example, to control the displayed level of detail (LOD) in a computer\ngraphics application. (In essence, this is a 3D analog to image pyramids (Section 3.5).) One\napproach to doing this is to approximate a given mesh with one that has subdivision connec-\ntivity, over which a set of triangular wavelet coefﬁcients can then be computed (Eck, DeRose,\nDuchamp et al. 1995). A more continuous approach is to use sequential edge collapse opera-\ntions to go from the original ﬁne-resolution mesh to a coarse base-level mesh (Hoppe 1996).\nThe resulting progressive mesh (PM) representation can be used to render the 3D model at\narbitrary levels of detail, as shown in Figure 12.11.\n12.3.3 Geometry images\nWhile multi-resolution surface representations such as (Eck, DeRose, Duchamp et al. 1995;\nHoppe 1996) support level of detail operations, they still consist of an irregular collection of\ntriangles, which makes them more difﬁcult to compress and store in a cache-efﬁcient manner.7\nTo make the triangulation completely regular (uniform and gridded), Gu, Gortler, and\nHoppe (2002) describe how to create geometry images by cutting surface meshes along well-\nchosen lines and “ﬂattening” the resulting representation into a square. Figure 12.12a shows\nthe resulting (x, y, z) values of the surface mesh mapped over the unit square, while Fig-\nure 12.12b shows the associated (nx, ny, nz) normal map, i.e., the surface normals associ-\nated with each mesh vertex, which can be used to compensate for loss in visual ﬁdelity if the\noriginal geometry image is heavily compressed.\n7 Subdivision triangulations, such as those in (Eck, DeRose, Duchamp et al. 1995), are semi-regular, i.e., regular\n(ordered and nested) within each subdivided base triangle.\n12.4 Point-based representations\n595\n(x, y, z)\n+\n(nx, ny, nz)\n=⇒\n(a)\n(b)\n(c)\nFigure 12.12 Geometry images (Gu, Gortler, and Hoppe 2002) c⃝2002 ACM: (a) the 257×\n257 geometry image deﬁnes a mesh over the surface; (b) the 512 × 512 normal map deﬁnes\nvertex normals; (c) ﬁnal lit 3D model.\n12.4 Point-based representations\nAs we mentioned previously, triangle-based surface models assume that the topology (and\noften the rough shape) of the 3D model is known ahead of time. While it is possible to\nre-mesh a model as it is being deformed or ﬁtted, a simpler solution is to dispense with an\nexplicit triangle mesh altogether and to have triangle vertices behave as oriented points, or\nparticles, or surface elements (surfels) (Szeliski and Tonnesen 1992).\nIn order to endow the resulting particle system with internal smoothness constraints, pair-\nwise interaction potentials can be deﬁned that approximate the equivalent elastic bending\nenergies that would be obtained using local ﬁnite-element analysis.8 Instead of deﬁning the\nﬁnite element neighborhood for each particle (vertex) ahead of time, a soft inﬂuence function\nis used to couple nearby particles. The resulting 3D model can change both topology and par-\nticle density as it evolves and can therefore be used to interpolate partial 3D data with holes\n(Szeliski, Tonnesen, and Terzopoulos 1993b). Discontinuities in both the surface orientation\nand crease curves can also be modeled (Szeliski, Tonnesen, and Terzopoulos 1993a).\nTo render the particle system as a continuous surface, local dynamic triangulation heuris-\ntics (Szeliski and Tonnesen 1992) or direct surface element splatting (Pﬁster, Zwicker, van\nBaar et al. 2000) can be used. Another alternative is to ﬁrst convert the point cloud into an\nimplicit signed distance or inside–outside function, using either minimum signed distances\nto the oriented points (Hoppe, DeRose, Duchamp et al. 1992) or by interpolating a charac-\nteristic (inside–outside) function using radial basis functions (Turk and O’Brien 2002; Dinh,\nTurk, and Slabaugh 2002). Even greater precision over the implicit function ﬁtting, including\nthe ability to handle irregular point densities, can be obtained by computing a moving least\n8 As mentioned before, an alternative is to use sub-linear interaction potentials, which encourage the preservation\nof surface creases (Diebel, Thrun, and Br¨unig 2006).\n596\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(a)\n(b)\n(c)\n(d)\n(e)\nFigure 12.13 Point-based surface modeling with moving least squares (MLS) (Pauly, Keiser,\nKobbelt et al. 2003) c⃝2003 ACM: (a) a set of points (black dots) is turned into an implicit\ninside–outside function (black curve); (b) the signed distance to the nearest oriented point\ncan serve as an approximation to the inside–outside distance; (c) a set of oriented points\nwith variable sampling density representing a 3D surface (head model); (d) local estimate of\nsampling density, which is used in the moving least squares; (e) reconstructed continuous 3D\nsurface.\nsquares (MLS) estimate of the signed distance function (Alexa, Behr, Cohen-Or et al. 2003;\nPauly, Keiser, Kobbelt et al. 2003), as shown in Figure 12.13. Further improvements can\nbe obtained using local sphere ﬁtting (Guennebaud and Gross 2007), faster and more accu-\nrate re-sampling (Guennebaud, Germann, and Gross 2008), and kernel regression to better\ntolerate outliers (Oztireli, Guennebaud, and Gross 2008).\n12.5 Volumetric representations\nA third alternative for modeling 3D surfaces is to construct 3D volumetric inside–outside\nfunctions. We already saw examples of this in Section 11.6.1, where we looked at voxel color-\ning (Seitz and Dyer 1999), space carving (Kutulakos and Seitz 2000), and level set (Faugeras\nand Keriven 1998; Pons, Keriven, and Faugeras 2007) techniques for stereo matching, and\nSection 11.6.2, where we discussed using binary silhouette images to reconstruct volumes.\nIn this section, we look at continuous implicit (inside–outside) functions to represent 3D\nshape.\n12.5.1 Implicit surfaces and level sets\nWhile polyhedral and voxel-based representations can represent three-dimensional shapes\nto an arbitrary precision, they lack some of the intrinsic smoothness properties available\nwith continuous implicit surfaces, which use an indicator function (characteristic function)\nF(x, y, z) to indicate which 3D points are inside F(x, y, z) < 0 or outside F(x, y, z) > 0",
  "image_path": "page_617.jpg",
  "pages": [
    616,
    617,
    618
  ]
}