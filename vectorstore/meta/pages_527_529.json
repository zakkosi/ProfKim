{
  "doc_id": "pages_527_529",
  "text": "10.4 Image matting and compositing\n505\n(a)\n(b)\n(c)\nFigure 10.37 Colorization using optimization (Levin, Lischinski, and Weiss 2004) c⃝2004\nACM: (a) grayscale image some color scribbles overlaid; (b) resulting colorized image; (c)\noriginal color image from which the grayscale image and the chrominance values for the\nscribbles were derived. Original photograph by Rotem Weiss.\nspeciﬁed chrominance (u, v) values to the whole image, which are then re-combined with the\ninput luminance channel to produce a ﬁnal colorized image, as shown in Figure 10.37b. In the\nsystem developed by Levin, Lischinski, and Weiss (2004), the interpolation is performed us-\ning locally weighted regularization (3.100), where the local smoothness weights are inversely\nproportional to luminance gradients. This approach to locally weighted regularization has\ninspired later algorithms for high dynamic range tone mapping (Lischinski, Farbman, Uyt-\ntendaele et al. 2006a), see Section 10.2.1, as well as other applications of the weighted least\nsquares (WLS) formulation (Farbman, Fattal, Lischinski et al. 2008). An alternative approach\nto performing the sparse chrominance interpolation based on geodesic (edge-aware) distance\nfunctions has been developed by Yatziv and Sapiro (2006).\n10.4 Image matting and compositing\nImage matting and compositing is the process of cutting a foreground object out of one image\nand pasting it against a new background (Smith and Blinn 1996; Wang and Cohen 2007a).\nIt is commonly used in television and ﬁlm production to composite a live actor in front of\ncomputer-generated imagery such as weather maps or 3D virtual characters and scenery\n(Wright 2006; Brinkmann 2008).\nWe have already seen a number of tools for interactively segmenting objects in an image,\nincluding snakes (Section 5.1.1), scissors (Section 5.1.3), and GrabCut segmentation (Sec-\ntion 5.5). While these techniques can generate reasonable pixel-accurate segmentations, they\nfail to capture the subtle interplay of foreground and background colors at mixed pixels along\nthe boundary (Szeliski and Golland 1999) (Figure 10.38a).\nIn order to successfully copy a foreground object from one image to another without\n506\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nFigure 10.38\nSoftening a hard segmentation boundary (border matting) (Rother, Kol-\nmogorov, and Blake 2004) c⃝2004 ACM: (a) the region surrounding a segmentation bound-\nary where pixels of mixed foreground and background colors are visible; (b) pixel values\nalong the boundary are used to compute a soft alpha matte; (c) at each point along the curve\nt, a displacement ∆and a width σ are estimated.\nvisible discretization artifacts, we need to pull a matte, i.e., to estimate a soft opacity channel\nα and the uncontaminated foreground colors F from the input composite image C. Recall\nfrom Section 3.1.3 (Figure 3.4) that the compositing equation (3.8) can be written as\nC = (1 −α)B + αF.\n(10.30)\nThis operator attenuates the inﬂuence of the background image B by a factor (1 −α) and\nthen adds in the (partial) color values corresponding to the foreground element F.\nWhile the compositing operation is easy to implement, the reverse matting operation of\nestimating F, α, and B given an input image C is much more challenging (Figure 10.39).\nTo see why, observe that while the composite pixel color C provides three measurements,\nthe F, α, and B unknowns have a total of seven degrees of freedom. Devising techniques to\nestimate these unknowns despite the underconstrained nature of the problem is the essence of\nimage matting.\nIn this section, we review a number of image matting techniques. We begin with blue\nscreen matting, which assumes that the background is a constant known color, and discuss its\nvariants, two-screen matting (when multiple backgrounds can be used) and difference matting\n(where the known background is arbitrary). We then discuss local variants of natural image\nmatting, where both the foreground and background are unknown. In these applications, it is\nusual to ﬁrst specify a trimap, i.e., a three-way labeling of the image into foreground, back-\nground, and unknown regions (Figure 10.39b). Next, we present some global optimization\napproaches to natural image matting. Finally, we discuss variants on the matting problem,\nincluding shadow matting, ﬂash matting, and environment matting.\n10.4 Image matting and compositing\n507\n(a)\n(b)\n(c)\n(d)\n(e)\nFigure 10.39 Natural image matting (Chuang, Curless, Salesin et al. 2001) c⃝2001 IEEE:\n(a) input image with a “natural” (non-constant) background; (b) hand-drawn trimap—gray\nindicates unknown regions; (c) extracted alpha map; (d) extracted (premultiplied) foreground\ncolors; (e) composite over a new background.\n10.4.1 Blue screen matting\nBlue screen matting involves ﬁlming an actor (or object) in front of a constant colored back-\nground. While originally bright blue was the preferred color, bright green is now more com-\nmonly used (Wright 2006; Brinkmann 2008). Smith and Blinn (1996) discuss a number of\ntechniques for blue screen matting, which are mostly described in patents rather than in the\nopen research literature. Early techniques used linear combination of object color channels\nwith user-tuned parameters to estimate the opacity α.\nChuang, Curless, Salesin et al. (2001) describe a newer technique called Mishima’s al-\ngorithm, which involves ﬁtting two polyhedral surfaces (centered at the mean background\ncolor), separating the foreground and background color distributions and then measuring the\nrelative distance of a novel color to these surfaces to estimate α (Figure 10.41e). While this\ntechnique works well in many studio settings, it can still suffer from blue spill, where translu-\ncent pixels around the edges of an object acquire some of the background blue coloration\n(Figure 10.40).\nTwo-screen matting.\nIn their paper, Smith and Blinn (1996) also introduce an algorithm\ncalled triangulation matting that uses more than one known background color to over-constrain\nthe equations required to estimate the opacity α and foreground color F.",
  "image_path": "page_528.jpg",
  "pages": [
    527,
    528,
    529
  ]
}