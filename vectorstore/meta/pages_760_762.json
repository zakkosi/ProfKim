{
  "doc_id": "pages_760_762",
  "text": "738\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\nv0\nv1\nu0\nu1\nσ0\nσ1\nA\nFigure A.1 The action of a matrix A can be visualized by thinking of the domain as being\nspanned by a set of orthonormal vectors vj, each of which is transformed to a new orthogonal\nvector uj with a length σj. When A is interpreted as a covariance matrix and its eigenvalue\ndecomposition is performed, each of the uj axes denote a principal direction (component)\nand each σj denotes one standard deviation along that direction.\n(The eigenvector matrix U is sometimes written as Φ and the eigenvectors u as φ.) In this\ncase, the eigenvalues\nλ0 ≥λ1 ≥· · · ≥λn−1\n(A.7)\ncan be both positive and negative.2\nA special case of the symmetric matrix C occurs when it is constructed as the sum of a\nnumber of outer products\nC =\nX\ni\naiaT\ni = AAT ,\n(A.8)\nwhich often occurs when solving least squares problems (Appendix A.2), where the matrix A\nconsists of all the ai column vectors stacked side-by-side. In this case, we are guaranteed that\nall of the eigenvalues λi are non-negative. The associated matrix C is positive semi-deﬁnite\nxT Cx ≥0, ∀x.\n(A.9)\nIf the matrix C is of full rank, the eigenvalues are all positive and the matrix is called sym-\nmetric positive deﬁnite (SPD).\nSymmetric positive semi-deﬁnite matrices also arise in the statistical analysis of data,\nsince they represent the covariance of a set of {xi} points around their mean ¯x,\nC = 1\nn\nX\ni\n(xi −¯x)(xi −¯x)T .\n(A.10)\nIn this case, performing the eigenvalue decomposition is known as principal component anal-\nysis (PCA), since it models the principal directions (and magnitudes) of variation of the point\n2 Eigenvalue decompositions can be computed for non-symmetric matrices but the eigenvalues and eigenvectors\ncan have complex entries in that case.\nA.1 Matrix decompositions\n739\ndistribution around their mean, as shown in Section 5.1.1 (5.13–5.15), Section 14.2.1 (14.9),\nand Appendix B.1.1 (B.10). Figure A.1 shows how the principal components of the covari-\nance matrix C denote the principal axes uj of the uncertainty ellipsoid corresponding to this\npoint distribution and how the σj =\np\nλj denote the standard deviations along each axis.\nThe eigenvalues and eigenvectors of C and the singular values and singular vectors of A\nare closely related. Given\nA = UΣV T ,\n(A.11)\nwe get\nC = AAT = UΣV T V ΣU T = UΛU T .\n(A.12)\nFrom this, we see that λi = σ2\ni and that the left singular vectors of A are the eigenvectors of\nC.\nThis relationship gives us an efﬁcient method for computing the eigenvalue decomposi-\ntion of large matrices that are rank deﬁcient, such as the scatter matrices observed in comput-\ning eigenfaces (Section 14.2.1). Observe that the covariance matrix C in (14.9) is exactly the\nsame as C in (A.8). Note also that the individual difference-from-mean images ai = xi −¯x\nare long vectors of length P (the number of pixels in the image), while the total number of ex-\nemplars N (the number of faces in the training database) is much smaller. Instead of forming\nC = AAT , which is P × P, we form the matrix\nˆ\nC = AT A,\n(A.13)\nwhich is N × N. (This involves taking the dot product between every pair of difference\nimages ai and aj.) The eigenvalues of ˆ\nC are the squared singular values of A, namely Σ2,\nand are hence also the eigenvalues of C. The eigenvectors of ˆ\nC are the right singular vectors\nV of A, from which the desired eigenfaces U, which are the left singular vectors of A, can\nbe computed as\nU = AV Σ−1.\n(A.14)\nThis ﬁnal step is essentially computing the eigenfaces as linear combinations of the difference\nimages (Turk and Pentland 1991a). If you have access to a high-quality linear algebra pack-\nage such as LAPACK, routines for efﬁciently computing a small number of the left singular\nvectors and singular values of rectangular matrices such as A are usually provided (Ap-\npendix C.2). However, if storing all of the images in memory is prohibitive, the construction\nof ˆ\nC in (A.13) can be used instead.\nHow can eigenvalue and singular value decompositions actually be computed? Notice\nthat an eigenvector is deﬁned by the equation\nλiui = Cui\nor\n(λiI −C)ui = 0.\n(A.15)\n740\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\n(This can be derived from (A.6) by post-multiplying both sides by ui.) Since the latter equa-\ntion is homogeneous, i.e., it has a zero right-hand-side, it can only have a non-zero (non-\ntrivial) solution for ui if the system is rank deﬁcient, i.e.,\n|(λI −C)| = 0.\n(A.16)\nEvaluating this determinant yields a characteristic polynomial equation in λ, which can be\nsolved for small problems, e.g., 2 × 2 or 3 × 3 matrices, in closed form.\nFor larger matrices, iterative algorithms that ﬁrst reduce the matrix C to a real symmetric\ntridiagonal form using orthogonal transforms and then perform QR iterations are normally\nused (Golub and Van Loan 1996; Trefethen and Bau 1997; Bj¨orck and Dahlquist 2010). Since\nthese techniques are rather involved, it is best to use a linear algebra package such as LAPACK\n(Anderson, Bai, Bischof et al. 1999)—see Appendix C.2.\nFactorization with missing data requires different kinds of iterative algorithms, which of-\nten involve either hallucinating the missing terms or minimizing some weighted reconstruc-\ntion metric, which is intrinsically much more challenging than regular factorization. This\narea has been widely studied in computer vision (Shum, Ikeuchi, and Reddy 1995; De la\nTorre and Black 2003; Huynh, Hartley, and Heyden 2003; Buchanan and Fitzgibbon 2005;\nGross, Matthews, and Baker 2006; Torresani, Hertzmann, and Bregler 2008) and is some-\ntimes called generalized PCA. However, this term is also sometimes used to denote algebraic\nsubspace clustering techniques, which is the subject of a forthcoming monograph by Vidal,\nMa, and Sastry (2010).\nA.1.3 QR factorization\nA widely used technique for stably solving poorly conditioned least squares problems (Bj¨orck\n1996) and as the basis of more complex algorithms, such as computing the SVD and eigen-\nvalue decompositions, is the QR factorization,\nA = QR,\n(A.17)\nwhere Q is an orthonormal (or unitary) matrix QQT = I and R is upper triangular.3 In\ncomputer vision, QR can be used to convert a camera matrix into a rotation matrix and\nan upper-triangular calibration matrix (6.35) and also in various self-calibration algorithms\n(Section 7.2.2). The most common algorithms for computing QR decompositions, modiﬁed\nGram–Schmidt, Householder transformations, and Givens rotations, are described by Golub\nand Van Loan (1996), Trefethen and Bau (1997), and Bj¨orck and Dahlquist (2010) and are\n3 The term “R” comes from the German name for the lower–upper (LU) decomposition, which is LR for “links”\nand “rechts” (left and right of the diagonal).",
  "image_path": "page_761.jpg",
  "pages": [
    760,
    761,
    762
  ]
}