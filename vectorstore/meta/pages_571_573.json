{
  "doc_id": "pages_571_573",
  "text": "11.4 Local methods\n549\nFigure 11.8 Shiftable window (Scharstein and Szeliski 2002) c⃝2002 Springer. The effect\nof trying all 3 × 3 shifted windows around the black pixel is the same as taking the minimum\nmatching score across all centered (non-shifted) windows in the same neighborhood. (For\nclarity, only three of the neighboring shifted windows are shown here.)\n(a)\n(b)\n(c)\n(d)\nFigure 11.9\nAggregation window sizes and weights adapted to image content (Tombari,\nMattoccia, Di Stefano et al. 2008) c⃝2008 IEEE: (a) original image with selected evaluation\npoints; (b) variable windows (Veksler 2003); (c) adaptive weights (Yoon and Kweon 2006);\n(d) segmentation-based (Tombari, Mattoccia, and Di Stefano 2007). Notice how the adaptive\nweights and segmentation-based techniques adapt their support to similarly colored pixels.\ntable (Section 3.2.3, 3.30–3.32) (Veksler 2003). Selecting the right window is important,\nsince windows must be large enough to contain sufﬁcient texture and yet small enough so\nthat they do not straddle depth discontinuities (Figure 11.9). An alternative method for ag-\ngregation is iterative diffusion, i.e., repeatedly adding to each pixel’s cost the weighted values\nof its neighboring pixels’ costs (Szeliski and Hinton 1985; Shah 1993; Scharstein and Szeliski\n1998).\nOf the local aggregation methods compared by Gong, Yang, Wang et al. (2007) and\nTombari, Mattoccia, Di Stefano et al. (2008), the fast variable window approach of Vek-\nsler (2003) and the locally weighting approach developed by Yoon and Kweon (2006) con-\nsistently stood out as having the best tradeoff between performance and speed.5 The local\nweighting technique, in particular, is interesting because, instead of using square windows\nwith uniform weighting, each pixel within an aggregation window inﬂuences the ﬁnal match-\n5 More recent and extensive results from Tombari, Mattoccia, Di Stefano et al. (2008) can be found at http:\n//www.vision.deis.unibo.it/spe/SPEHome.aspx.\n550\nComputer Vision: Algorithms and Applications (September 3, 2010 draft)\ning cost based on its color similarity and spatial distance, just as in bilinear ﬁltering (Fig-\nure 11.9c). (In fact, their aggregation step is closely related to doing a joint bilateral ﬁlter\non the color/disparity image, except that it is done symmetrically in both reference and target\nimages.) The segmentation-based aggregation method of Tombari, Mattoccia, and Di Stefano\n(2007) did even better, although a fast implementation of this algorithm does not yet exist.\nIn local methods, the emphasis is on the matching cost computation and cost aggregation\nsteps. Computing the ﬁnal disparities is trivial: simply choose at each pixel the disparity\nassociated with the minimum cost value. Thus, these methods perform a local “winner-\ntake-all” (WTA) optimization at each pixel. A limitation of this approach (and many other\ncorrespondence algorithms) is that uniqueness of matches is only enforced for one image\n(the reference image), while points in the other image might match multiple points, unless\ncross-checking and subsequent hole ﬁlling is used (Fua 1993; Hirschm¨uller and Scharstein\n2009).\n11.4.1 Sub-pixel estimation and uncertainty\nMost stereo correspondence algorithms compute a set of disparity estimates in some dis-\ncretized space, e.g., for integer disparities (exceptions include continuous optimization tech-\nniques such as optical ﬂow (Bergen, Anandan, Hanna et al. 1992) or splines (Szeliski and\nCoughlan 1997)). For applications such as robot navigation or people tracking, these may be\nperfectly adequate. However for image-based rendering, such quantized maps lead to very\nunappealing view synthesis results, i.e., the scene appears to be made up of many thin shear-\ning layers. To remedy this situation, many algorithms apply a sub-pixel reﬁnement stage after\nthe initial discrete correspondence stage. (An alternative is to simply start with more discrete\ndisparity levels (Szeliski and Scharstein 2004).)\nSub-pixel disparity estimates can be computed in a variety of ways, including iterative\ngradient descent and ﬁtting a curve to the matching costs at discrete disparity levels (Ryan,\nGray, and Hunt 1980; Lucas and Kanade 1981; Tian and Huhns 1986; Matthies, Kanade,\nand Szeliski 1989; Kanade and Okutomi 1994). This provides an easy way to increase the\nresolution of a stereo algorithm with little additional computation. However, to work well,\nthe intensities being matched must vary smoothly, and the regions over which these estimates\nare computed must be on the same (correct) surface.\nRecently, some questions have been raised about the advisability of ﬁtting correlation\ncurves to integer-sampled matching costs (Shimizu and Okutomi 2001). This situation may\neven be worse when sampling-insensitive dissimilarity measures are used (Birchﬁeld and\nTomasi 1998). These issues are explored in more depth by Szeliski and Scharstein (2004).\nBesides sub-pixel computations, there are other ways of post-processing the computed\ndisparities. Occluded areas can be detected using cross-checking, i.e., comparing left-to-\n11.4 Local methods\n551\n(a)\n(b)\n(c)\nFigure 11.10 Uncertainty in stereo depth estimation (Szeliski 1991b): (a) input image; (b)\nestimated depth map (blue is closer); (c) estimated conﬁdence(red is higher). As you can see,\nmore textured areas have higher conﬁdence.\nright and right-to-left disparity maps (Fua 1993). A median ﬁlter can be applied to clean\nup spurious mismatches, and holes due to occlusion can be ﬁlled by surface ﬁtting or by\ndistributing neighboring disparity estimates (Birchﬁeld and Tomasi 1999; Scharstein 1999;\nHirschm¨uller and Scharstein 2009).\nAnother kind of post-processing, which can be useful in later processing stages, is to asso-\nciate conﬁdences with per-pixel depth estimates (Figure 11.10), which can be done by looking\nat the curvature of the correlation surface, i.e., how strong the minimum in the DSI image is\nat the winning disparity. Matthies, Kanade, and Szeliski (1989) show that under the assump-\ntion of small noise, photometrically calibrated images, and densely sampled disparities, the\nvariance of a local depth estimate can be estimated as\nV ar(d) = σ2\nI\na ,\n(11.7)\nwhere a is the curvature of the DSI as a function of d, which can be measured using a local\nparabolic ﬁt or by squaring all the horizontal gradients in the window, and σ2\nI is the vari-\nance of the image noise, which can be estimated from the minimum SSD score. (See also\nSection 6.1.4, (8.44), and Appendix B.6.)\n11.4.2 Application: Stereo-based head tracking\nA common application of real-time stereo algorithms is for tracking the position of a user\ninteracting with a computer or game system. The use of stereo can dramatically improve\nthe reliability of such a system compared to trying to use monocular color and intensity\ninformation (Darrell, Gordon, Harville et al. 2000). Once recovered, this information can\nbe used in a variety of applications, including controlling a virtual environment or game,",
  "image_path": "page_572.jpg",
  "pages": [
    571,
    572,
    573
  ]
}